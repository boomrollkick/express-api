{"version":3,"sources":["../../../../src/node_modules/ast-types/def/flow.js"],"names":["module","exports","fork","use","require","types","def","Type","or","defaults","bases","build","field","Number","String","Boolean","emptyArray","LegacyVariance"],"mappings":"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","file":"flow.js","sourcesContent":["module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n  fork.use(require(\"./type-annotations\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  // Base types\n\n  def(\"Flow\").bases(\"Node\");\n  def(\"FlowType\").bases(\"Flow\");\n\n  // Type annotations\n\n  def(\"AnyTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"EmptyTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"MixedTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"VoidTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NumberTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NumberLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Number)\n    .field(\"raw\", String);\n\n  // Babylon 6 differs in AST from Flow\n  // same as NumberLiteralTypeAnnotation\n  def(\"NumericLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Number)\n    .field(\"raw\", String);\n\n  def(\"StringTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"StringLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", String)\n    .field(\"raw\", String);\n\n  def(\"BooleanTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"BooleanLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Boolean)\n    .field(\"raw\", String);\n\n  def(\"TypeAnnotation\")\n    .bases(\"Node\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"FlowType\"));\n\n  def(\"NullableTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"FlowType\"));\n\n  def(\"NullLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NullTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ThisTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ExistsTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ExistentialTypeParam\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"FunctionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n    .field(\"params\", [def(\"FunctionTypeParam\")])\n    .field(\"returnType\", def(\"FlowType\"))\n    .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n\n  def(\"FunctionTypeParam\")\n    .bases(\"Node\")\n    .build(\"name\", \"typeAnnotation\", \"optional\")\n    .field(\"name\", def(\"Identifier\"))\n    .field(\"typeAnnotation\", def(\"FlowType\"))\n    .field(\"optional\", Boolean);\n\n  def(\"ArrayTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"elementType\")\n    .field(\"elementType\", def(\"FlowType\"));\n\n  def(\"ObjectTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"properties\", \"indexers\", \"callProperties\")\n    .field(\"properties\", [\n      or(def(\"ObjectTypeProperty\"),\n         def(\"ObjectTypeSpreadProperty\"))\n    ])\n    .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n    .field(\"callProperties\",\n           [def(\"ObjectTypeCallProperty\")],\n           defaults.emptyArray)\n    .field(\"exact\", Boolean, defaults[\"false\"]);\n\n  def(\"Variance\")\n    .bases(\"Node\")\n    .build(\"kind\")\n    .field(\"kind\", or(\"plus\", \"minus\"));\n\n  var LegacyVariance = or(\n    def(\"Variance\"),\n    \"plus\",\n    \"minus\",\n    null\n  );\n\n  def(\"ObjectTypeProperty\")\n    .bases(\"Node\")\n    .build(\"key\", \"value\", \"optional\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n    .field(\"value\", def(\"FlowType\"))\n    .field(\"optional\", Boolean)\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  def(\"ObjectTypeIndexer\")\n    .bases(\"Node\")\n    .build(\"id\", \"key\", \"value\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"key\", def(\"FlowType\"))\n    .field(\"value\", def(\"FlowType\"))\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  def(\"ObjectTypeCallProperty\")\n    .bases(\"Node\")\n    .build(\"value\")\n    .field(\"value\", def(\"FunctionTypeAnnotation\"))\n    .field(\"static\", Boolean, defaults[\"false\"]);\n\n  def(\"QualifiedTypeIdentifier\")\n    .bases(\"Node\")\n    .build(\"qualification\", \"id\")\n    .field(\"qualification\",\n           or(def(\"Identifier\"),\n              def(\"QualifiedTypeIdentifier\")))\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"GenericTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"id\", \"typeParameters\")\n    .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n    .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\n  def(\"MemberTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"object\", \"property\")\n    .field(\"object\", def(\"Identifier\"))\n    .field(\"property\",\n           or(def(\"MemberTypeAnnotation\"),\n              def(\"GenericTypeAnnotation\")));\n\n  def(\"UnionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"IntersectionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"TypeofTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"FlowType\"));\n\n  def(\"ObjectTypeSpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"FlowType\"));\n\n  def(\"TypeParameterDeclaration\")\n    .bases(\"Node\")\n    .build(\"params\")\n    .field(\"params\", [def(\"TypeParameter\")]);\n\n  def(\"TypeParameterInstantiation\")\n    .bases(\"Node\")\n    .build(\"params\")\n    .field(\"params\", [def(\"FlowType\")]);\n\n  def(\"TypeParameter\")\n    .bases(\"FlowType\")\n    .build(\"name\", \"variance\", \"bound\")\n    .field(\"name\", String)\n    .field(\"variance\", LegacyVariance, defaults[\"null\"])\n    .field(\"bound\",\n           or(def(\"TypeAnnotation\"), null),\n           defaults[\"null\"]);\n\n  def(\"ClassProperty\")\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  def(\"ClassImplements\")\n    .bases(\"Node\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n    .field(\"typeParameters\",\n           or(def(\"TypeParameterInstantiation\"), null),\n           defaults[\"null\"]);\n\n  def(\"InterfaceDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"body\", \"extends\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\",\n           or(def(\"TypeParameterDeclaration\"), null),\n           defaults[\"null\"])\n    .field(\"body\", def(\"ObjectTypeAnnotation\"))\n    .field(\"extends\", [def(\"InterfaceExtends\")]);\n\n  def(\"DeclareInterface\")\n    .bases(\"InterfaceDeclaration\")\n    .build(\"id\", \"body\", \"extends\");\n\n  def(\"InterfaceExtends\")\n    .bases(\"Node\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\n  def(\"TypeAlias\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"typeParameters\", \"right\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n    .field(\"right\", def(\"FlowType\"));\n\n  def(\"OpaqueType\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n    .field(\"implType\", def(\"FlowType\"))\n    .field(\"superType\", def(\"FlowType\"));\n\n  def(\"DeclareTypeAlias\")\n    .bases(\"TypeAlias\")\n    .build(\"id\", \"typeParameters\", \"right\");\n\n  def(\"DeclareOpaqueType\")\n    .bases(\"TypeAlias\")\n    .build(\"id\", \"typeParameters\", \"supertype\");\n\n  def(\"TypeCastExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\", \"typeAnnotation\")\n    .field(\"expression\", def(\"Expression\"))\n    .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n\n  def(\"TupleTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"DeclareVariable\")\n    .bases(\"Statement\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"DeclareFunction\")\n    .bases(\"Statement\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"DeclareClass\")\n    .bases(\"InterfaceDeclaration\")\n    .build(\"id\");\n\n  def(\"DeclareModule\")\n    .bases(\"Statement\")\n    .build(\"id\", \"body\")\n    .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n    .field(\"body\", def(\"BlockStatement\"));\n\n  def(\"DeclareModuleExports\")\n    .bases(\"Statement\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n\n  def(\"DeclareExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n    .field(\"default\", Boolean)\n    .field(\"declaration\", or(\n      def(\"DeclareVariable\"),\n      def(\"DeclareFunction\"),\n      def(\"DeclareClass\"),\n      def(\"FlowType\"), // Implies default.\n      null\n    ))\n    .field(\"specifiers\", [or(\n      def(\"ExportSpecifier\"),\n      def(\"ExportBatchSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"DeclareExportAllDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"source\")\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"FlowPredicate\").bases(\"Flow\");\n\n  def(\"InferredPredicate\")\n    .bases(\"FlowPredicate\")\n    .build();\n\n  def(\"DeclaredPredicate\")\n    .bases(\"FlowPredicate\")\n    .build(\"value\")\n    .field(\"value\", def(\"Expression\"));\n};\n"]}
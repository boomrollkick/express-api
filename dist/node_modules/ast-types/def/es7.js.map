{"version":3,"sources":["../../../../src/node_modules/ast-types/def/es7.js"],"names":["module","exports","fork","use","require","types","def","Type","or","builtin","builtInTypes","defaults","field","Boolean","bases","build"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/BA,OAAKC,GAAL,CAASC,QAAQ,OAAR,CAAT;;AAEA,MAAIC,QAAQH,KAAKC,GAAL,CAASC,QAAQ,cAAR,CAAT,CAAZ;AACA,MAAIE,MAAMD,MAAME,IAAN,CAAWD,GAArB;AACA,MAAIE,KAAKH,MAAME,IAAN,CAAWC,EAApB;AACA,MAAIC,UAAUJ,MAAMK,YAApB;AACA,MAAIC,WAAWT,KAAKC,GAAL,CAASC,QAAQ,eAAR,CAAT,EAAmCO,QAAlD;;AAEAL,MAAI,UAAJ,EACGM,KADH,CACS,OADT,EACkBC,OADlB,EAC2BF,SAAS,OAAT,CAD3B;;AAGAL,MAAI,gBAAJ,EACGQ,KADH,CACS,MADT,EAEGC,KAFH,CAES,UAFT,EAGGH,KAHH,CAGS,UAHT,EAGqBN,IAAI,YAAJ,CAHrB;;AAKAA,MAAI,kBAAJ,EACGM,KADH,CACS,YADT,EACuB,CAACJ,GACpBF,IAAI,UAAJ,CADoB,EAEpBA,IAAI,gBAAJ,CAFoB,EAGpBA,IAAI,eAAJ,CAHoB,CAAD,CADvB;;AAOAA,MAAI,uBAAJ,EACGQ,KADH,CACS,SADT,EAEGC,KAFH,CAES,UAFT,EAGGH,KAHH,CAGS,UAHT,EAGqBN,IAAI,SAAJ,CAHrB;;AAKAA,MAAI,eAAJ,EACGM,KADH,CACS,YADT,EACuB,CAACJ,GACpBF,IAAI,UAAJ,CADoB,EAEpBA,IAAI,iBAAJ,CAFoB,EAGpBA,IAAI,uBAAJ,CAHoB,CAAD,CADvB;;AAOAA,MAAI,iBAAJ,EACGQ,KADH,CACS,YADT,EAEGC,KAFH,CAES,UAFT,EAEqB,KAFrB,EAGGH,KAHH,CAGS,UAHT,EAGqBJ,GAAGF,IAAI,YAAJ,CAAH,EAAsB,IAAtB,CAHrB,EAIGM,KAJH,CAIS,KAJT,EAIgBC,OAJhB,EAIyBF,SAAS,OAAT,CAJzB;AAKD,CAzCD","file":"es7.js","sourcesContent":["module.exports = function (fork) {\n  fork.use(require('./es6'));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var builtin = types.builtInTypes;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"Function\")\n    .field(\"async\", Boolean, defaults[\"false\"]);\n\n  def(\"SpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"ObjectExpression\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"SpreadProperty\"),\n      def(\"SpreadElement\")\n    )]);\n\n  def(\"SpreadPropertyPattern\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"));\n\n  def(\"ObjectPattern\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"PropertyPattern\"),\n      def(\"SpreadPropertyPattern\")\n    )]);\n\n  def(\"AwaitExpression\")\n    .bases(\"Expression\")\n    .build(\"argument\", \"all\")\n    .field(\"argument\", or(def(\"Expression\"), null))\n    .field(\"all\", Boolean, defaults[\"false\"]);\n};\n"]}
{"version":3,"sources":["../../../../src/node_modules/ast-types/def/e4x.js"],"names":["module","exports","fork","use","require","types","def","Type","or","bases","field","Boolean","String"],"mappings":"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","file":"e4x.js","sourcesContent":["module.exports = function (fork) {\n    fork.use(require(\"./core\"));\n    var types = fork.use(require(\"../lib/types\"));\n    var def = types.Type.def;\n    var or = types.Type.or;\n\n    // Note that none of these types are buildable because the Mozilla Parser\n    // API doesn't specify any builder functions, and nobody uses E4X anymore.\n\n    def(\"XMLDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .field(\"namespace\", def(\"Expression\"));\n\n    def(\"XMLAnyName\").bases(\"Expression\");\n\n    def(\"XMLQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"left\", or(def(\"Identifier\"), def(\"XMLAnyName\")))\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLFunctionQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLAttributeSelector\")\n        .bases(\"Expression\")\n        .field(\"attribute\", def(\"Expression\"));\n\n    def(\"XMLFilterExpression\")\n        .bases(\"Expression\")\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    def(\"XMLElement\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLList\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XML\").bases(\"Node\");\n\n    def(\"XMLEscape\")\n        .bases(\"XML\")\n        .field(\"expression\", def(\"Expression\"));\n\n    def(\"XMLText\")\n        .bases(\"XML\")\n        .field(\"text\", String);\n\n    def(\"XMLStartTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLEndTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLPointTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLName\")\n        .bases(\"XML\")\n        .field(\"contents\", or(String, [def(\"XML\")]));\n\n    def(\"XMLAttribute\")\n        .bases(\"XML\")\n        .field(\"value\", String);\n\n    def(\"XMLCdata\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLComment\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLProcessingInstruction\")\n        .bases(\"XML\")\n        .field(\"target\", String)\n        .field(\"contents\", or(String, null));\n};"]}
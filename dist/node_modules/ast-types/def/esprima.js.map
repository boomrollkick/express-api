{"version":3,"sources":["../../../../src/node_modules/ast-types/def/esprima.js"],"names":["module","exports","fork","use","require","types","defaults","def","Type","or","field","bases","build","Boolean","emptyArray"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/BA,OAAKC,GAAL,CAASC,QAAQ,OAAR,CAAT;;AAEA,MAAIC,QAAQH,KAAKC,GAAL,CAASC,QAAQ,cAAR,CAAT,CAAZ;AACA,MAAIE,WAAWJ,KAAKC,GAAL,CAASC,QAAQ,eAAR,CAAT,EAAmCE,QAAlD;AACA,MAAIC,MAAMF,MAAMG,IAAN,CAAWD,GAArB;AACA,MAAIE,KAAKJ,MAAMG,IAAN,CAAWC,EAApB;;AAEAF,MAAI,qBAAJ,EACGG,KADH,CACS,cADT,EACyB,CAACD,GACtBF,IAAI,oBAAJ,CADsB,EAEtBA,IAAI,YAAJ,CAFsB,CAEJ;AAFI,GAAD,CADzB;;AAMAA,MAAI,UAAJ,EACGG,KADH,CACS,OADT,EACkBD,GACdF,IAAI,YAAJ,CADc,EAEdA,IAAI,SAAJ,CAFc,CAEC;AAFD,GADlB;;AAMAA,MAAI,cAAJ,EACGG,KADH,CACS,UADT,EACqB,CAACD,GAClBF,IAAI,SAAJ,CADkB,EAElBA,IAAI,eAAJ,CAFkB,EAGlB,IAHkB,CAAD,CADrB;;AAOAA,MAAI,eAAJ,EACGG,KADH,CACS,YADT,EACuB,CAACD,GACpBF,IAAI,UAAJ,CADoB,EAEpBA,IAAI,iBAAJ,CAFoB,EAGpBA,IAAI,uBAAJ,CAHoB,EAIpBA,IAAI,gBAAJ,CAJoB,CAIE;AAJF,GAAD,CADvB;;AAQA;AACA;AACAA,MAAI,iBAAJ,EACGI,KADH,CACS,iBADT,EAEGC,KAFH,CAES,IAFT,EAEe,MAFf;;AAIA;AACAL,MAAI,sBAAJ,EACGI,KADH,CACS,WADT,EAEGC,KAFH;;AAIAL,MAAI,mBAAJ,EACGI,KADH,CACS,aADT,EAEGC,KAFH,CAES,SAFT,EAEoB,aAFpB,EAEmC,YAFnC,EAEiD,QAFjD,EAGGF,KAHH,CAGS,SAHT,EAGoBG,OAHpB,EAIGH,KAJH,CAIS,aAJT,EAIwBD,GACpBF,IAAI,aAAJ,CADoB,EAEpBA,IAAI,YAAJ,CAFoB,EAED;AACnB,MAHoB,CAJxB,EASGG,KATH,CASS,YATT,EASuB,CAACD,GACpBF,IAAI,iBAAJ,CADoB,EAEpBA,IAAI,sBAAJ,CAFoB,CAAD,CATvB,EAYMD,SAASQ,UAZf,EAaGJ,KAbH,CAaS,QAbT,EAamBD,GACfF,IAAI,SAAJ,CADe,EAEf,IAFe,CAbnB,EAgBKD,SAAS,MAAT,CAhBL;;AAkBAC,MAAI,OAAJ,EACGI,KADH,CACS,SADT,EAEGC,KAFH,CAES,OAFT,EAEkB,aAAc,SAFhC,EAE2C,UAF3C;;AAIAL,MAAI,MAAJ,EACGI,KADH,CACS,SADT,EAEGC,KAFH,CAES,OAFT,EAEkB,aAAc,SAFhC,EAE2C,UAF3C;AAGD,CAvED","file":"esprima.js","sourcesContent":["module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n  var def = types.Type.def;\n  var or = types.Type.or;\n\n  def(\"VariableDeclaration\")\n    .field(\"declarations\", [or(\n      def(\"VariableDeclarator\"),\n      def(\"Identifier\") // Esprima deviation.\n    )]);\n\n  def(\"Property\")\n    .field(\"value\", or(\n      def(\"Expression\"),\n      def(\"Pattern\") // Esprima deviation.\n    ));\n\n  def(\"ArrayPattern\")\n    .field(\"elements\", [or(\n      def(\"Pattern\"),\n      def(\"SpreadElement\"),\n      null\n    )]);\n\n  def(\"ObjectPattern\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"PropertyPattern\"),\n      def(\"SpreadPropertyPattern\"),\n      def(\"SpreadProperty\") // Used by Esprima.\n    )]);\n\n  // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n  // export {<id [as name]>} [from ...];\n  def(\"ExportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"id\", \"name\");\n\n  // export <*> from ...;\n  def(\"ExportBatchSpecifier\")\n    .bases(\"Specifier\")\n    .build();\n\n  def(\"ExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n    .field(\"default\", Boolean)\n    .field(\"declaration\", or(\n      def(\"Declaration\"),\n      def(\"Expression\"), // Implies default.\n      null\n    ))\n    .field(\"specifiers\", [or(\n      def(\"ExportSpecifier\"),\n      def(\"ExportBatchSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"Block\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"Line\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n};\n"]}
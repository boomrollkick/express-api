{"version":3,"sources":["../../../../src/node_modules/ast-types/def/babel-core.js"],"names":["module","exports","fork","use","require","types","defaults","def","Type","or","bases","build","field","emptyArray","String","Number","rawValue","raw","getDefault","value","Boolean","RegExp","pattern","flags","ObjectExpressionProperty","ClassBodyElement","ObjectPatternProperty"],"mappings":"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","file":"babel-core.js","sourcesContent":["module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n  var def = types.Type.def;\n  var or = types.Type.or;\n\n  def(\"Noop\")\n    .bases(\"Statement\")\n    .build();\n\n  def(\"DoExpression\")\n    .bases(\"Expression\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")]);\n\n  def(\"Super\")\n    .bases(\"Expression\")\n    .build();\n\n  def(\"BindExpression\")\n    .bases(\"Expression\")\n    .build(\"object\", \"callee\")\n    .field(\"object\", or(def(\"Expression\"), null))\n    .field(\"callee\", def(\"Expression\"));\n\n  def(\"Decorator\")\n    .bases(\"Node\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"Property\")\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"MethodDefinition\")\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"MetaProperty\")\n    .bases(\"Expression\")\n    .build(\"meta\", \"property\")\n    .field(\"meta\", def(\"Identifier\"))\n    .field(\"property\", def(\"Identifier\"));\n\n  def(\"ParenthesizedExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"ImportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"imported\", \"local\")\n    .field(\"imported\", def(\"Identifier\"));\n\n  def(\"ImportDefaultSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\");\n\n  def(\"ImportNamespaceSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\");\n\n  def(\"ExportDefaultDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"declaration\")\n    .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n\n  def(\"ExportNamedDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"declaration\", \"specifiers\", \"source\")\n    .field(\"declaration\", or(def(\"Declaration\"), null))\n    .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n    .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n\n  def(\"ExportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\", \"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportNamespaceSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportDefaultSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportAllDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"exported\", \"source\")\n    .field(\"exported\", or(def(\"Identifier\"), null))\n    .field(\"source\", def(\"Literal\"));\n\n  def(\"CommentBlock\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"CommentLine\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"Directive\")\n    .bases(\"Node\")\n    .build(\"value\")\n    .field(\"value\", def(\"DirectiveLiteral\"));\n\n  def(\"DirectiveLiteral\")\n    .bases(\"Node\", \"Expression\")\n    .build(\"value\")\n    .field(\"value\", String, defaults[\"use strict\"]);\n\n  def(\"BlockStatement\")\n    .bases(\"Statement\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")])\n    .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n\n  def(\"Program\")\n    .bases(\"Node\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")])\n    .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n\n  // Split Literal\n  def(\"StringLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", String);\n\n  def(\"NumericLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", Number)\n    .field(\"raw\", or(String, null), defaults[\"null\"])\n    .field(\"extra\", {\n      rawValue: Number,\n      raw: String\n    }, function getDefault() {\n      return {\n        rawValue: this.value,\n        raw: this.value + \"\"\n      }\n    });\n\n  def(\"BigIntLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    // Only String really seems appropriate here, since BigInt values\n    // often exceed the limits of JS numbers.\n    .field(\"value\", or(String, Number))\n    .field(\"extra\", {\n      rawValue: String,\n      raw: String\n    }, function getDefault() {\n      return {\n        rawValue: String(this.value),\n        raw: this.value + \"n\"\n      };\n    });\n\n  def(\"NullLiteral\")\n    .bases(\"Literal\")\n    .build()\n    .field(\"value\", null, defaults[\"null\"]);\n\n  def(\"BooleanLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", Boolean);\n\n  def(\"RegExpLiteral\")\n    .bases(\"Literal\")\n    .build(\"pattern\", \"flags\")\n    .field(\"pattern\", String)\n    .field(\"flags\", String)\n    .field(\"value\", RegExp, function () {\n      return new RegExp(this.pattern, this.flags);\n    });\n\n  var ObjectExpressionProperty = or(\n    def(\"Property\"),\n    def(\"ObjectMethod\"),\n    def(\"ObjectProperty\"),\n    def(\"SpreadProperty\"),\n    def(\"SpreadElement\")\n  );\n\n  // Split Property -> ObjectProperty and ObjectMethod\n  def(\"ObjectExpression\")\n    .bases(\"Expression\")\n    .build(\"properties\")\n    .field(\"properties\", [ObjectExpressionProperty]);\n\n  // ObjectMethod hoist .value properties to own properties\n  def(\"ObjectMethod\")\n    .bases(\"Node\", \"Function\")\n    .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n    .field(\"kind\", or(\"method\", \"get\", \"set\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"params\", [def(\"Pattern\")])\n    .field(\"body\", def(\"BlockStatement\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"accessibility\", // TypeScript\n           or(def(\"Literal\"), null),\n           defaults[\"null\"])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"ObjectProperty\")\n    .bases(\"Node\")\n    .build(\"key\", \"value\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n    .field(\"accessibility\", // TypeScript\n           or(def(\"Literal\"), null),\n           defaults[\"null\"])\n    .field(\"computed\", Boolean, defaults[\"false\"]);\n\n  var ClassBodyElement = or(\n    def(\"MethodDefinition\"),\n    def(\"VariableDeclarator\"),\n    def(\"ClassPropertyDefinition\"),\n    def(\"ClassProperty\"),\n    def(\"ClassMethod\")\n  );\n\n  // MethodDefinition -> ClassMethod\n  def(\"ClassBody\")\n    .bases(\"Declaration\")\n    .build(\"body\")\n    .field(\"body\", [ClassBodyElement]);\n\n  def(\"ClassMethod\")\n    .bases(\"Declaration\", \"Function\")\n    .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n    .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"params\", [def(\"Pattern\")])\n    .field(\"body\", def(\"BlockStatement\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"static\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  var ObjectPatternProperty = or(\n    def(\"Property\"),\n    def(\"PropertyPattern\"),\n    def(\"SpreadPropertyPattern\"),\n    def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\") // Babel 6\n  );\n\n  // Split into RestProperty and SpreadProperty\n  def(\"ObjectPattern\")\n    .bases(\"Pattern\")\n    .build(\"properties\")\n    .field(\"properties\", [ObjectPatternProperty])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"SpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"RestProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"ForAwaitStatement\")\n    .bases(\"Statement\")\n    .build(\"left\", \"right\", \"body\")\n    .field(\"left\", or(\n      def(\"VariableDeclaration\"),\n      def(\"Expression\")))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\n  // The callee node of a dynamic import(...) expression.\n  def(\"Import\")\n    .bases(\"Expression\")\n    .build();\n};\n"]}
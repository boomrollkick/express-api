{"version":3,"sources":["../../../../src/node_modules/acorn/bin/_acorn.js"],"names":["path","require","fs","acorn","infile","forceFile","silent","compact","tokenize","options","help","status","print","console","log","error","basename","process","argv","exit","i","length","arg","locations","allowHashBang","sourceType","match","ecmaVersion","run","code","result","parse","tokenizer$$1","tokenizer","token","getToken","push","type","tokTypes","eof","e","message","JSON","stringify","readFileSync","stdin","resume","on","chunk"],"mappings":"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","file":"_acorn.js","sourcesContent":["\n'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar acorn = require('../dist/acorn.js');\n\nvar infile;\nvar forceFile;\nvar silent = false;\nvar compact = false;\nvar tokenize = false;\nvar options = {};\n\nfunction help(status) {\n  var print = (status === 0) ? console.log : console.error;\n  print(\"usage: \" + path.basename(process.argv[1]) + \" [--ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|...|--ecma2015|--ecma2016|--ecma2017|--ecma2018|...]\");\n  print(\"        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--module] [--help] [--] [infile]\");\n  process.exit(status);\n}\n\nfor (var i = 2; i < process.argv.length; ++i) {\n  var arg = process.argv[i];\n  if ((arg === \"-\" || arg[0] !== \"-\") && !infile) { infile = arg; }\n  else if (arg === \"--\" && !infile && i + 2 === process.argv.length) { forceFile = infile = process.argv[++i]; }\n  else if (arg === \"--locations\") { options.locations = true; }\n  else if (arg === \"--allow-hash-bang\") { options.allowHashBang = true; }\n  else if (arg === \"--silent\") { silent = true; }\n  else if (arg === \"--compact\") { compact = true; }\n  else if (arg === \"--help\") { help(0); }\n  else if (arg === \"--tokenize\") { tokenize = true; }\n  else if (arg === \"--module\") { options.sourceType = \"module\"; }\n  else {\n    var match = arg.match(/^--ecma(\\d+)$/);\n    if (match)\n      { options.ecmaVersion = +match[1]; }\n    else\n      { help(1); }\n  }\n}\n\nfunction run(code) {\n  var result;\n  try {\n    if (!tokenize) {\n      result = acorn.parse(code, options);\n    } else {\n      result = [];\n      var tokenizer$$1 = acorn.tokenizer(code, options), token;\n      do {\n        token = tokenizer$$1.getToken();\n        result.push(token);\n      } while (token.type !== acorn.tokTypes.eof)\n    }\n  } catch (e) {\n    console.error(e.message);\n    process.exit(1);\n  }\n  if (!silent) { console.log(JSON.stringify(result, null, compact ? null : 2)); }\n}\n\nif (forceFile || infile && infile !== \"-\") {\n  run(fs.readFileSync(infile, \"utf8\"));\n} else {\n  var code = \"\";\n  process.stdin.resume();\n  process.stdin.on(\"data\", function (chunk) { return code += chunk; });\n  process.stdin.on(\"end\", function () { return run(code); });\n}\n"]}
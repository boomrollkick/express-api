{"version":3,"sources":["../../../../src/node_modules/acorn/dist/acorn_loose.es.js"],"names":["noop","pluginsLoose","LooseParser","input","options","toks","tok","last","type","tokTypes","eof","start","end","validateRegExpFlags","validateRegExpPattern","locations","here","curPosition","loc","SourceLocation","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","inAsync","inFunction","loadPlugins","prototype","startNode","Node","storeCurrentPos","startNodeAt","pos","finishNode","node","ranges","range","dummyNode","dummy","name","dummyIdent","dummyString","value","raw","eat","next","isContextual","eatContextual","canInsertSemicolon","braceR","lineBreak","test","slice","semicolon","semi","expect","this$1","i","lookAhead","j","pushCx","push","popCx","pop","length","charCodeAt","indentationAfter","count","ch","tabSize","closes","closeTok","indent","line","blockHeuristic","tokenStartsLine","p","extend","f","pluginConfigs","plugin","Error","parse","parseTopLevel","lp","isSpace","shift","readToken","dot","substr","ecmaVersion","ellipsis","Token","e","SyntaxError","msg","message","raisedAt","replace","string","re","RegExp","regexp","template","resetTo","charAt","exprAllowed","curLine","lineStart","lineBreakG","lastIndex","match","exec","index","n","isDummy","lp$1","body","parseStatement","adaptDirectivePrologue","sourceType","starttype","kind","isLet","_var","_break","_continue","isBreak","label","parseIdent","_debugger","_do","_while","parseParenExpression","_for","isAwait","parenL","parseFor","_const","init$1","parseVar","declarations","_in","await","parseForIn","init","parseExpression","toAssignable","_function","parseFunction","_if","consequent","alternate","_else","_return","argument","_switch","blockIndent","discriminant","cases","braceL","cur","_case","_default","isCase","colon","_throw","_try","block","parseBlock","handler","_catch","clause","param","parseExprAtom","parenR","finalizer","_finally","_with","object","_class","parseClass","_import","parseImport","_export","parseExport","isAsyncFunction","expr","expression","update","left","right","noIn","decl","id","eq","parseMaybeAssign","comma","decl$1","isStatement","superClass","_extends","method","isGenerator","isAsync","static","star","parsePropertyName","key","computed","parseMethod","oldInAsync","oldInFunction","initFunction","generator","async","params","parseFunctionParams","source","fNode","declaration","keyword","specifiers","parseExportSpecifierList","elt","local","parseImportSpecifierList","unshift","elts","continuedLine","elt$1","imported","exported","lp$2","checkLVal","expressions","val","startsExpr","delegate","parseMaybeConditional","isAssign","node$1","operator","parseExprOps","question","parseExprOp","parseMaybeUnary","minPrec","prec","binop","rightStart","sawUnary","allowAwaitOutsideFunction","parseAwait","prefix","incDec","parseExprSubscripts","postfix","node$2","starstar","node$3","parseSubscripts","base","noCalls","startIndent","maybeAsyncArrow","property","parsePropertyAccessor","bracketL","bracketR","exprList","parseExprList","arrow","parseArrowExpression","callee","arguments","backQuote","tag","quasi","parseTemplate","_this","_super","regex","pattern","flags","num","_null","_true","_false","parenStart","inner","preserveParens","par","elements","parseObj","_new","parseNew","meta","parseTemplateElement","elem","invalidTemplate","cooked","tail","curElt","quasis","properties","prop","shorthand","isAsyncProp","assign","binding","list","toAssignableList","close","allowEmpty","defaultOptions","parse_dammit"],"mappings":"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","file":"acorn_loose.es.js","sourcesContent":["import { Node, SourceLocation, Token, addLooseExports, defaultOptions, getLineInfo, isNewLine, lineBreak, lineBreakG, tokTypes, tokenizer } from './acorn.es';\n\nfunction noop() {}\n\n// Registered plugins\nvar pluginsLoose = {};\n\nvar LooseParser = function LooseParser(input, options) {\n  if ( options === void 0 ) options = {};\n\n  this.toks = tokenizer(input, options);\n  this.options = this.toks.options;\n  this.input = this.toks.input;\n  this.tok = this.last = {type: tokTypes.eof, start: 0, end: 0};\n  this.tok.validateRegExpFlags = noop;\n  this.tok.validateRegExpPattern = noop;\n  if (this.options.locations) {\n    var here = this.toks.curPosition();\n    this.tok.loc = new SourceLocation(this.toks, here, here);\n  }\n  this.ahead = []; // Tokens ahead\n  this.context = []; // Indentation contexted\n  this.curIndent = 0;\n  this.curLineStart = 0;\n  this.nextLineStart = this.lineEnd(this.curLineStart) + 1;\n  this.inAsync = false;\n  this.inFunction = false;\n  // Load plugins\n  this.options.pluginsLoose = options.pluginsLoose || {};\n  this.loadPlugins(this.options.pluginsLoose);\n};\n\nLooseParser.prototype.startNode = function startNode () {\n  return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n};\n\nLooseParser.prototype.storeCurrentPos = function storeCurrentPos () {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n};\n\nLooseParser.prototype.startNodeAt = function startNodeAt (pos) {\n  if (this.options.locations) {\n    return new Node(this.toks, pos[0], pos[1])\n  } else {\n    return new Node(this.toks, pos)\n  }\n};\n\nLooseParser.prototype.finishNode = function finishNode (node, type) {\n  node.type = type;\n  node.end = this.last.end;\n  if (this.options.locations)\n    { node.loc.end = this.last.loc.end; }\n  if (this.options.ranges)\n    { node.range[1] = this.last.end; }\n  return node\n};\n\nLooseParser.prototype.dummyNode = function dummyNode (type) {\n  var dummy = this.startNode();\n  dummy.type = type;\n  dummy.end = dummy.start;\n  if (this.options.locations)\n    { dummy.loc.end = dummy.loc.start; }\n  if (this.options.ranges)\n    { dummy.range[1] = dummy.start; }\n  this.last = {type: tokTypes.name, start: dummy.start, end: dummy.start, loc: dummy.loc};\n  return dummy\n};\n\nLooseParser.prototype.dummyIdent = function dummyIdent () {\n  var dummy = this.dummyNode(\"Identifier\");\n  dummy.name = \"✖\";\n  return dummy\n};\n\nLooseParser.prototype.dummyString = function dummyString () {\n  var dummy = this.dummyNode(\"Literal\");\n  dummy.value = dummy.raw = \"✖\";\n  return dummy\n};\n\nLooseParser.prototype.eat = function eat (type) {\n  if (this.tok.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\nLooseParser.prototype.isContextual = function isContextual (name) {\n  return this.tok.type === tokTypes.name && this.tok.value === name\n};\n\nLooseParser.prototype.eatContextual = function eatContextual (name) {\n  return this.tok.value === name && this.eat(tokTypes.name)\n};\n\nLooseParser.prototype.canInsertSemicolon = function canInsertSemicolon () {\n  return this.tok.type === tokTypes.eof || this.tok.type === tokTypes.braceR ||\n    lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n};\n\nLooseParser.prototype.semicolon = function semicolon () {\n  return this.eat(tokTypes.semi)\n};\n\nLooseParser.prototype.expect = function expect (type) {\n    var this$1 = this;\n\n  if (this.eat(type)) { return true }\n  for (var i = 1; i <= 2; i++) {\n    if (this$1.lookAhead(i).type === type) {\n      for (var j = 0; j < i; j++) { this$1.next(); }\n      return true\n    }\n  }\n};\n\nLooseParser.prototype.pushCx = function pushCx () {\n  this.context.push(this.curIndent);\n};\n\nLooseParser.prototype.popCx = function popCx () {\n  this.curIndent = this.context.pop();\n};\n\nLooseParser.prototype.lineEnd = function lineEnd (pos) {\n  while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) { ++pos; }\n  return pos\n};\n\nLooseParser.prototype.indentationAfter = function indentationAfter (pos) {\n    var this$1 = this;\n\n  for (var count = 0;; ++pos) {\n    var ch = this$1.input.charCodeAt(pos);\n    if (ch === 32) { ++count; }\n    else if (ch === 9) { count += this$1.options.tabSize; }\n    else { return count }\n  }\n};\n\nLooseParser.prototype.closes = function closes (closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === tokTypes.eof) { return true }\n  return line !== this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n};\n\nLooseParser.prototype.tokenStartsLine = function tokenStartsLine () {\n    var this$1 = this;\n\n  for (var p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    var ch = this$1.input.charCodeAt(p);\n    if (ch !== 9 && ch !== 32) { return false }\n  }\n  return true\n};\n\nLooseParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nLooseParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = pluginsLoose[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nLooseParser.prototype.parse = function parse () {\n  this.next();\n  return this.parseTopLevel()\n};\n\nvar lp = LooseParser.prototype;\n\nfunction isSpace(ch) {\n  return (ch < 14 && ch > 8) || ch === 32 || ch === 160 || isNewLine(ch)\n}\n\nlp.next = function() {\n  var this$1 = this;\n\n  this.last = this.tok;\n  if (this.ahead.length)\n    { this.tok = this.ahead.shift(); }\n  else\n    { this.tok = this.readToken(); }\n\n  if (this.tok.start >= this.nextLineStart) {\n    while (this.tok.start >= this.nextLineStart) {\n      this$1.curLineStart = this$1.nextLineStart;\n      this$1.nextLineStart = this$1.lineEnd(this$1.curLineStart) + 1;\n    }\n    this.curIndent = this.indentationAfter(this.curLineStart);\n  }\n};\n\nlp.readToken = function() {\n  var this$1 = this;\n\n  for (;;) {\n    try {\n      this$1.toks.next();\n      if (this$1.toks.type === tokTypes.dot &&\n          this$1.input.substr(this$1.toks.end, 1) === \".\" &&\n          this$1.options.ecmaVersion >= 6) {\n        this$1.toks.end++;\n        this$1.toks.type = tokTypes.ellipsis;\n      }\n      return new Token(this$1.toks)\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) { throw e }\n\n      // Try to skip some text, based on the error message, and then continue\n      var msg = e.message, pos = e.raisedAt, replace = true;\n      if (/unterminated/i.test(msg)) {\n        pos = this$1.lineEnd(e.pos + 1);\n        if (/string/.test(msg)) {\n          replace = {start: e.pos, end: pos, type: tokTypes.string, value: this$1.input.slice(e.pos + 1, pos)};\n        } else if (/regular expr/i.test(msg)) {\n          var re = this$1.input.slice(e.pos, pos);\n          try { re = new RegExp(re); } catch (e) { /* ignore compilation error due to new syntax */ }\n          replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re};\n        } else if (/template/.test(msg)) {\n          replace = {\n            start: e.pos,\n            end: pos,\n            type: tokTypes.template,\n            value: this$1.input.slice(e.pos, pos)\n          };\n        } else {\n          replace = false;\n        }\n      } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {\n        while (pos < this.input.length && !isSpace(this.input.charCodeAt(pos))) { ++pos; }\n      } else if (/character escape|expected hexadecimal/i.test(msg)) {\n        while (pos < this.input.length) {\n          var ch = this$1.input.charCodeAt(pos++);\n          if (ch === 34 || ch === 39 || isNewLine(ch)) { break }\n        }\n      } else if (/unexpected character/i.test(msg)) {\n        pos++;\n        replace = false;\n      } else if (/regular expression/i.test(msg)) {\n        replace = true;\n      } else {\n        throw e\n      }\n      this$1.resetTo(pos);\n      if (replace === true) { replace = {start: pos, end: pos, type: tokTypes.name, value: \"✖\"}; }\n      if (replace) {\n        if (this$1.options.locations)\n          { replace.loc = new SourceLocation(\n            this$1.toks,\n            getLineInfo(this$1.input, replace.start),\n            getLineInfo(this$1.input, replace.end)); }\n        return replace\n      }\n    }\n  }\n};\n\nlp.resetTo = function(pos) {\n  var this$1 = this;\n\n  this.toks.pos = pos;\n  var ch = this.input.charAt(pos - 1);\n  this.toks.exprAllowed = !ch || /[[{(,;:?/*=+\\-~!|&%^<>]/.test(ch) ||\n    /[enwfd]/.test(ch) &&\n    /\\b(case|else|return|throw|new|in|(instance|type)?of|delete|void)$/.test(this.input.slice(pos - 10, pos));\n\n  if (this.options.locations) {\n    this.toks.curLine = 1;\n    this.toks.lineStart = lineBreakG.lastIndex = 0;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < pos) {\n      ++this$1.toks.curLine;\n      this$1.toks.lineStart = match.index + match[0].length;\n    }\n  }\n};\n\nlp.lookAhead = function(n) {\n  var this$1 = this;\n\n  while (n > this.ahead.length)\n    { this$1.ahead.push(this$1.readToken()); }\n  return this.ahead[n - 1]\n};\n\nfunction isDummy(node) { return node.name === \"✖\" }\n\nvar lp$1 = LooseParser.prototype;\n\nlp$1.parseTopLevel = function() {\n  var this$1 = this;\n\n  var node = this.startNodeAt(this.options.locations ? [0, getLineInfo(this.input, 0)] : 0);\n  node.body = [];\n  while (this.tok.type !== tokTypes.eof) { node.body.push(this$1.parseStatement()); }\n  this.toks.adaptDirectivePrologue(node.body);\n  this.last = this.tok;\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nlp$1.parseStatement = function() {\n  var this$1 = this;\n\n  var starttype = this.tok.type, node = this.startNode(), kind;\n\n  if (this.toks.isLet()) {\n    starttype = tokTypes._var;\n    kind = \"let\";\n  }\n\n  switch (starttype) {\n  case tokTypes._break: case tokTypes._continue:\n    this.next();\n    var isBreak = starttype === tokTypes._break;\n    if (this.semicolon() || this.canInsertSemicolon()) {\n      node.label = null;\n    } else {\n      node.label = this.tok.type === tokTypes.name ? this.parseIdent() : null;\n      this.semicolon();\n    }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n\n  case tokTypes._debugger:\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n\n  case tokTypes._do:\n    this.next();\n    node.body = this.parseStatement();\n    node.test = this.eat(tokTypes._while) ? this.parseParenExpression() : this.dummyIdent();\n    this.semicolon();\n    return this.finishNode(node, \"DoWhileStatement\")\n\n  case tokTypes._for:\n    this.next(); // `for` keyword\n    var isAwait = this.options.ecmaVersion >= 9 && this.inAsync && this.eatContextual(\"await\");\n\n    this.pushCx();\n    this.expect(tokTypes.parenL);\n    if (this.tok.type === tokTypes.semi) { return this.parseFor(node, null) }\n    var isLet = this.toks.isLet();\n    if (isLet || this.tok.type === tokTypes._var || this.tok.type === tokTypes._const) {\n      var init$1 = this.parseVar(true, isLet ? \"let\" : this.tok.value);\n      if (init$1.declarations.length === 1 && (this.tok.type === tokTypes._in || this.isContextual(\"of\"))) {\n        if (this.options.ecmaVersion >= 9 && this.tok.type !== tokTypes._in) {\n          node.await = isAwait;\n        }\n        return this.parseForIn(node, init$1)\n      }\n      return this.parseFor(node, init$1)\n    }\n    var init = this.parseExpression(true);\n    if (this.tok.type === tokTypes._in || this.isContextual(\"of\")) {\n      if (this.options.ecmaVersion >= 9 && this.tok.type !== tokTypes._in) {\n        node.await = isAwait;\n      }\n      return this.parseForIn(node, this.toAssignable(init))\n    }\n    return this.parseFor(node, init)\n\n  case tokTypes._function:\n    this.next();\n    return this.parseFunction(node, true)\n\n  case tokTypes._if:\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement();\n    node.alternate = this.eat(tokTypes._else) ? this.parseStatement() : null;\n    return this.finishNode(node, \"IfStatement\")\n\n  case tokTypes._return:\n    this.next();\n    if (this.eat(tokTypes.semi) || this.canInsertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n\n  case tokTypes._switch:\n    var blockIndent = this.curIndent, line = this.curLineStart;\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.pushCx();\n    this.expect(tokTypes.braceL);\n\n    var cur;\n    while (!this.closes(tokTypes.braceR, blockIndent, line, true)) {\n      if (this$1.tok.type === tokTypes._case || this$1.tok.type === tokTypes._default) {\n        var isCase = this$1.tok.type === tokTypes._case;\n        if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this$1.startNode());\n        cur.consequent = [];\n        this$1.next();\n        if (isCase) { cur.test = this$1.parseExpression(); }\n        else { cur.test = null; }\n        this$1.expect(tokTypes.colon);\n      } else {\n        if (!cur) {\n          node.cases.push(cur = this$1.startNode());\n          cur.consequent = [];\n          cur.test = null;\n        }\n        cur.consequent.push(this$1.parseStatement());\n      }\n    }\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.popCx();\n    this.eat(tokTypes.braceR);\n    return this.finishNode(node, \"SwitchStatement\")\n\n  case tokTypes._throw:\n    this.next();\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n\n  case tokTypes._try:\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.tok.type === tokTypes._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(tokTypes.parenL)) {\n        clause.param = this.toAssignable(this.parseExprAtom(), true);\n        this.expect(tokTypes.parenR);\n      } else {\n        clause.param = null;\n      }\n      clause.body = this.parseBlock();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(tokTypes._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) { return node.block }\n    return this.finishNode(node, \"TryStatement\")\n\n  case tokTypes._var:\n  case tokTypes._const:\n    return this.parseVar(false, kind || this.tok.value)\n\n  case tokTypes._while:\n    this.next();\n    node.test = this.parseParenExpression();\n    node.body = this.parseStatement();\n    return this.finishNode(node, \"WhileStatement\")\n\n  case tokTypes._with:\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement();\n    return this.finishNode(node, \"WithStatement\")\n\n  case tokTypes.braceL:\n    return this.parseBlock()\n\n  case tokTypes.semi:\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n\n  case tokTypes._class:\n    return this.parseClass(true)\n\n  case tokTypes._import:\n    return this.parseImport()\n\n  case tokTypes._export:\n    return this.parseExport()\n\n  default:\n    if (this.toks.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(node, true, true)\n    }\n    var expr = this.parseExpression();\n    if (isDummy(expr)) {\n      this.next();\n      if (this.tok.type === tokTypes.eof) { return this.finishNode(node, \"EmptyStatement\") }\n      return this.parseStatement()\n    } else if (starttype === tokTypes.name && expr.type === \"Identifier\" && this.eat(tokTypes.colon)) {\n      node.body = this.parseStatement();\n      node.label = expr;\n      return this.finishNode(node, \"LabeledStatement\")\n    } else {\n      node.expression = expr;\n      this.semicolon();\n      return this.finishNode(node, \"ExpressionStatement\")\n    }\n  }\n};\n\nlp$1.parseBlock = function() {\n  var this$1 = this;\n\n  var node = this.startNode();\n  this.pushCx();\n  this.expect(tokTypes.braceL);\n  var blockIndent = this.curIndent, line = this.curLineStart;\n  node.body = [];\n  while (!this.closes(tokTypes.braceR, blockIndent, line, true))\n    { node.body.push(this$1.parseStatement()); }\n  this.popCx();\n  this.eat(tokTypes.braceR);\n  return this.finishNode(node, \"BlockStatement\")\n};\n\nlp$1.parseFor = function(node, init) {\n  node.init = init;\n  node.test = node.update = null;\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.semi) { node.test = this.parseExpression(); }\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.parenR) { node.update = this.parseExpression(); }\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  node.body = this.parseStatement();\n  return this.finishNode(node, \"ForStatement\")\n};\n\nlp$1.parseForIn = function(node, init) {\n  var type = this.tok.type === tokTypes._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  node.body = this.parseStatement();\n  return this.finishNode(node, type)\n};\n\nlp$1.parseVar = function(noIn, kind) {\n  var this$1 = this;\n\n  var node = this.startNode();\n  node.kind = kind;\n  this.next();\n  node.declarations = [];\n  do {\n    var decl = this$1.startNode();\n    decl.id = this$1.options.ecmaVersion >= 6 ? this$1.toAssignable(this$1.parseExprAtom(), true) : this$1.parseIdent();\n    decl.init = this$1.eat(tokTypes.eq) ? this$1.parseMaybeAssign(noIn) : null;\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n  } while (this.eat(tokTypes.comma))\n  if (!node.declarations.length) {\n    var decl$1 = this.startNode();\n    decl$1.id = this.dummyIdent();\n    node.declarations.push(this.finishNode(decl$1, \"VariableDeclarator\"));\n  }\n  if (!noIn) { this.semicolon(); }\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\nlp$1.parseClass = function(isStatement) {\n  var this$1 = this;\n\n  var node = this.startNode();\n  this.next();\n  if (this.tok.type === tokTypes.name) { node.id = this.parseIdent(); }\n  else if (isStatement === true) { node.id = this.dummyIdent(); }\n  else { node.id = null; }\n  node.superClass = this.eat(tokTypes._extends) ? this.parseExpression() : null;\n  node.body = this.startNode();\n  node.body.body = [];\n  this.pushCx();\n  var indent = this.curIndent + 1, line = this.curLineStart;\n  this.eat(tokTypes.braceL);\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    if (this$1.semicolon()) { continue }\n    var method = this$1.startNode(), isGenerator = (void 0), isAsync = (void 0);\n    if (this$1.options.ecmaVersion >= 6) {\n      method.static = false;\n      isGenerator = this$1.eat(tokTypes.star);\n    }\n    this$1.parsePropertyName(method);\n    if (isDummy(method.key)) { if (isDummy(this$1.parseMaybeAssign())) { this$1.next(); } this$1.eat(tokTypes.comma); continue }\n    if (method.key.type === \"Identifier\" && !method.computed && method.key.name === \"static\" &&\n        (this$1.tok.type !== tokTypes.parenL && this$1.tok.type !== tokTypes.braceL)) {\n      method.static = true;\n      isGenerator = this$1.eat(tokTypes.star);\n      this$1.parsePropertyName(method);\n    } else {\n      method.static = false;\n    }\n    if (!method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.tok.type !== tokTypes.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true;\n      isGenerator = this$1.options.ecmaVersion >= 9 && this$1.eat(tokTypes.star);\n      this$1.parsePropertyName(method);\n    } else {\n      isAsync = false;\n    }\n    if (this$1.options.ecmaVersion >= 5 && method.key.type === \"Identifier\" &&\n        !method.computed && (method.key.name === \"get\" || method.key.name === \"set\") &&\n        this$1.tok.type !== tokTypes.parenL && this$1.tok.type !== tokTypes.braceL) {\n      method.kind = method.key.name;\n      this$1.parsePropertyName(method);\n      method.value = this$1.parseMethod(false);\n    } else {\n      if (!method.computed && !method.static && !isGenerator && !isAsync && (\n        method.key.type === \"Identifier\" && method.key.name === \"constructor\" ||\n          method.key.type === \"Literal\" && method.key.value === \"constructor\")) {\n        method.kind = \"constructor\";\n      } else {\n        method.kind = \"method\";\n      }\n      method.value = this$1.parseMethod(isGenerator, isAsync);\n    }\n    node.body.body.push(this$1.finishNode(method, \"MethodDefinition\"));\n  }\n  this.popCx();\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  this.semicolon();\n  this.finishNode(node.body, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\nlp$1.parseFunction = function(node, isStatement, isAsync) {\n  var oldInAsync = this.inAsync, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = this.eat(tokTypes.star);\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  if (this.tok.type === tokTypes.name) { node.id = this.parseIdent(); }\n  else if (isStatement === true) { node.id = this.dummyIdent(); }\n  this.inAsync = node.async;\n  this.inFunction = true;\n  node.params = this.parseFunctionParams();\n  node.body = this.parseBlock();\n  this.toks.adaptDirectivePrologue(node.body.body);\n  this.inAsync = oldInAsync;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\nlp$1.parseExport = function() {\n  var node = this.startNode();\n  this.next();\n  if (this.eat(tokTypes.star)) {\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : this.dummyString();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tokTypes._default)) {\n    // export default (function foo() {}) // This is FunctionExpression.\n    var isAsync;\n    if (this.tok.type === tokTypes._function || (isAsync = this.toks.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", isAsync);\n    } else if (this.tok.type === tokTypes._class) {\n      node.declaration = this.parseClass(\"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  if (this.tok.type.keyword || this.toks.isLet() || this.toks.isAsyncFunction()) {\n    node.declaration = this.parseStatement();\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifierList();\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : null;\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\nlp$1.parseImport = function() {\n  var node = this.startNode();\n  this.next();\n  if (this.tok.type === tokTypes.string) {\n    node.specifiers = [];\n    node.source = this.parseExprAtom();\n  } else {\n    var elt;\n    if (this.tok.type === tokTypes.name && this.tok.value !== \"from\") {\n      elt = this.startNode();\n      elt.local = this.parseIdent();\n      this.finishNode(elt, \"ImportDefaultSpecifier\");\n      this.eat(tokTypes.comma);\n    }\n    node.specifiers = this.parseImportSpecifierList();\n    node.source = this.eatContextual(\"from\") && this.tok.type === tokTypes.string ? this.parseExprAtom() : this.dummyString();\n    if (elt) { node.specifiers.unshift(elt); }\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\nlp$1.parseImportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = [];\n  if (this.tok.type === tokTypes.star) {\n    var elt = this.startNode();\n    this.next();\n    elt.local = this.eatContextual(\"as\") ? this.parseIdent() : this.dummyIdent();\n    elts.push(this.finishNode(elt, \"ImportNamespaceSpecifier\"));\n  } else {\n    var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart;\n    this.pushCx();\n    this.eat(tokTypes.braceL);\n    if (this.curLineStart > continuedLine) { continuedLine = this.curLineStart; }\n    while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n      var elt$1 = this$1.startNode();\n      if (this$1.eat(tokTypes.star)) {\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : this$1.dummyIdent();\n        this$1.finishNode(elt$1, \"ImportNamespaceSpecifier\");\n      } else {\n        if (this$1.isContextual(\"from\")) { break }\n        elt$1.imported = this$1.parseIdent();\n        if (isDummy(elt$1.imported)) { break }\n        elt$1.local = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt$1.imported;\n        this$1.finishNode(elt$1, \"ImportSpecifier\");\n      }\n      elts.push(elt$1);\n      this$1.eat(tokTypes.comma);\n    }\n    this.eat(tokTypes.braceR);\n    this.popCx();\n  }\n  return elts\n};\n\nlp$1.parseExportSpecifierList = function() {\n  var this$1 = this;\n\n  var elts = [];\n  var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart;\n  this.pushCx();\n  this.eat(tokTypes.braceL);\n  if (this.curLineStart > continuedLine) { continuedLine = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n    if (this$1.isContextual(\"from\")) { break }\n    var elt = this$1.startNode();\n    elt.local = this$1.parseIdent();\n    if (isDummy(elt.local)) { break }\n    elt.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent() : elt.local;\n    this$1.finishNode(elt, \"ExportSpecifier\");\n    elts.push(elt);\n    this$1.eat(tokTypes.comma);\n  }\n  this.eat(tokTypes.braceR);\n  this.popCx();\n  return elts\n};\n\nvar lp$2 = LooseParser.prototype;\n\nlp$2.checkLVal = function(expr) {\n  if (!expr) { return expr }\n  switch (expr.type) {\n  case \"Identifier\":\n  case \"MemberExpression\":\n    return expr\n\n  case \"ParenthesizedExpression\":\n    expr.expression = this.checkLVal(expr.expression);\n    return expr\n\n  default:\n    return this.dummyIdent()\n  }\n};\n\nlp$2.parseExpression = function(noIn) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos();\n  var expr = this.parseMaybeAssign(noIn);\n  if (this.tok.type === tokTypes.comma) {\n    var node = this.startNodeAt(start);\n    node.expressions = [expr];\n    while (this.eat(tokTypes.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\nlp$2.parseParenExpression = function() {\n  this.pushCx();\n  this.expect(tokTypes.parenL);\n  var val = this.parseExpression();\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  return val\n};\n\nlp$2.parseMaybeAssign = function(noIn) {\n  if (this.toks.isContextual(\"yield\")) {\n    var node = this.startNode();\n    this.next();\n    if (this.semicolon() || this.canInsertSemicolon() || (this.tok.type !== tokTypes.star && !this.tok.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tokTypes.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  }\n\n  var start = this.storeCurrentPos();\n  var left = this.parseMaybeConditional(noIn);\n  if (this.tok.type.isAssign) {\n    var node$1 = this.startNodeAt(start);\n    node$1.operator = this.tok.value;\n    node$1.left = this.tok.type === tokTypes.eq ? this.toAssignable(left) : this.checkLVal(left);\n    this.next();\n    node$1.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node$1, \"AssignmentExpression\")\n  }\n  return left\n};\n\nlp$2.parseMaybeConditional = function(noIn) {\n  var start = this.storeCurrentPos();\n  var expr = this.parseExprOps(noIn);\n  if (this.eat(tokTypes.question)) {\n    var node = this.startNodeAt(start);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    node.alternate = this.expect(tokTypes.colon) ? this.parseMaybeAssign(noIn) : this.dummyIdent();\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\nlp$2.parseExprOps = function(noIn) {\n  var start = this.storeCurrentPos();\n  var indent = this.curIndent, line = this.curLineStart;\n  return this.parseExprOp(this.parseMaybeUnary(false), start, -1, noIn, indent, line)\n};\n\nlp$2.parseExprOp = function(left, start, minPrec, noIn, indent, line) {\n  if (this.curLineStart !== line && this.curIndent < indent && this.tokenStartsLine()) { return left }\n  var prec = this.tok.type.binop;\n  if (prec != null && (!noIn || this.tok.type !== tokTypes._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(start);\n      node.left = left;\n      node.operator = this.tok.value;\n      this.next();\n      if (this.curLineStart !== line && this.curIndent < indent && this.tokenStartsLine()) {\n        node.right = this.dummyIdent();\n      } else {\n        var rightStart = this.storeCurrentPos();\n        node.right = this.parseExprOp(this.parseMaybeUnary(false), rightStart, prec, noIn, indent, line);\n      }\n      this.finishNode(node, /&&|\\|\\|/.test(node.operator) ? \"LogicalExpression\" : \"BinaryExpression\");\n      return this.parseExprOp(node, start, minPrec, noIn, indent, line)\n    }\n  }\n  return left\n};\n\nlp$2.parseMaybeUnary = function(sawUnary) {\n  var this$1 = this;\n\n  var start = this.storeCurrentPos(), expr;\n  if (this.options.ecmaVersion >= 8 && this.toks.isContextual(\"await\") &&\n    (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))\n  ) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.tok.type.prefix) {\n    var node = this.startNode(), update = this.tok.type === tokTypes.incDec;\n    if (!update) { sawUnary = true; }\n    node.operator = this.tok.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(true);\n    if (update) { node.argument = this.checkLVal(node.argument); }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (this.tok.type === tokTypes.ellipsis) {\n    var node$1 = this.startNode();\n    this.next();\n    node$1.argument = this.parseMaybeUnary(sawUnary);\n    expr = this.finishNode(node$1, \"SpreadElement\");\n  } else {\n    expr = this.parseExprSubscripts();\n    while (this.tok.type.postfix && !this.canInsertSemicolon()) {\n      var node$2 = this$1.startNodeAt(start);\n      node$2.operator = this$1.tok.value;\n      node$2.prefix = false;\n      node$2.argument = this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$2, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(tokTypes.starstar)) {\n    var node$3 = this.startNodeAt(start);\n    node$3.operator = \"**\";\n    node$3.left = expr;\n    node$3.right = this.parseMaybeUnary(false);\n    return this.finishNode(node$3, \"BinaryExpression\")\n  }\n\n  return expr\n};\n\nlp$2.parseExprSubscripts = function() {\n  var start = this.storeCurrentPos();\n  return this.parseSubscripts(this.parseExprAtom(), start, false, this.curIndent, this.curLineStart)\n};\n\nlp$2.parseSubscripts = function(base, start, noCalls, startIndent, line) {\n  var this$1 = this;\n\n  for (;;) {\n    if (this$1.curLineStart !== line && this$1.curIndent <= startIndent && this$1.tokenStartsLine()) {\n      if (this$1.tok.type === tokTypes.dot && this$1.curIndent === startIndent)\n        { --startIndent; }\n      else\n        { return base }\n    }\n\n    var maybeAsyncArrow = base.type === \"Identifier\" && base.name === \"async\" && !this$1.canInsertSemicolon();\n\n    if (this$1.eat(tokTypes.dot)) {\n      var node = this$1.startNodeAt(start);\n      node.object = base;\n      if (this$1.curLineStart !== line && this$1.curIndent <= startIndent && this$1.tokenStartsLine())\n        { node.property = this$1.dummyIdent(); }\n      else\n        { node.property = this$1.parsePropertyAccessor() || this$1.dummyIdent(); }\n      node.computed = false;\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (this$1.tok.type === tokTypes.bracketL) {\n      this$1.pushCx();\n      this$1.next();\n      var node$1 = this$1.startNodeAt(start);\n      node$1.object = base;\n      node$1.property = this$1.parseExpression();\n      node$1.computed = true;\n      this$1.popCx();\n      this$1.expect(tokTypes.bracketR);\n      base = this$1.finishNode(node$1, \"MemberExpression\");\n    } else if (!noCalls && this$1.tok.type === tokTypes.parenL) {\n      var exprList = this$1.parseExprList(tokTypes.parenR);\n      if (maybeAsyncArrow && this$1.eat(tokTypes.arrow))\n        { return this$1.parseArrowExpression(this$1.startNodeAt(start), exprList, true) }\n      var node$2 = this$1.startNodeAt(start);\n      node$2.callee = base;\n      node$2.arguments = exprList;\n      base = this$1.finishNode(node$2, \"CallExpression\");\n    } else if (this$1.tok.type === tokTypes.backQuote) {\n      var node$3 = this$1.startNodeAt(start);\n      node$3.tag = base;\n      node$3.quasi = this$1.parseTemplate();\n      base = this$1.finishNode(node$3, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\nlp$2.parseExprAtom = function() {\n  var node;\n  switch (this.tok.type) {\n  case tokTypes._this:\n  case tokTypes._super:\n    var type = this.tok.type === tokTypes._this ? \"ThisExpression\" : \"Super\";\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, type)\n\n  case tokTypes.name:\n    var start = this.storeCurrentPos();\n    var id = this.parseIdent();\n    var isAsync = false;\n    if (id.name === \"async\" && !this.canInsertSemicolon()) {\n      if (this.eat(tokTypes._function))\n        { return this.parseFunction(this.startNodeAt(start), false, true) }\n      if (this.tok.type === tokTypes.name) {\n        id = this.parseIdent();\n        isAsync = true;\n      }\n    }\n    return this.eat(tokTypes.arrow) ? this.parseArrowExpression(this.startNodeAt(start), [id], isAsync) : id\n\n  case tokTypes.regexp:\n    node = this.startNode();\n    var val = this.tok.value;\n    node.regex = {pattern: val.pattern, flags: val.flags};\n    node.value = val.value;\n    node.raw = this.input.slice(this.tok.start, this.tok.end);\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.num: case tokTypes.string:\n    node = this.startNode();\n    node.value = this.tok.value;\n    node.raw = this.input.slice(this.tok.start, this.tok.end);\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes._null: case tokTypes._true: case tokTypes._false:\n    node = this.startNode();\n    node.value = this.tok.type === tokTypes._null ? null : this.tok.type === tokTypes._true;\n    node.raw = this.tok.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.parenL:\n    var parenStart = this.storeCurrentPos();\n    this.next();\n    var inner = this.parseExpression();\n    this.expect(tokTypes.parenR);\n    if (this.eat(tokTypes.arrow)) {\n      // (a,)=>a // SequenceExpression makes dummy in the last hole. Drop the dummy.\n      var params = inner.expressions || [inner];\n      if (params.length && isDummy(params[params.length - 1]))\n        { params.pop(); }\n      return this.parseArrowExpression(this.startNodeAt(parenStart), params)\n    }\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(parenStart);\n      par.expression = inner;\n      inner = this.finishNode(par, \"ParenthesizedExpression\");\n    }\n    return inner\n\n  case tokTypes.bracketL:\n    node = this.startNode();\n    node.elements = this.parseExprList(tokTypes.bracketR, true);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tokTypes.braceL:\n    return this.parseObj()\n\n  case tokTypes._class:\n    return this.parseClass(false)\n\n  case tokTypes._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case tokTypes._new:\n    return this.parseNew()\n\n  case tokTypes.backQuote:\n    return this.parseTemplate()\n\n  default:\n    return this.dummyIdent()\n  }\n};\n\nlp$2.parseNew = function() {\n  var node = this.startNode(), startIndent = this.curIndent, line = this.curLineStart;\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(tokTypes.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var start = this.storeCurrentPos();\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true, startIndent, line);\n  if (this.tok.type === tokTypes.parenL) {\n    node.arguments = this.parseExprList(tokTypes.parenR);\n  } else {\n    node.arguments = [];\n  }\n  return this.finishNode(node, \"NewExpression\")\n};\n\nlp$2.parseTemplateElement = function() {\n  var elem = this.startNode();\n\n  // The loose parser accepts invalid unicode escapes even in untagged templates.\n  if (this.tok.type === tokTypes.invalidTemplate) {\n    elem.value = {\n      raw: this.tok.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.tok.start, this.tok.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.tok.value\n    };\n  }\n  this.next();\n  elem.tail = this.tok.type === tokTypes.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\nlp$2.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.next();\n    node.expressions.push(this$1.parseExpression());\n    if (this$1.expect(tokTypes.braceR)) {\n      curElt = this$1.parseTemplateElement();\n    } else {\n      curElt = this$1.startNode();\n      curElt.value = {cooked: \"\", raw: \"\"};\n      curElt.tail = true;\n      this$1.finishNode(curElt, \"TemplateElement\");\n    }\n    node.quasis.push(curElt);\n  }\n  this.expect(tokTypes.backQuote);\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\nlp$2.parseObj = function() {\n  var this$1 = this;\n\n  var node = this.startNode();\n  node.properties = [];\n  this.pushCx();\n  var indent = this.curIndent + 1, line = this.curLineStart;\n  this.eat(tokTypes.braceL);\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    var prop = this$1.startNode(), isGenerator = (void 0), isAsync = (void 0), start = (void 0);\n    if (this$1.options.ecmaVersion >= 9 && this$1.eat(tokTypes.ellipsis)) {\n      prop.argument = this$1.parseMaybeAssign();\n      node.properties.push(this$1.finishNode(prop, \"SpreadElement\"));\n      this$1.eat(tokTypes.comma);\n      continue\n    }\n    if (this$1.options.ecmaVersion >= 6) {\n      start = this$1.storeCurrentPos();\n      prop.method = false;\n      prop.shorthand = false;\n      isGenerator = this$1.eat(tokTypes.star);\n    }\n    this$1.parsePropertyName(prop);\n    if (this$1.toks.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this$1.options.ecmaVersion >= 9 && this$1.eat(tokTypes.star);\n      this$1.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    if (isDummy(prop.key)) { if (isDummy(this$1.parseMaybeAssign())) { this$1.next(); } this$1.eat(tokTypes.comma); continue }\n    if (this$1.eat(tokTypes.colon)) {\n      prop.kind = \"init\";\n      prop.value = this$1.parseMaybeAssign();\n    } else if (this$1.options.ecmaVersion >= 6 && (this$1.tok.type === tokTypes.parenL || this$1.tok.type === tokTypes.braceL)) {\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this$1.parseMethod(isGenerator, isAsync);\n    } else if (this$1.options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n               !prop.computed && (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this$1.tok.type !== tokTypes.comma && this$1.tok.type !== tokTypes.braceR && this$1.tok.type !== tokTypes.eq)) {\n      prop.kind = prop.key.name;\n      this$1.parsePropertyName(prop);\n      prop.value = this$1.parseMethod(false);\n    } else {\n      prop.kind = \"init\";\n      if (this$1.options.ecmaVersion >= 6) {\n        if (this$1.eat(tokTypes.eq)) {\n          var assign = this$1.startNodeAt(start);\n          assign.operator = \"=\";\n          assign.left = prop.key;\n          assign.right = this$1.parseMaybeAssign();\n          prop.value = this$1.finishNode(assign, \"AssignmentExpression\");\n        } else {\n          prop.value = prop.key;\n        }\n      } else {\n        prop.value = this$1.dummyIdent();\n      }\n      prop.shorthand = true;\n    }\n    node.properties.push(this$1.finishNode(prop, \"Property\"));\n    this$1.eat(tokTypes.comma);\n  }\n  this.popCx();\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  return this.finishNode(node, \"ObjectExpression\")\n};\n\nlp$2.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tokTypes.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseExpression();\n      this.expect(tokTypes.bracketR);\n      return\n    } else {\n      prop.computed = false;\n    }\n  }\n  var key = (this.tok.type === tokTypes.num || this.tok.type === tokTypes.string) ? this.parseExprAtom() : this.parseIdent();\n  prop.key = key || this.dummyIdent();\n};\n\nlp$2.parsePropertyAccessor = function() {\n  if (this.tok.type === tokTypes.name || this.tok.type.keyword) { return this.parseIdent() }\n};\n\nlp$2.parseIdent = function() {\n  var name = this.tok.type === tokTypes.name ? this.tok.value : this.tok.type.keyword;\n  if (!name) { return this.dummyIdent() }\n  var node = this.startNode();\n  this.next();\n  node.name = name;\n  return this.finishNode(node, \"Identifier\")\n};\n\nlp$2.initFunction = function(node) {\n  node.id = null;\n  node.params = [];\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\nlp$2.toAssignable = function(node, binding) {\n  var this$1 = this;\n\n  if (!node || node.type === \"Identifier\" || (node.type === \"MemberExpression\" && !binding)) {\n    // Okay\n  } else if (node.type === \"ParenthesizedExpression\") {\n    this.toAssignable(node.expression, binding);\n  } else if (this.options.ecmaVersion < 6) {\n    return this.dummyIdent()\n  } else if (node.type === \"ObjectExpression\") {\n    node.type = \"ObjectPattern\";\n    for (var i = 0, list = node.properties; i < list.length; i += 1)\n      {\n      var prop = list[i];\n\n      this$1.toAssignable(prop, binding);\n    }\n  } else if (node.type === \"ArrayExpression\") {\n    node.type = \"ArrayPattern\";\n    this.toAssignableList(node.elements, binding);\n  } else if (node.type === \"Property\") {\n    this.toAssignable(node.value, binding);\n  } else if (node.type === \"SpreadElement\") {\n    node.type = \"RestElement\";\n    this.toAssignable(node.argument, binding);\n  } else if (node.type === \"AssignmentExpression\") {\n    node.type = \"AssignmentPattern\";\n    delete node.operator;\n  } else {\n    return this.dummyIdent()\n  }\n  return node\n};\n\nlp$2.toAssignableList = function(exprList, binding) {\n  var this$1 = this;\n\n  for (var i = 0, list = exprList; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    this$1.toAssignable(expr, binding);\n  }\n  return exprList\n};\n\nlp$2.parseFunctionParams = function(params) {\n  params = this.parseExprList(tokTypes.parenR);\n  return this.toAssignableList(params, true)\n};\n\nlp$2.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInAsync = this.inAsync, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = !!isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n  this.inAsync = node.async;\n  this.inFunction = true;\n  node.params = this.parseFunctionParams();\n  node.body = this.parseBlock();\n  this.toks.adaptDirectivePrologue(node.body.body);\n  this.inAsync = oldInAsync;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\nlp$2.parseArrowExpression = function(node, params, isAsync) {\n  var oldInAsync = this.inAsync, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n  this.inAsync = node.async;\n  this.inFunction = true;\n  node.params = this.toAssignableList(params, true);\n  node.expression = this.tok.type !== tokTypes.braceL;\n  if (node.expression) {\n    node.body = this.parseMaybeAssign();\n  } else {\n    node.body = this.parseBlock();\n    this.toks.adaptDirectivePrologue(node.body.body);\n  }\n  this.inAsync = oldInAsync;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\nlp$2.parseExprList = function(close, allowEmpty) {\n  var this$1 = this;\n\n  this.pushCx();\n  var indent = this.curIndent, line = this.curLineStart, elts = [];\n  this.next(); // Opening bracket\n  while (!this.closes(close, indent + 1, line)) {\n    if (this$1.eat(tokTypes.comma)) {\n      elts.push(allowEmpty ? null : this$1.dummyIdent());\n      continue\n    }\n    var elt = this$1.parseMaybeAssign();\n    if (isDummy(elt)) {\n      if (this$1.closes(close, indent, line)) { break }\n      this$1.next();\n    } else {\n      elts.push(elt);\n    }\n    this$1.eat(tokTypes.comma);\n  }\n  this.popCx();\n  if (!this.eat(close)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  return elts\n};\n\nlp$2.parseAwait = function() {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary();\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\n// Acorn: Loose parser\n//\n// This module provides an alternative parser (`parse_dammit`) that\n// exposes that same interface as `parse`, but will try to parse\n// anything as JavaScript, repairing syntax error the best it can.\n// There are circumstances in which it will raise an error and give\n// up, but they are very rare. The resulting AST will be a mostly\n// valid JavaScript AST (as per the [Mozilla parser API][api], except\n// that:\n//\n// - Return outside functions is allowed\n//\n// - Label consistency (no conflicts, break only to existing labels)\n//   is not enforced.\n//\n// - Bogus Identifier nodes with a name of `\"✖\"` are inserted whenever\n//   the parser got too confused to return anything meaningful.\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n//\n// The expected use for this is to *first* try `acorn.parse`, and only\n// if that fails switch to `parse_dammit`. The loose parser might\n// parse badly indented code incorrectly, so **don't** use it as\n// your default parser.\n//\n// Quite a lot of acorn.js is duplicated here. The alternative was to\n// add a *lot* of extra cruft to that file, making it less readable\n// and slower. Copying and editing the code allowed me to make\n// invasive changes and simplifications without creating a complicated\n// tangle.\n\ndefaultOptions.tabSize = 4;\n\n// eslint-disable-next-line camelcase\nfunction parse_dammit(input, options) {\n  return new LooseParser(input, options).parse()\n}\n\naddLooseExports(parse_dammit, LooseParser, pluginsLoose);\n\nexport { parse_dammit, LooseParser, pluginsLoose };\n"]}
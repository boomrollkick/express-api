{"version":3,"sources":["../../../../src/node_modules/argparse/lib/action_container.js"],"names":["format","require","c","$$","ActionHelp","ActionAppend","ActionAppendConstant","ActionCount","ActionStore","ActionStoreConstant","ActionStoreTrue","ActionStoreFalse","ActionVersion","ActionSubparsers","argumentErrorHelper","ActionContainer","module","exports","options","description","argumentDefault","prefixChars","conflictHandler","_registries","register","_getHandler","_actions","_optionStringActions","_actionGroups","_mutuallyExclusiveGroups","_defaults","_regexpNegativeNumber","RegExp","_hasNegativeNumberOptionals","ArgumentGroup","MutuallyExclusiveGroup","prototype","registryName","value","object","_registryGet","defaultValue","arguments","length","setDefaults","property","has","forEach","action","dest","getDefault","result","addArgument","args","Array","isArray","TypeError","indexOf","Error","_getPositional","_getOptional","ActionClass","_popActionClass","typeFunction","type","_addAction","addArgumentGroup","group","push","addMutuallyExclusiveGroup","self","_checkConflict","container","optionStrings","optionString","match","some","Boolean","_removeAction","actionIndex","splice","_addContainerActions","titleGroupMap","title","groupMap","actionHash","getName","_groupActions","mutexGroup","required","key","nargs","OPTIONAL","ZERO_OR_MORE","optionStringsLong","optionStringDest","trimChars","join","replace","actionClass","handlerString","handlerFuncName","capitalize","func","msg","optionStringActions","conflictOptionals","conflOptional","call","_handleConflictError","conflOptionals","conflicts","map","pair","_handleConflictResolve","conflictingAction","i"],"mappings":"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","file":"action_container.js","sourcesContent":["/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (typeof args === 'string') {\n    args = [ args ];\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n      required: group.required\n    });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this);  // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n        optionString,\n        prefixChars\n      ));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(\n        format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n      );\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([ optionString, conflOptional ]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) { return pair[0]; });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(\n    action,\n    format('Conflicting option string(s): %s', conflicts)\n  );\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};\n"]}
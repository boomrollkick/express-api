{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/argument/exclusive.js"],"names":["util","require","ArgumentGroup","MutuallyExclusiveGroup","module","exports","container","options","required","call","inherits","prototype","_addAction","action","msg","Error","_container","_groupActions","push","_removeAction","remove"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,gBAAgBD,QAAQ,SAAR,CAApB;;AAEA;;;;;;;;AAQA,IAAIE,yBAAyBC,OAAOC,OAAP,GAAiB,SAASF,sBAAT,CAAgCG,SAAhC,EAA2CC,OAA3C,EAAoD;AAChG,MAAIC,QAAJ;AACAD,YAAUA,WAAW,EAArB;AACAC,aAAWD,QAAQC,QAAR,IAAoB,KAA/B;AACAN,gBAAcO,IAAd,CAAmB,IAAnB,EAAyBH,SAAzB;AACA,OAAKE,QAAL,GAAgBA,QAAhB;AAED,CAPD;AAQAR,KAAKU,QAAL,CAAcP,sBAAd,EAAsCD,aAAtC;;AAGAC,uBAAuBQ,SAAvB,CAAiCC,UAAjC,GAA8C,UAAUC,MAAV,EAAkB;AAC9D,MAAIC,GAAJ;AACA,MAAID,OAAOL,QAAX,EAAqB;AACnBM,UAAM,+CAAN;AACA,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACDD,WAAS,KAAKG,UAAL,CAAgBJ,UAAhB,CAA2BC,MAA3B,CAAT;AACA,OAAKI,aAAL,CAAmBC,IAAnB,CAAwBL,MAAxB;AACA,SAAOA,MAAP;AACD,CATD;;AAYAV,uBAAuBQ,SAAvB,CAAiCQ,aAAjC,GAAiD,UAAUN,MAAV,EAAkB;AACjE,OAAKG,UAAL,CAAgBG,aAAhB,CAA8BN,MAA9B;AACA,OAAKI,aAAL,CAAmBG,MAAnB,CAA0BP,MAA1B;AACD,CAHD","file":"exclusive.js","sourcesContent":["/** internal\n * class MutuallyExclusiveGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ArgumentGroup = require('./group');\n\n/**\n * new MutuallyExclusiveGroup(container, options)\n * - container (object): main container\n * - options (object): options.required -> true/false\n *\n * `required` could be an argument itself, but making it a property of\n * the options argument is more consistent with the JS adaptation of the Python)\n **/\nvar MutuallyExclusiveGroup = module.exports = function MutuallyExclusiveGroup(container, options) {\n  var required;\n  options = options || {};\n  required = options.required || false;\n  ArgumentGroup.call(this, container);\n  this.required = required;\n\n};\nutil.inherits(MutuallyExclusiveGroup, ArgumentGroup);\n\n\nMutuallyExclusiveGroup.prototype._addAction = function (action) {\n  var msg;\n  if (action.required) {\n    msg = 'mutually exclusive arguments must be optional';\n    throw new Error(msg);\n  }\n  action = this._container._addAction(action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nMutuallyExclusiveGroup.prototype._removeAction = function (action) {\n  this._container._removeAction(action);\n  this._groupActions.remove(action);\n};\n\n"]}
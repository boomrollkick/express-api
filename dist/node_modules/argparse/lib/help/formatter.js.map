{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/help/formatter.js"],"names":["sprintf","require","c","$$","Section","parent","heading","_parent","_heading","_items","prototype","addItem","callback","push","formatHelp","formatter","itemHelp","_indent","map","item","obj","func","args","apply","_joinParts","_dedent","SUPPRESS","currentIndent","repeat","EOL","HelpFormatter","module","exports","options","_prog","prog","_maxHelpPosition","maxHelpPosition","_width","width","process","env","COLUMNS","_currentIndent","_indentIncriment","indentIncriment","_level","_actionMaxLength","_rootSection","_currentSection","_whitespaceMatcher","RegExp","_longBreakMatcher","Error","_addItem","startSection","section","bind","endSection","addText","text","_formatText","addUsage","usage","actions","groups","prefix","_formatUsage","addArgument","action","help","self","invocations","_formatActionInvocation","invocationLength","length","actionLength","_getSubactions","forEach","subaction","invocationNew","Math","max","_formatAction","addArguments","replace","trimChars","partStrings","filter","part","join","optionals","positionals","actionUsage","textWidth","isOptional","_formatActionsUsage","concat","regexpPart","optionalUsage","positionalUsage","optionalParts","match","positionalParts","_getLines","parts","indent","lines","line","lineLength","substr","groupActions","inserts","group","end","i","start","indexOf","_groupActions","arrayEqual","slice","required","actionIndex","optionString","argsDefault","argsString","splice","_formatArgs","dest","optionStrings","nargs","toUpperCase","trim","_fillText","helpText","helpLines","indentFirst","helpPosition","min","helpWidth","actionWidth","actionHeader","_expandHelp","_splitLines","charAt","format_func","_metavarFormatter","metavars","metavarDefault","result","metavar","choices","split","Array","isArray","Object","keys","size","buildMetavar","undefined","OPTIONAL","ZERO_OR_MORE","ONE_OR_MORE","REMAINDER","PARSER","params","actionProperty","actionValue","_getHelpString","delimiters","re","wrapStart","wrapEnd","delimiterIndex","exec","substring","index"],"mappings":"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","file":"formatter.js","sourcesContent":["/**\n * class HelpFormatter\n *\n * Formatter for generating usage messages and argument help strings. Only the\n * name of this class is considered a public API. All the methods provided by\n * the class are considered an implementation detail.\n *\n * Do not call in your code, use this class only for inherits your own forvatter\n *\n * ToDo add [additonal formatters][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#formatter-class\n **/\n'use strict';\n\nvar sprintf = require('sprintf-js').sprintf;\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\n\n\n/*:nodoc:* internal\n * new Support(parent, heding)\n * - parent (object): parent section\n * - heading (string): header string\n *\n **/\nfunction Section(parent, heading) {\n  this._parent = parent;\n  this._heading = heading;\n  this._items = [];\n}\n\n/*:nodoc:* internal\n * Section#addItem(callback) -> Void\n * - callback (array): tuple with function and args\n *\n * Add function for single element\n **/\nSection.prototype.addItem = function (callback) {\n  this._items.push(callback);\n};\n\n/*:nodoc:* internal\n * Section#formatHelp(formatter) -> string\n * - formatter (HelpFormatter): current formatter\n *\n * Form help section string\n *\n **/\nSection.prototype.formatHelp = function (formatter) {\n  var itemHelp, heading;\n\n  // format the indented section\n  if (this._parent) {\n    formatter._indent();\n  }\n\n  itemHelp = this._items.map(function (item) {\n    var obj, func, args;\n\n    obj = formatter;\n    func = item[0];\n    args = item[1];\n    return func.apply(obj, args);\n  });\n  itemHelp = formatter._joinParts(itemHelp);\n\n  if (this._parent) {\n    formatter._dedent();\n  }\n\n  // return nothing if the section was empty\n  if (!itemHelp) {\n    return '';\n  }\n\n  // add the heading if the section was non-empty\n  heading = '';\n  if (this._heading && this._heading !== c.SUPPRESS) {\n    var currentIndent = formatter.currentIndent;\n    heading = $$.repeat(' ', currentIndent) + this._heading + ':' + c.EOL;\n  }\n\n  // join the section-initialize newline, the heading and the help\n  return formatter._joinParts([ c.EOL, heading, itemHelp, c.EOL ]);\n};\n\n/**\n * new HelpFormatter(options)\n *\n * #### Options:\n * - `prog`: program name\n * - `indentIncriment`: indent step, default value 2\n * - `maxHelpPosition`: max help position, default value = 24\n * - `width`: line width\n *\n **/\nvar HelpFormatter = module.exports = function HelpFormatter(options) {\n  options = options || {};\n\n  this._prog = options.prog;\n\n  this._maxHelpPosition = options.maxHelpPosition || 24;\n  this._width = (options.width || ((process.env.COLUMNS || 80) - 2));\n\n  this._currentIndent = 0;\n  this._indentIncriment = options.indentIncriment || 2;\n  this._level = 0;\n  this._actionMaxLength = 0;\n\n  this._rootSection = new Section(null);\n  this._currentSection = this._rootSection;\n\n  this._whitespaceMatcher = new RegExp('\\\\s+', 'g');\n  this._longBreakMatcher = new RegExp(c.EOL + c.EOL + c.EOL + '+', 'g');\n};\n\nHelpFormatter.prototype._indent = function () {\n  this._currentIndent += this._indentIncriment;\n  this._level += 1;\n};\n\nHelpFormatter.prototype._dedent = function () {\n  this._currentIndent -= this._indentIncriment;\n  this._level -= 1;\n  if (this._currentIndent < 0) {\n    throw new Error('Indent decreased below 0.');\n  }\n};\n\nHelpFormatter.prototype._addItem = function (func, args) {\n  this._currentSection.addItem([ func, args ]);\n};\n\n//\n// Message building methods\n//\n\n/**\n * HelpFormatter#startSection(heading) -> Void\n * - heading (string): header string\n *\n * Start new help section\n *\n * See alse [code example][1]\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.startSection = function (heading) {\n  this._indent();\n  var section = new Section(this._currentSection, heading);\n  var func = section.formatHelp.bind(section);\n  this._addItem(func, [ this ]);\n  this._currentSection = section;\n};\n\n/**\n * HelpFormatter#endSection -> Void\n *\n * End help section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n **/\nHelpFormatter.prototype.endSection = function () {\n  this._currentSection = this._currentSection._parent;\n  this._dedent();\n};\n\n/**\n * HelpFormatter#addText(text) -> Void\n * - text (string): plain text\n *\n * Add plain text into current section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.addText = function (text) {\n  if (text && text !== c.SUPPRESS) {\n    this._addItem(this._formatText, [ text ]);\n  }\n};\n\n/**\n * HelpFormatter#addUsage(usage, actions, groups, prefix) -> Void\n * - usage (string): usage text\n * - actions (array): actions list\n * - groups (array): groups list\n * - prefix (string): usage prefix\n *\n * Add usage data into current section\n *\n * ##### Example\n *\n *      formatter.addUsage(this.usage, this._actions, []);\n *      return formatter.formatHelp();\n *\n **/\nHelpFormatter.prototype.addUsage = function (usage, actions, groups, prefix) {\n  if (usage !== c.SUPPRESS) {\n    this._addItem(this._formatUsage, [ usage, actions, groups, prefix ]);\n  }\n};\n\n/**\n * HelpFormatter#addArgument(action) -> Void\n * - action (object): action\n *\n * Add argument into current section\n *\n * Single variant of [[HelpFormatter#addArguments]]\n **/\nHelpFormatter.prototype.addArgument = function (action) {\n  if (action.help !== c.SUPPRESS) {\n    var self = this;\n\n    // find all invocations\n    var invocations = [ this._formatActionInvocation(action) ];\n    var invocationLength = invocations[0].length;\n\n    var actionLength;\n\n    if (action._getSubactions) {\n      this._indent();\n      action._getSubactions().forEach(function (subaction) {\n\n        var invocationNew = self._formatActionInvocation(subaction);\n        invocations.push(invocationNew);\n        invocationLength = Math.max(invocationLength, invocationNew.length);\n\n      });\n      this._dedent();\n    }\n\n    // update the maximum item length\n    actionLength = invocationLength + this._currentIndent;\n    this._actionMaxLength = Math.max(this._actionMaxLength, actionLength);\n\n    // add the item to the list\n    this._addItem(this._formatAction, [ action ]);\n  }\n};\n\n/**\n * HelpFormatter#addArguments(actions) -> Void\n * - actions (array): actions list\n *\n * Mass add arguments into current section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.addArguments = function (actions) {\n  var self = this;\n  actions.forEach(function (action) {\n    self.addArgument(action);\n  });\n};\n\n//\n// Help-formatting methods\n//\n\n/**\n * HelpFormatter#formatHelp -> string\n *\n * Format help\n *\n * ##### Example\n *\n *      formatter.addText(this.epilog);\n *      return formatter.formatHelp();\n *\n **/\nHelpFormatter.prototype.formatHelp = function () {\n  var help = this._rootSection.formatHelp(this);\n  if (help) {\n    help = help.replace(this._longBreakMatcher, c.EOL + c.EOL);\n    help = $$.trimChars(help, c.EOL) + c.EOL;\n  }\n  return help;\n};\n\nHelpFormatter.prototype._joinParts = function (partStrings) {\n  return partStrings.filter(function (part) {\n    return (part && part !== c.SUPPRESS);\n  }).join('');\n};\n\nHelpFormatter.prototype._formatUsage = function (usage, actions, groups, prefix) {\n  if (!prefix && typeof prefix !== 'string') {\n    prefix = 'usage: ';\n  }\n\n  actions = actions || [];\n  groups = groups || [];\n\n\n  // if usage is specified, use that\n  if (usage) {\n    usage = sprintf(usage, { prog: this._prog });\n\n    // if no optionals or positionals are available, usage is just prog\n  } else if (!usage && actions.length === 0) {\n    usage = this._prog;\n\n    // if optionals and positionals are available, calculate usage\n  } else if (!usage) {\n    var prog = this._prog;\n    var optionals = [];\n    var positionals = [];\n    var actionUsage;\n    var textWidth;\n\n    // split optionals from positionals\n    actions.forEach(function (action) {\n      if (action.isOptional()) {\n        optionals.push(action);\n      } else {\n        positionals.push(action);\n      }\n    });\n\n    // build full usage string\n    actionUsage = this._formatActionsUsage([].concat(optionals, positionals), groups);\n    usage = [ prog, actionUsage ].join(' ');\n\n    // wrap the usage parts if it's too long\n    textWidth = this._width - this._currentIndent;\n    if ((prefix.length + usage.length) > textWidth) {\n\n      // break usage into wrappable parts\n      var regexpPart = new RegExp('\\\\(.*?\\\\)+|\\\\[.*?\\\\]+|\\\\S+', 'g');\n      var optionalUsage = this._formatActionsUsage(optionals, groups);\n      var positionalUsage = this._formatActionsUsage(positionals, groups);\n\n\n      var optionalParts = optionalUsage.match(regexpPart);\n      var positionalParts = positionalUsage.match(regexpPart) || [];\n\n      if (optionalParts.join(' ') !== optionalUsage) {\n        throw new Error('assert \"optionalParts.join(\\' \\') === optionalUsage\"');\n      }\n      if (positionalParts.join(' ') !== positionalUsage) {\n        throw new Error('assert \"positionalParts.join(\\' \\') === positionalUsage\"');\n      }\n\n      // helper for wrapping lines\n      /*eslint-disable func-style*/ // node 0.10 compat\n      var _getLines = function (parts, indent, prefix) {\n        var lines = [];\n        var line = [];\n\n        var lineLength = prefix ? prefix.length - 1 : indent.length - 1;\n\n        parts.forEach(function (part) {\n          if (lineLength + 1 + part.length > textWidth) {\n            lines.push(indent + line.join(' '));\n            line = [];\n            lineLength = indent.length - 1;\n          }\n          line.push(part);\n          lineLength += part.length + 1;\n        });\n\n        if (line) {\n          lines.push(indent + line.join(' '));\n        }\n        if (prefix) {\n          lines[0] = lines[0].substr(indent.length);\n        }\n        return lines;\n      };\n\n      var lines, indent, parts;\n      // if prog is short, follow it with optionals or positionals\n      if (prefix.length + prog.length <= 0.75 * textWidth) {\n        indent = $$.repeat(' ', (prefix.length + prog.length + 1));\n        if (optionalParts) {\n          lines = [].concat(\n            _getLines([ prog ].concat(optionalParts), indent, prefix),\n            _getLines(positionalParts, indent)\n          );\n        } else if (positionalParts) {\n          lines = _getLines([ prog ].concat(positionalParts), indent, prefix);\n        } else {\n          lines = [ prog ];\n        }\n\n        // if prog is long, put it on its own line\n      } else {\n        indent = $$.repeat(' ', prefix.length);\n        parts = optionalParts.concat(positionalParts);\n        lines = _getLines(parts, indent);\n        if (lines.length > 1) {\n          lines = [].concat(\n            _getLines(optionalParts, indent),\n            _getLines(positionalParts, indent)\n          );\n        }\n        lines = [ prog ].concat(lines);\n      }\n      // join lines into usage\n      usage = lines.join(c.EOL);\n    }\n  }\n\n  // prefix with 'usage:'\n  return prefix + usage + c.EOL + c.EOL;\n};\n\nHelpFormatter.prototype._formatActionsUsage = function (actions, groups) {\n  // find group indices and identify actions in groups\n  var groupActions = [];\n  var inserts = [];\n  var self = this;\n\n  groups.forEach(function (group) {\n    var end;\n    var i;\n\n    var start = actions.indexOf(group._groupActions[0]);\n    if (start >= 0) {\n      end = start + group._groupActions.length;\n\n      //if (actions.slice(start, end) === group._groupActions) {\n      if ($$.arrayEqual(actions.slice(start, end), group._groupActions)) {\n        group._groupActions.forEach(function (action) {\n          groupActions.push(action);\n        });\n\n        if (!group.required) {\n          if (inserts[start]) {\n            inserts[start] += ' [';\n          } else {\n            inserts[start] = '[';\n          }\n          inserts[end] = ']';\n        } else {\n          if (inserts[start]) {\n            inserts[start] += ' (';\n          } else {\n            inserts[start] = '(';\n          }\n          inserts[end] = ')';\n        }\n        for (i = start + 1; i < end; i += 1) {\n          inserts[i] = '|';\n        }\n      }\n    }\n  });\n\n  // collect all actions format strings\n  var parts = [];\n\n  actions.forEach(function (action, actionIndex) {\n    var part;\n    var optionString;\n    var argsDefault;\n    var argsString;\n\n    // suppressed arguments are marked with None\n    // remove | separators for suppressed arguments\n    if (action.help === c.SUPPRESS) {\n      parts.push(null);\n      if (inserts[actionIndex] === '|') {\n        inserts.splice(actionIndex, actionIndex);\n      } else if (inserts[actionIndex + 1] === '|') {\n        inserts.splice(actionIndex + 1, actionIndex + 1);\n      }\n\n      // produce all arg strings\n    } else if (!action.isOptional()) {\n      part = self._formatArgs(action, action.dest);\n\n      // if it's in a group, strip the outer []\n      if (groupActions.indexOf(action) >= 0) {\n        if (part[0] === '[' && part[part.length - 1] === ']') {\n          part = part.slice(1, -1);\n        }\n      }\n      // add the action string to the list\n      parts.push(part);\n\n    // produce the first way to invoke the option in brackets\n    } else {\n      optionString = action.optionStrings[0];\n\n      // if the Optional doesn't take a value, format is: -s or --long\n      if (action.nargs === 0) {\n        part = '' + optionString;\n\n      // if the Optional takes a value, format is: -s ARGS or --long ARGS\n      } else {\n        argsDefault = action.dest.toUpperCase();\n        argsString = self._formatArgs(action, argsDefault);\n        part = optionString + ' ' + argsString;\n      }\n      // make it look optional if it's not required or in a group\n      if (!action.required && groupActions.indexOf(action) < 0) {\n        part = '[' + part + ']';\n      }\n      // add the action string to the list\n      parts.push(part);\n    }\n  });\n\n  // insert things at the necessary indices\n  for (var i = inserts.length - 1; i >= 0; --i) {\n    if (inserts[i] !== null) {\n      parts.splice(i, 0, inserts[i]);\n    }\n  }\n\n  // join all the action items with spaces\n  var text = parts.filter(function (part) {\n    return !!part;\n  }).join(' ');\n\n  // clean up separators for mutually exclusive groups\n  text = text.replace(/([\\[(]) /g, '$1'); // remove spaces\n  text = text.replace(/ ([\\])])/g, '$1');\n  text = text.replace(/\\[ *\\]/g, ''); // remove empty groups\n  text = text.replace(/\\( *\\)/g, '');\n  text = text.replace(/\\(([^|]*)\\)/g, '$1'); // remove () from single action groups\n\n  text = text.trim();\n\n  // return the text\n  return text;\n};\n\nHelpFormatter.prototype._formatText = function (text) {\n  text = sprintf(text, { prog: this._prog });\n  var textWidth = this._width - this._currentIndent;\n  var indentIncriment = $$.repeat(' ', this._currentIndent);\n  return this._fillText(text, textWidth, indentIncriment) + c.EOL + c.EOL;\n};\n\nHelpFormatter.prototype._formatAction = function (action) {\n  var self = this;\n\n  var helpText;\n  var helpLines;\n  var parts;\n  var indentFirst;\n\n  // determine the required width and the entry label\n  var helpPosition = Math.min(this._actionMaxLength + 2, this._maxHelpPosition);\n  var helpWidth = this._width - helpPosition;\n  var actionWidth = helpPosition - this._currentIndent - 2;\n  var actionHeader = this._formatActionInvocation(action);\n\n  // no help; start on same line and add a final newline\n  if (!action.help) {\n    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;\n\n  // short action name; start on the same line and pad two spaces\n  } else if (actionHeader.length <= actionWidth) {\n    actionHeader = $$.repeat(' ', this._currentIndent) +\n        actionHeader +\n        '  ' +\n        $$.repeat(' ', actionWidth - actionHeader.length);\n    indentFirst = 0;\n\n  // long action name; start on the next line\n  } else {\n    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;\n    indentFirst = helpPosition;\n  }\n\n  // collect the pieces of the action help\n  parts = [ actionHeader ];\n\n  // if there was help for the action, add lines of help text\n  if (action.help) {\n    helpText = this._expandHelp(action);\n    helpLines = this._splitLines(helpText, helpWidth);\n    parts.push($$.repeat(' ', indentFirst) + helpLines[0] + c.EOL);\n    helpLines.slice(1).forEach(function (line) {\n      parts.push($$.repeat(' ', helpPosition) + line + c.EOL);\n    });\n\n  // or add a newline if the description doesn't end with one\n  } else if (actionHeader.charAt(actionHeader.length - 1) !== c.EOL) {\n    parts.push(c.EOL);\n  }\n  // if there are any sub-actions, add their help as well\n  if (action._getSubactions) {\n    this._indent();\n    action._getSubactions().forEach(function (subaction) {\n      parts.push(self._formatAction(subaction));\n    });\n    this._dedent();\n  }\n  // return a single string\n  return this._joinParts(parts);\n};\n\nHelpFormatter.prototype._formatActionInvocation = function (action) {\n  if (!action.isOptional()) {\n    var format_func = this._metavarFormatter(action, action.dest);\n    var metavars = format_func(1);\n    return metavars[0];\n  }\n\n  var parts = [];\n  var argsDefault;\n  var argsString;\n\n  // if the Optional doesn't take a value, format is: -s, --long\n  if (action.nargs === 0) {\n    parts = parts.concat(action.optionStrings);\n\n  // if the Optional takes a value, format is: -s ARGS, --long ARGS\n  } else {\n    argsDefault = action.dest.toUpperCase();\n    argsString = this._formatArgs(action, argsDefault);\n    action.optionStrings.forEach(function (optionString) {\n      parts.push(optionString + ' ' + argsString);\n    });\n  }\n  return parts.join(', ');\n};\n\nHelpFormatter.prototype._metavarFormatter = function (action, metavarDefault) {\n  var result;\n\n  if (action.metavar || action.metavar === '') {\n    result = action.metavar;\n  } else if (action.choices) {\n    var choices = action.choices;\n\n    if (typeof choices === 'string') {\n      choices = choices.split('').join(', ');\n    } else if (Array.isArray(choices)) {\n      choices = choices.join(',');\n    } else {\n      choices = Object.keys(choices).join(',');\n    }\n    result = '{' + choices + '}';\n  } else {\n    result = metavarDefault;\n  }\n\n  return function (size) {\n    if (Array.isArray(result)) {\n      return result;\n    }\n\n    var metavars = [];\n    for (var i = 0; i < size; i += 1) {\n      metavars.push(result);\n    }\n    return metavars;\n  };\n};\n\nHelpFormatter.prototype._formatArgs = function (action, metavarDefault) {\n  var result;\n  var metavars;\n\n  var buildMetavar = this._metavarFormatter(action, metavarDefault);\n\n  switch (action.nargs) {\n    /*eslint-disable no-undefined*/\n    case undefined:\n    case null:\n      metavars = buildMetavar(1);\n      result = '' + metavars[0];\n      break;\n    case c.OPTIONAL:\n      metavars = buildMetavar(1);\n      result = '[' + metavars[0] + ']';\n      break;\n    case c.ZERO_OR_MORE:\n      metavars = buildMetavar(2);\n      result = '[' + metavars[0] + ' [' + metavars[1] + ' ...]]';\n      break;\n    case c.ONE_OR_MORE:\n      metavars = buildMetavar(2);\n      result = '' + metavars[0] + ' [' + metavars[1] + ' ...]';\n      break;\n    case c.REMAINDER:\n      result = '...';\n      break;\n    case c.PARSER:\n      metavars = buildMetavar(1);\n      result = metavars[0] + ' ...';\n      break;\n    default:\n      metavars = buildMetavar(action.nargs);\n      result = metavars.join(' ');\n  }\n  return result;\n};\n\nHelpFormatter.prototype._expandHelp = function (action) {\n  var params = { prog: this._prog };\n\n  Object.keys(action).forEach(function (actionProperty) {\n    var actionValue = action[actionProperty];\n\n    if (actionValue !== c.SUPPRESS) {\n      params[actionProperty] = actionValue;\n    }\n  });\n\n  if (params.choices) {\n    if (typeof params.choices === 'string') {\n      params.choices = params.choices.split('').join(', ');\n    } else if (Array.isArray(params.choices)) {\n      params.choices = params.choices.join(', ');\n    } else {\n      params.choices = Object.keys(params.choices).join(', ');\n    }\n  }\n\n  return sprintf(this._getHelpString(action), params);\n};\n\nHelpFormatter.prototype._splitLines = function (text, width) {\n  var lines = [];\n  var delimiters = [ ' ', '.', ',', '!', '?' ];\n  var re = new RegExp('[' + delimiters.join('') + '][^' + delimiters.join('') + ']*$');\n\n  text = text.replace(/[\\n\\|\\t]/g, ' ');\n\n  text = text.trim();\n  text = text.replace(this._whitespaceMatcher, ' ');\n\n  // Wraps the single paragraph in text (a string) so every line\n  // is at most width characters long.\n  text.split(c.EOL).forEach(function (line) {\n    if (width >= line.length) {\n      lines.push(line);\n      return;\n    }\n\n    var wrapStart = 0;\n    var wrapEnd = width;\n    var delimiterIndex = 0;\n    while (wrapEnd <= line.length) {\n      if (wrapEnd !== line.length && delimiters.indexOf(line[wrapEnd] < -1)) {\n        delimiterIndex = (re.exec(line.substring(wrapStart, wrapEnd)) || {}).index;\n        wrapEnd = wrapStart + delimiterIndex + 1;\n      }\n      lines.push(line.substring(wrapStart, wrapEnd));\n      wrapStart = wrapEnd;\n      wrapEnd += width;\n    }\n    if (wrapStart < line.length) {\n      lines.push(line.substring(wrapStart, wrapEnd));\n    }\n  });\n\n  return lines;\n};\n\nHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = this._splitLines(text, width);\n  lines = lines.map(function (line) {\n    return indent + line;\n  });\n  return lines.join(c.EOL);\n};\n\nHelpFormatter.prototype._getHelpString = function (action) {\n  return action.help;\n};\n"]}
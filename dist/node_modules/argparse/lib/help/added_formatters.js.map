{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/help/added_formatters.js"],"names":["util","require","c","$$","HelpFormatter","ArgumentDefaultsHelpFormatter","options","call","inherits","prototype","_getHelpString","action","help","indexOf","defaultValue","SUPPRESS","defaulting_nargs","OPTIONAL","ZERO_OR_MORE","isOptional","nargs","module","exports","RawDescriptionHelpFormatter","_fillText","text","width","indent","lines","split","map","line","trimEnd","join","RawTextHelpFormatter","_splitLines"],"mappings":"AAAA;;AAEA,IAAIA,OAAUC,QAAQ,MAAR,CAAd;;AAEA;AACA,IAAIC,IAAID,QAAQ,UAAR,CAAR;;AAEA,IAAIE,KAAKF,QAAQ,UAAR,CAAT;AACA,IAAIG,gBAAgBH,QAAQ,gBAAR,CAApB;;AAEA;;;;;;;;;;AAUA,SAASI,6BAAT,CAAuCC,OAAvC,EAAgD;AAC9CF,gBAAcG,IAAd,CAAmB,IAAnB,EAAyBD,OAAzB;AACD;;AAEDN,KAAKQ,QAAL,CAAcH,6BAAd,EAA6CD,aAA7C;;AAEAC,8BAA8BI,SAA9B,CAAwCC,cAAxC,GAAyD,UAAUC,MAAV,EAAkB;AACzE,MAAIC,OAAOD,OAAOC,IAAlB;AACA,MAAID,OAAOC,IAAP,CAAYC,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAjD,EAAoD;AAClD,QAAIF,OAAOG,YAAP,KAAwBZ,EAAEa,QAA9B,EAAwC;AACtC,UAAIC,mBAAmB,CAAEd,EAAEe,QAAJ,EAAcf,EAAEgB,YAAhB,CAAvB;AACA,UAAIP,OAAOQ,UAAP,MAAwBH,iBAAiBH,OAAjB,CAAyBF,OAAOS,KAAhC,KAA0C,CAAtE,EAA0E;AACxER,gBAAQ,8BAAR;AACD;AACF;AACF;AACD,SAAOA,IAAP;AACD,CAXD;;AAaAS,OAAOC,OAAP,CAAejB,6BAAf,GAA+CA,6BAA/C;;AAEA;;;;;;;;;;AAUA,SAASkB,2BAAT,CAAqCjB,OAArC,EAA8C;AAC5CF,gBAAcG,IAAd,CAAmB,IAAnB,EAAyBD,OAAzB;AACD;;AAEDN,KAAKQ,QAAL,CAAce,2BAAd,EAA2CnB,aAA3C;;AAEAmB,4BAA4Bd,SAA5B,CAAsCe,SAAtC,GAAkD,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC/E,MAAIC,QAAQH,KAAKI,KAAL,CAAW,IAAX,CAAZ;AACAD,UAAQA,MAAME,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAChC,WAAO5B,GAAG6B,OAAH,CAAWL,SAASI,IAApB,CAAP;AACD,GAFO,CAAR;AAGA,SAAOH,MAAMK,IAAN,CAAW,IAAX,CAAP;AACD,CAND;AAOAZ,OAAOC,OAAP,CAAeC,2BAAf,GAA6CA,2BAA7C;;AAEA;;;;;;;;;;AAUA,SAASW,oBAAT,CAA8B5B,OAA9B,EAAuC;AACrCiB,8BAA4BhB,IAA5B,CAAiC,IAAjC,EAAuCD,OAAvC;AACD;;AAEDN,KAAKQ,QAAL,CAAc0B,oBAAd,EAAoCX,2BAApC;;AAEAW,qBAAqBzB,SAArB,CAA+B0B,WAA/B,GAA6C,UAAUV,IAAV,EAAgB;AAC3D,SAAOA,KAAKI,KAAL,CAAW,IAAX,CAAP;AACD,CAFD;;AAIAR,OAAOC,OAAP,CAAeY,oBAAf,GAAsCA,oBAAtC","file":"added_formatters.js","sourcesContent":["'use strict';\n\nvar util    = require('util');\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\nvar HelpFormatter = require('./formatter.js');\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which adds default values to argument help.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction ArgumentDefaultsHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(ArgumentDefaultsHelpFormatter, HelpFormatter);\n\nArgumentDefaultsHelpFormatter.prototype._getHelpString = function (action) {\n  var help = action.help;\n  if (action.help.indexOf('%(defaultValue)s') === -1) {\n    if (action.defaultValue !== c.SUPPRESS) {\n      var defaulting_nargs = [ c.OPTIONAL, c.ZERO_OR_MORE ];\n      if (action.isOptional() || (defaulting_nargs.indexOf(action.nargs) >= 0)) {\n        help += ' (default: %(defaultValue)s)';\n      }\n    }\n  }\n  return help;\n};\n\nmodule.exports.ArgumentDefaultsHelpFormatter = ArgumentDefaultsHelpFormatter;\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which retains any formatting in descriptions.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawDescriptionHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(RawDescriptionHelpFormatter, HelpFormatter);\n\nRawDescriptionHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = text.split('\\n');\n  lines = lines.map(function (line) {\n    return $$.trimEnd(indent + line);\n  });\n  return lines.join('\\n');\n};\nmodule.exports.RawDescriptionHelpFormatter = RawDescriptionHelpFormatter;\n\n/**\n * new RawTextHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})\n *\n * Help message formatter which retains formatting of all help text.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawTextHelpFormatter(options) {\n  RawDescriptionHelpFormatter.call(this, options);\n}\n\nutil.inherits(RawTextHelpFormatter, RawDescriptionHelpFormatter);\n\nRawTextHelpFormatter.prototype._splitLines = function (text) {\n  return text.split('\\n');\n};\n\nmodule.exports.RawTextHelpFormatter = RawTextHelpFormatter;\n"]}
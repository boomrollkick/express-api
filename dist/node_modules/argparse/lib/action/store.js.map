{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/action/store.js"],"names":["util","require","Action","c","ActionStore","module","exports","options","nargs","Error","constant","OPTIONAL","call","inherits","prototype","parser","namespace","values","set","dest"],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,SAASD,QAAQ,WAAR,CAAb;;AAEA;AACA,IAAIE,IAAIF,QAAQ,UAAR,CAAR;;AAGA;;;;;AAKA,IAAIG,cAAcC,OAAOC,OAAP,GAAiB,SAASF,WAAT,CAAqBG,OAArB,EAA8B;AAC/DA,YAAUA,WAAW,EAArB;AACA,MAAI,KAAKC,KAAL,IAAc,CAAlB,EAAqB;AACnB,UAAM,IAAIC,KAAJ,CAAU,iDACZ,+CADY,GAEZ,6CAFE,CAAN;AAID;AACD,MAAI,OAAO,KAAKC,QAAZ,KAAyB,WAAzB,IAAwC,KAAKF,KAAL,KAAeL,EAAEQ,QAA7D,EAAuE;AACrE,UAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;AACD;AACDP,SAAOU,IAAP,CAAY,IAAZ,EAAkBL,OAAlB;AACD,CAZD;AAaAP,KAAKa,QAAL,CAAcT,WAAd,EAA2BF,MAA3B;;AAEA;;;;;;;;;AASAE,YAAYU,SAAZ,CAAsBF,IAAtB,GAA6B,UAAUG,MAAV,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqC;AAChED,YAAUE,GAAV,CAAc,KAAKC,IAAnB,EAAyBF,MAAzB;AACD,CAFD","file":"store.js","sourcesContent":["/*:nodoc:*\n * class ActionStore\n *\n * This action just stores the argumentâ€™s value. This is the default action.\n *\n * This class inherited from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n\n/*:nodoc:*\n * new ActionStore(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStore = module.exports = function ActionStore(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for store actions must be > 0; if you ' +\n        'have nothing to store, actions such as store ' +\n        'true or store const may be more appropriate');\n\n  }\n  if (typeof this.constant !== 'undefined' && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStore, Action);\n\n/*:nodoc:*\n * ActionStore#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStore.prototype.call = function (parser, namespace, values) {\n  namespace.set(this.dest, values);\n};\n"]}
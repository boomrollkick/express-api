{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/action/version.js"],"names":["util","require","Action","c","ActionVersion","module","exports","options","defaultValue","SUPPRESS","dest","nargs","version","call","inherits","prototype","parser","formatter","_getFormatter","addText","exit","formatHelp"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,SAASD,QAAQ,WAAR,CAAb;;AAEA;AACA;AACA;AACA,IAAIE,IAAIF,QAAQ,UAAR,CAAR;;AAEA;;;;;AAKA,IAAIG,gBAAgBC,OAAOC,OAAP,GAAiB,SAASF,aAAT,CAAuBG,OAAvB,EAAgC;AACnEA,YAAUA,WAAW,EAArB;AACAA,UAAQC,YAAR,GAAwBD,QAAQC,YAAR,GAAuBD,QAAQC,YAA/B,GAA8CL,EAAEM,QAAxE;AACAF,UAAQG,IAAR,GAAgBH,QAAQG,IAAR,IAAgBP,EAAEM,QAAlC;AACAF,UAAQI,KAAR,GAAgB,CAAhB;AACA,OAAKC,OAAL,GAAeL,QAAQK,OAAvB;AACAV,SAAOW,IAAP,CAAY,IAAZ,EAAkBN,OAAlB;AACD,CAPD;AAQAP,KAAKc,QAAL,CAAcV,aAAd,EAA6BF,MAA7B;;AAEA;;;;;;;;;AASAE,cAAcW,SAAd,CAAwBF,IAAxB,GAA+B,UAAUG,MAAV,EAAkB;AAC/C,MAAIJ,UAAU,KAAKA,OAAL,IAAgBI,OAAOJ,OAArC;AACA,MAAIK,YAAYD,OAAOE,aAAP,EAAhB;AACAD,YAAUE,OAAV,CAAkBP,OAAlB;AACAI,SAAOI,IAAP,CAAY,CAAZ,EAAeH,UAAUI,UAAV,EAAf;AACD,CALD","file":"version.js","sourcesContent":["/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = (options.defaultValue ? options.defaultValue : c.SUPPRESS);\n  options.dest = (options.dest || c.SUPPRESS);\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};\n"]}
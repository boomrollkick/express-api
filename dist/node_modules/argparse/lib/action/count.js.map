{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/action/count.js"],"names":["util","require","Action","ActionCount","module","exports","options","nargs","call","inherits","prototype","parser","namespace","set","dest"],"mappings":"AAAA;;;;;;;;;AASA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,SAASD,QAAQ,WAAR,CAAb;;AAEA;;;;;AAKA,IAAIE,cAAcC,OAAOC,OAAP,GAAiB,SAASF,WAAT,CAAqBG,OAArB,EAA8B;AAC/DA,YAAUA,WAAW,EAArB;AACAA,UAAQC,KAAR,GAAgB,CAAhB;;AAEAL,SAAOM,IAAP,CAAY,IAAZ,EAAkBF,OAAlB;AACD,CALD;AAMAN,KAAKS,QAAL,CAAcN,WAAd,EAA2BD,MAA3B;;AAEA;;;;;;;;;AASAC,YAAYO,SAAZ,CAAsBF,IAAtB,GAA6B,UAAUG,MAAV,EAAkBC,SAAlB,EAA6B;AACxDA,YAAUC,GAAV,CAAc,KAAKC,IAAnB,EAAyB,CAACF,UAAU,KAAKE,IAAf,KAAwB,CAAzB,IAA8B,CAAvD;AACD,CAFD","file":"count.js","sourcesContent":["/*:nodoc:*\n * class ActionCount\n *\n * This counts the number of times a keyword argument occurs.\n * For example, this is useful for increasing verbosity levels\n *\n * This class inherided from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n/*:nodoc:*\n * new ActionCount(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionCount = module.exports = function ActionCount(options) {\n  options = options || {};\n  options.nargs = 0;\n\n  Action.call(this, options);\n};\nutil.inherits(ActionCount, Action);\n\n/*:nodoc:*\n * ActionCount#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionCount.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, (namespace[this.dest] || 0) + 1);\n};\n"]}
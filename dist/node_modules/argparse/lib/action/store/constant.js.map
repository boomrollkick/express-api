{"version":3,"sources":["../../../../../../src/node_modules/argparse/lib/action/store/constant.js"],"names":["util","require","Action","ActionStoreConstant","module","exports","options","nargs","constant","Error","call","inherits","prototype","parser","namespace","set","dest"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,SAASD,QAAQ,cAAR,CAAb;;AAEA;;;;;AAKA,IAAIE,sBAAsBC,OAAOC,OAAP,GAAiB,SAASF,mBAAT,CAA6BG,OAA7B,EAAsC;AAC/EA,YAAUA,WAAW,EAArB;AACAA,UAAQC,KAAR,GAAgB,CAAhB;AACA,MAAI,OAAOD,QAAQE,QAAf,KAA4B,WAAhC,EAA6C;AAC3C,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;AACDP,SAAOQ,IAAP,CAAY,IAAZ,EAAkBJ,OAAlB;AACD,CAPD;AAQAN,KAAKW,QAAL,CAAcR,mBAAd,EAAmCD,MAAnC;;AAEA;;;;;;;;;AASAC,oBAAoBS,SAApB,CAA8BF,IAA9B,GAAqC,UAAUG,MAAV,EAAkBC,SAAlB,EAA6B;AAChEA,YAAUC,GAAV,CAAc,KAAKC,IAAnB,EAAyB,KAAKR,QAA9B;AACD,CAFD","file":"constant.js","sourcesContent":["/*:nodoc:*\n * class ActionStoreConstant\n *\n * This action stores the value specified by the const keyword argument.\n * (Note that the const keyword argument defaults to the rather unhelpful null.)\n * The 'store_const' action is most commonly used with optional\n * arguments that specify some sort of flag.\n *\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../../action');\n\n/*:nodoc:*\n * new ActionStoreConstant(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStoreConstant = module.exports = function ActionStoreConstant(options) {\n  options = options || {};\n  options.nargs = 0;\n  if (typeof options.constant === 'undefined') {\n    throw new Error('constant option is required for storeAction');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStoreConstant, Action);\n\n/*:nodoc:*\n * ActionStoreConstant#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStoreConstant.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, this.constant);\n};\n"]}
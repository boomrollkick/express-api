{"version":3,"sources":["../../../../../src/node_modules/argparse/lib/action/append.js"],"names":["util","require","Action","c","ActionAppend","module","exports","options","nargs","Error","constant","OPTIONAL","call","inherits","prototype","parser","namespace","values","items","dest","slice","push","set"],"mappings":"AAAA;;;;;;;;;AASA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,SAASD,QAAQ,WAAR,CAAb;;AAEA;AACA,IAAIE,IAAIF,QAAQ,UAAR,CAAR;;AAEA;;;;;;;AAOA,IAAIG,eAAeC,OAAOC,OAAP,GAAiB,SAASF,YAAT,CAAsBG,OAAtB,EAA+B;AACjEA,YAAUA,WAAW,EAArB;AACA,MAAI,KAAKC,KAAL,IAAc,CAAlB,EAAqB;AACnB,UAAM,IAAIC,KAAJ,CAAU,kDACZ,iDADY,GAEZ,iDAFE,CAAN;AAGD;AACD,MAAI,CAAC,CAAC,KAAKC,QAAP,IAAmB,KAAKF,KAAL,KAAeL,EAAEQ,QAAxC,EAAkD;AAChD,UAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;AACD;AACDP,SAAOU,IAAP,CAAY,IAAZ,EAAkBL,OAAlB;AACD,CAXD;AAYAP,KAAKa,QAAL,CAAcT,YAAd,EAA4BF,MAA5B;;AAEA;;;;;;;;;AASAE,aAAaU,SAAb,CAAuBF,IAAvB,GAA8B,UAAUG,MAAV,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqC;AACjE,MAAIC,QAAQ,CAACF,UAAU,KAAKG,IAAf,KAAwB,EAAzB,EAA6BC,KAA7B,EAAZ;AACAF,QAAMG,IAAN,CAAWJ,MAAX;AACAD,YAAUM,GAAV,CAAc,KAAKH,IAAnB,EAAyBD,KAAzB;AACD,CAJD","file":"append.js","sourcesContent":["/*:nodoc:*\n * class ActionAppend\n *\n * This action stores a list, and appends each argument value to the list.\n * This is useful to allow an option to be specified multiple times.\n * This class inherided from [[Action]]\n *\n **/\n\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionAppend(options)\n * - options (object): options hash see [[Action.new]]\n *\n * Note: options.nargs should be optional for constants\n * and more then zero for other\n **/\nvar ActionAppend = module.exports = function ActionAppend(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for append actions must be > 0; if arg ' +\n        'strings are not supplying the value to append, ' +\n        'the append const action may be more appropriate');\n  }\n  if (!!this.constant && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionAppend, Action);\n\n/*:nodoc:*\n * ActionAppend#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionAppend.prototype.call = function (parser, namespace, values) {\n  var items = (namespace[this.dest] || []).slice();\n  items.push(values);\n  namespace.set(this.dest, items);\n};\n"]}
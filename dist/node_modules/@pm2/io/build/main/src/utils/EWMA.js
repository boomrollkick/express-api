"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var units_1 = require("./units");

var ExponentiallyWeightedMovingAverage = function () {
    function ExponentiallyWeightedMovingAverage(timePeriod, tickInterval) {
        _classCallCheck(this, ExponentiallyWeightedMovingAverage);

        this._count = 0;
        this._rate = 0;
        this.TICK_INTERVAL = 5 * units_1.default.SECONDS;
        this._timePeriod = timePeriod || 1 * units_1.default.MINUTES;
        this._tickInterval = tickInterval || this.TICK_INTERVAL;
        this._alpha = 1 - Math.exp(-this._tickInterval / this._timePeriod);
    }

    _createClass(ExponentiallyWeightedMovingAverage, [{
        key: "update",
        value: function update(n) {
            this._count += n;
        }
    }, {
        key: "tick",
        value: function tick() {
            var instantRate = this._count / this._tickInterval;
            this._count = 0;
            this._rate += this._alpha * (instantRate - this._rate);
        }
    }, {
        key: "rate",
        value: function rate(timeUnit) {
            return (this._rate || 0) * timeUnit;
        }
    }]);

    return ExponentiallyWeightedMovingAverage;
}();

exports.default = ExponentiallyWeightedMovingAverage;
//# sourceMappingURL=EWMA.js.map
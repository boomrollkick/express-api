"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var serviceManager_1 = require("../serviceManager");

var Inspector = function () {
    function Inspector(actionFeature) {
        _classCallCheck(this, Inspector);

        this.actionFeature = actionFeature;
    }

    _createClass(Inspector, [{
        key: "init",
        value: function init() {
            return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                return _context.abrupt("return", new Promise(function (resolve, reject) {
                                    _this.exposeActions();
                                    return resolve();
                                }).catch(function (e) {
                                    return console.error(e);
                                }));

                            case 1:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));
        }
    }, {
        key: "exposeActions",
        value: function exposeActions() {
            this.actionFeature.action('km:event-loop-dump', function (reply) {
                var dump = serviceManager_1.ServiceManager.get('eventLoopService').inspector.dump();
                return reply({
                    success: true,
                    dump: dump
                });
            });
        }
    }]);

    return Inspector;
}();

exports.default = Inspector;
//# sourceMappingURL=eventLoopInspector.js.map
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var services = {
    metricsMap: new Map(),
    actions: new Map(),
    actionsScoped: new Map()
};
if (require('semver').satisfies(process.version, '>= 10.0.0') || require('semver').satisfies(process.version, '>= 8.0.0') && process.env.FORCE_INSPECTOR) {
    services['inspector'] = require('./services/inspector');
}

var ServiceManager = function () {
    function ServiceManager() {
        _classCallCheck(this, ServiceManager);
    }

    _createClass(ServiceManager, null, [{
        key: "get",
        value: function get(type) {
            return services[type];
        }
    }, {
        key: "set",
        value: function set(type, service) {
            services[type] = service;
        }
    }, {
        key: "reset",
        value: function reset(type) {
            services[type] = new Map();
        }
    }]);

    return ServiceManager;
}();

exports.ServiceManager = ServiceManager;
//# sourceMappingURL=serviceManager.js.map
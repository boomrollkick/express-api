{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/io/node_modules/debug/src/debug.js"],"names":["exports","module","createDebug","debug","coerce","disable","enable","enabled","humanize","require","instances","names","skips","formatters","selectColor","namespace","hash","i","charCodeAt","colors","Math","abs","length","prevTime","self","curr","Date","ms","diff","prev","args","Array","arguments","unshift","index","replace","match","format","formatter","val","call","splice","formatArgs","logFn","log","console","bind","apply","useColors","color","destroy","init","push","indexOf","namespaces","save","split","len","RegExp","substr","instance","name","test","Error","stack","message"],"mappings":"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","file":"debug.js","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"]}
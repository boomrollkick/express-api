{"version":3,"sources":["../../../../src/node_modules/@pm2/agent/constants.js"],"names":["path","require","PM2_HOME","process","env","HOME","HOMEPATH","resolve","HOMEDRIVE","getUniqueId","s","hexDigits","i","substr","Math","floor","random","join","useIfDefined","value","fallback","cst","DEBUG","PM2_DEBUG","KEYMETRICS_ROOT_URL","KEYMETRICS_NODE","PROTOCOL_VERSION","COMPRESS_PROTOCOL","STATUS_INTERVAL","PACKET_QUEUE_SIZE","LOGS_BUFFER","CONTEXT_ON_ERROR","TRANSACTION_FLUSH_INTERVAL","NODE_ENV","AGGREGATION_DURATION","TRACE_FLUSH_INTERVAL","DAEMON_RPC_PORT","DAEMON_PUB_PORT","INTERACTOR_RPC_PORT","INTERACTOR_LOG_FILE_PATH","INTERACTOR_PID_PATH","INTERACTION_CONF","DUMP_FILE_PATH","UNIQUE_SERVER_ID","ENABLE_CONTEXT_ON_ERROR","PM2_AGENT_ENABLE_CONTEXT_ON_ERROR","SUCCESS_EXIT","ERROR_EXIT","keys","Object","forEach","key","envKey","indexOf","platform","module","exports"],"mappings":"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","file":"constants.js","sourcesContent":["/**\n * Copyright Keymetrics Team. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n\n'use strict'\n\nconst path = require('path')\nlet PM2_HOME\n\nif (process.env.PM2_HOME) {\n  PM2_HOME = process.env.PM2_HOME\n} else if (process.env.HOME && !process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOME, '.pm2')\n} else if (process.env.HOME || process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOMEDRIVE, process.env.HOME || process.env.HOMEPATH, '.pm2')\n} else {\n  PM2_HOME = path.resolve('/etc', '.pm2')\n}\n\nconst getUniqueId = () => {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4'\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1)\n  s[8] = s[13] = s[18] = s[23] = '-'\n  return s.join('')\n}\n\n/**\n * Convert value to boolean but false if undefined\n * @param {String} value\n * @param {String} fallback default value\n * @return {Boolean}\n */\nconst useIfDefined = (value, fallback) => {\n  if (typeof value === 'undefined') {\n    return fallback\n  } else {\n    return value === 'true'\n  }\n}\n\nlet cst = {\n  DEBUG: process.env.PM2_DEBUG || false,\n  KEYMETRICS_ROOT_URL: process.env.KEYMETRICS_NODE || 'https://root.keymetrics.io',\n\n  PROTOCOL_VERSION: 1,\n  COMPRESS_PROTOCOL: false,\n  STATUS_INTERVAL: 1000,\n  PACKET_QUEUE_SIZE: 200,\n\n  LOGS_BUFFER: 8,\n  CONTEXT_ON_ERROR: 4,\n  TRANSACTION_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 30000,\n  AGGREGATION_DURATION: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'development') ? 0 : 60 * 10,\n  TRACE_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 60000,\n\n  PM2_HOME: PM2_HOME,\n  DAEMON_RPC_PORT: path.resolve(PM2_HOME, 'rpc.sock'),\n  DAEMON_PUB_PORT: path.resolve(PM2_HOME, 'pub.sock'),\n  INTERACTOR_RPC_PORT: path.resolve(PM2_HOME, 'interactor.sock'),\n  INTERACTOR_LOG_FILE_PATH: path.resolve(PM2_HOME, 'agent.log'),\n  INTERACTOR_PID_PATH: path.resolve(PM2_HOME, 'agent.pid'),\n  INTERACTION_CONF: path.resolve(PM2_HOME, 'agent.json5'),\n\n  DUMP_FILE_PATH: path.resolve(PM2_HOME, 'dump.pm2'),\n\n  UNIQUE_SERVER_ID: getUniqueId(),\n\n  ENABLE_CONTEXT_ON_ERROR: useIfDefined(process.env.PM2_AGENT_ENABLE_CONTEXT_ON_ERROR, true),\n\n  SUCCESS_EXIT: 0,\n  ERROR_EXIT: 1\n}\n\n// allow overide of file paths via environnement\nlet keys = Object.keys(cst)\nkeys.forEach((key) => {\n  var envKey = key.indexOf('PM2_') > -1 ? key : 'PM2_' + key\n  if (process.env[envKey] && key !== 'PM2_HOME' && key !== 'PM2_ROOT_PATH') {\n    cst[key] = process.env[envKey]\n  }\n})\n\nif (process.platform === 'win32' || process.platform === 'win64') {\n  // @todo instead of static unique rpc/pub file custom with PM2_HOME or UID\n  cst.DAEMON_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\rpc.sock'\n  cst.DAEMON_PUB_PORT = '\\\\\\\\.\\\\pipe\\\\pub.sock'\n  cst.INTERACTOR_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\interactor.sock'\n}\n\nmodule.exports = cst\n"]}
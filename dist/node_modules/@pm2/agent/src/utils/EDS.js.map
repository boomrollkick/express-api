{"version":3,"sources":["../../../../../../src/node_modules/@pm2/agent/src/utils/EDS.js"],"names":["BinaryHeap","require","units","module","exports","ExponentiallyDecayingSample","options","_elements","score","element","priority","_rescaleInterval","rescaleInterval","RESCALE_INTERVAL","_alpha","alpha","ALPHA","_size","size","SIZE","_random","random","_landmark","_nextRescale","_mean","HOURS","prototype","update","value","timestamp","now","Date","newSize","_priority","add","first","removeFirst","_rescale","toSortedArray","map","toArray","_weight","age","Math","exp","self","oldLandmark","factor","forEach","avg","sum"],"mappings":"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","file":"EDS.js","sourcesContent":["'use strict'\n// Hacked https://github.com/felixge/node-measured\n\nvar BinaryHeap = require('./BinaryHeap')\nvar units = require('./units')\n\nmodule.exports = ExponentiallyDecayingSample\nfunction ExponentiallyDecayingSample (options) {\n  options = options || {}\n\n  this._elements = new BinaryHeap({\n    score: function (element) {\n      return -element.priority\n    }\n  })\n\n  this._rescaleInterval = options.rescaleInterval || ExponentiallyDecayingSample.RESCALE_INTERVAL\n  this._alpha = options.alpha || ExponentiallyDecayingSample.ALPHA\n  this._size = options.size || ExponentiallyDecayingSample.SIZE\n  this._random = options.random || this._random\n  this._landmark = null\n  this._nextRescale = null\n  this._mean = null\n}\n\nExponentiallyDecayingSample.RESCALE_INTERVAL = 1 * units.HOURS\nExponentiallyDecayingSample.ALPHA = 0.015\nExponentiallyDecayingSample.SIZE = 1028\n\nExponentiallyDecayingSample.prototype.update = function (value, timestamp) {\n  var now = Date.now()\n  if (!this._landmark) {\n    this._landmark = now\n    this._nextRescale = this._landmark + this._rescaleInterval\n  }\n\n  timestamp = timestamp || now\n\n  var newSize = this._elements.size() + 1\n\n  var element = {\n    priority: this._priority(timestamp - this._landmark),\n    value: value\n  }\n\n  if (newSize <= this._size) {\n    this._elements.add(element)\n  } else if (element.priority > this._elements.first().priority) {\n    this._elements.removeFirst()\n    this._elements.add(element)\n  }\n\n  if (now >= this._nextRescale) this._rescale(now)\n}\n\nExponentiallyDecayingSample.prototype.toSortedArray = function () {\n  return this._elements\n    .toSortedArray()\n    .map(function (element) {\n      return element.value\n    })\n}\n\nExponentiallyDecayingSample.prototype.toArray = function () {\n  return this._elements\n    .toArray()\n    .map(function (element) {\n      return element.value\n    })\n}\n\nExponentiallyDecayingSample.prototype._weight = function (age) {\n  // We divide by 1000 to not run into huge numbers before reaching a\n  // rescale event.\n  return Math.exp(this._alpha * (age / 1000))\n}\n\nExponentiallyDecayingSample.prototype._priority = function (age) {\n  return this._weight(age) / this._random()\n}\n\nExponentiallyDecayingSample.prototype._random = function () {\n  return Math.random()\n}\n\nExponentiallyDecayingSample.prototype._rescale = function (now) {\n  now = now || Date.now()\n\n  var self = this\n  var oldLandmark = this._landmark\n  this._landmark = now || Date.now()\n  this._nextRescale = now + this._rescaleInterval\n\n  var factor = self._priority(-(self._landmark - oldLandmark))\n\n  this._elements\n    .toArray()\n    .forEach(function (element) {\n      element.priority *= factor\n    })\n}\n\nExponentiallyDecayingSample.prototype.avg = function (now) {\n  var sum = 0\n  this._elements\n    .toArray()\n    .forEach(function (element) {\n      sum += element.value\n    })\n  return (sum / this._elements.size())\n}\n"]}
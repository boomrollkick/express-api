{"version":3,"sources":["../../../../../src/node_modules/@pm2/agent/src/WatchDog.js"],"names":["debug","require","child","path","process","env","PM2_AGENT_ONLINE","module","exports","p","ipm2","conf","relaunching","autoDumpTime","on","autoDump","dump_interval","clearInterval","resurrect","resolve","__dirname","exec","setTimeout","setInterval","pm2Interface","dump","err"],"mappings":"AAAA;;;;;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,qBAAjB,CAAd;AACA,IAAMC,QAAQD,QAAQ,eAAR,CAAd;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEAG,QAAQC,GAAR,CAAYC,gBAAZ,GAA+B,IAA/B;;AAEAC,OAAOC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0BACgBC,CADhB,EACmB;AAAA;;AACf,WAAKC,IAAL,GAAYD,EAAEE,IAAF,CAAOD,IAAnB;AACA,WAAKE,WAAL,GAAmB,KAAnB;AACA,WAAKC,YAAL,GAAoB,IAAI,EAAJ,GAAS,IAA7B;;AAEA;;;AAGA,WAAKH,IAAL,CAAUI,EAAV,CAAa,OAAb,EAAsB,aAAK;AACzBd,cAAM,kBAAN;AACA,cAAKY,WAAL,GAAmB,KAAnB;AACA,cAAKG,QAAL;AACD,OAJD;;AAMAf,YAAM,WAAN;;AAEA,WAAKU,IAAL,CAAUI,EAAV,CAAa,cAAb,EAA6B,aAAK;AAChCd,cAAM,uCAAN;;AAEA,YAAI,MAAKY,WAAL,KAAqB,IAAzB,EAA+B,OAAOZ,MAAM,yBAAN,CAAP;AAC/B,cAAKY,WAAL,GAAmB,IAAnB;;AAEA,YAAI,MAAKI,aAAT,EAAwB;AACtBC,wBAAc,MAAKD,aAAnB;AACD;;AAED,eAAO,MAAKE,SAAL,EAAP;AACD,OAXD;AAYD;AA7BH;AAAA;AAAA,2BA+BgB;AACZD,oBAAc,KAAKD,aAAnB;AACD;AAjCH;AAAA;AAAA,gCAmCsB;AAAA;;AAClBhB,uCAA+BG,KAAKgB,OAAL,CAAaC,SAAb,EAAwB,qBAAxB,CAA/B;AACAlB,YAAMmB,IAAN,WAAmBlB,KAAKgB,OAAL,CAAaC,SAAb,EAAwB,qBAAxB,CAAnB,iBAA+E,aAAK;AAClFE,mBAAW,aAAK;AACd,iBAAKV,WAAL,GAAmB,KAAnB;AACD,SAFD,EAEG,IAFH;AAGD,OAJD;AAKD;AA1CH;AAAA;AAAA,+BA4CqB;AAAA;;AACjB,WAAKI,aAAL,GAAqBO,YAAY,aAAK;AACpC,YAAI,OAAKX,WAAL,KAAqB,IAAzB,EAA+B;;AAE/B,eAAKF,IAAL,CAAUc,YAAV,CAAuBC,IAAvB,CAA4B,UAAUC,GAAV,EAAe;AACzC,iBAAOA,MAAM1B,MAAM,oBAAN,EAA4B0B,GAA5B,CAAN,GAAyC1B,MAAM,yBAAN,CAAhD;AACD,SAFD;AAGD,OANoB,EAMlB,KAAKa,YANa,CAArB;AAOD;AApDH;;AAAA;AAAA","file":"WatchDog.js","sourcesContent":["'use strict'\n\nconst debug = require('debug')('interactor:watchdog')\nconst child = require('child_process')\nconst path = require('path')\n\nprocess.env.PM2_AGENT_ONLINE = true\n\nmodule.exports = class WatchDog {\n  static start (p) {\n    this.ipm2 = p.conf.ipm2\n    this.relaunching = false\n    this.autoDumpTime = 5 * 60 * 1000\n\n    /**\n     * Handle PM2 connection state changes\n     */\n    this.ipm2.on('ready', _ => {\n      debug('Connected to PM2')\n      this.relaunching = false\n      this.autoDump()\n    })\n\n    debug('Launching')\n\n    this.ipm2.on('reconnecting', _ => {\n      debug('PM2 is disconnected - Relaunching PM2')\n\n      if (this.relaunching === true) return debug('Already relaunching PM2')\n      this.relaunching = true\n\n      if (this.dump_interval) {\n        clearInterval(this.dump_interval)\n      }\n\n      return this.resurrect()\n    })\n  }\n\n  static stop() {\n    clearInterval(this.dump_interval)\n  }\n\n  static resurrect () {\n    debug(`Trying to launch PM2: ${path.resolve(__dirname, '../../../../bin/pm2')}`)\n    child.exec(`node ${path.resolve(__dirname, '../../../../bin/pm2')} resurrect`, _ => {\n      setTimeout(_ => {\n        this.relaunching = false\n      }, 2500)\n    })\n  }\n\n  static autoDump () {\n    this.dump_interval = setInterval(_ => {\n      if (this.relaunching === true) return\n\n      this.ipm2.pm2Interface.dump(function (err) {\n        return err ? debug('Error when dumping', err) : debug('PM2 process list dumped')\n      })\n    }, this.autoDumpTime)\n  }\n}\n"]}
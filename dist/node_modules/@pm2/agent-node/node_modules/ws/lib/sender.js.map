{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/agent-node/node_modules/ws/lib/sender.js"],"names":["crypto","require","PerMessageDeflate","bufferUtil","validation","constants","Sender","socket","extensions","_extensions","_socket","_firstFragment","_compress","_bufferedBytes","_deflating","_queue","code","data","mask","cb","buf","undefined","EMPTY_BUFFER","isValidStatusCode","TypeError","Buffer","allocUnsafe","writeUInt16BE","byteLength","write","enqueue","doClose","sendFrame","frame","fin","rsv1","opcode","readOnly","isBuffer","ArrayBuffer","from","isView","viewToBuffer","doPing","doPong","options","binary","compress","perMessageDeflate","extensionName","length","_threshold","opts","dispatch","_","readable","writable","dequeue","params","shift","apply","slice","push","list","merge","offset","payloadLength","target","writeUInt32BE","copy","randomBytes","module","exports","view","buffer","byteOffset"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEA,IAAMC,oBAAoBD,QAAQ,sBAAR,CAA1B;AACA,IAAME,aAAaF,QAAQ,eAAR,CAAnB;AACA,IAAMG,aAAaH,QAAQ,cAAR,CAAnB;AACA,IAAMI,YAAYJ,QAAQ,aAAR,CAAlB;;AAEA;;;;IAGMK,M;AACJ;;;;;;AAMA,kBAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAC9B,SAAKC,WAAL,GAAmBD,cAAc,EAAjC;AACA,SAAKE,OAAL,GAAeH,MAAf;;AAEA,SAAKI,cAAL,GAAsB,IAAtB;AACA,SAAKC,SAAL,GAAiB,KAAjB;;AAEA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,MAAL,GAAc,EAAd;AACD;;AAED;;;;;;;;;;;;;;;;;;;AAiEA;;;;;;;;;0BASMC,I,EAAMC,I,EAAMC,I,EAAMC,E,EAAI;AAC1B,UAAIC,GAAJ;;AAEA,UAAIJ,SAASK,SAAb,EAAwB;AACtBD,cAAMf,UAAUiB,YAAhB;AACD,OAFD,MAEO,IACL,OAAON,IAAP,KAAgB,QAAhB,IACA,CAACZ,WAAWmB,iBAAX,CAA6BP,IAA7B,CAFI,EAGL;AACA,cAAM,IAAIQ,SAAJ,CAAc,kDAAd,CAAN;AACD,OALM,MAKA,IAAIP,SAASI,SAAT,IAAsBJ,SAAS,EAAnC,EAAuC;AAC5CG,cAAMK,OAAOC,WAAP,CAAmB,CAAnB,CAAN;AACAN,YAAIO,aAAJ,CAAkBX,IAAlB,EAAwB,CAAxB;AACD,OAHM,MAGA;AACLI,cAAMK,OAAOC,WAAP,CAAmB,IAAID,OAAOG,UAAP,CAAkBX,IAAlB,CAAvB,CAAN;AACAG,YAAIO,aAAJ,CAAkBX,IAAlB,EAAwB,CAAxB;AACAI,YAAIS,KAAJ,CAAUZ,IAAV,EAAgB,CAAhB;AACD;;AAED,UAAI,KAAKH,UAAT,EAAqB;AACnB,aAAKgB,OAAL,CAAa,CAAC,KAAKC,OAAN,EAAeX,GAAf,EAAoBF,IAApB,EAA0BC,EAA1B,CAAb;AACD,OAFD,MAEO;AACL,aAAKY,OAAL,CAAaX,GAAb,EAAkBF,IAAlB,EAAwBC,EAAxB;AACD;AACF;;AAED;;;;;;;;;;;4BAQQF,I,EAAMC,I,EAAMC,E,EAAI;AACtB,WAAKa,SAAL,CACE1B,OAAO2B,KAAP,CAAahB,IAAb,EAAmB;AACjBiB,aAAK,IADY;AAEjBC,cAAM,KAFW;AAGjBC,gBAAQ,IAHS;AAIjBlB,kBAJiB;AAKjBmB,kBAAU;AALO,OAAnB,CADF,EAQElB,EARF;AAUD;;AAED;;;;;;;;;;;yBAQKF,I,EAAMC,I,EAAMC,E,EAAI;AACnB,UAAIkB,WAAW,IAAf;;AAEA,UAAI,CAACZ,OAAOa,QAAP,CAAgBrB,IAAhB,CAAL,EAA4B;AAC1B,YAAIA,gBAAgBsB,WAApB,EAAiC;AAC/BtB,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACD,SAFD,MAEO,IAAIsB,YAAYE,MAAZ,CAAmBxB,IAAnB,CAAJ,EAA8B;AACnCA,iBAAOyB,aAAazB,IAAb,CAAP;AACD,SAFM,MAEA;AACLA,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACAoB,qBAAW,KAAX;AACD;AACF;;AAED,UAAI,KAAKvB,UAAT,EAAqB;AACnB,aAAKgB,OAAL,CAAa,CAAC,KAAKa,MAAN,EAAc1B,IAAd,EAAoBC,IAApB,EAA0BmB,QAA1B,EAAoClB,EAApC,CAAb;AACD,OAFD,MAEO;AACL,aAAKwB,MAAL,CAAY1B,IAAZ,EAAkBC,IAAlB,EAAwBmB,QAAxB,EAAkClB,EAAlC;AACD;AACF;;AAED;;;;;;;;;;;;2BASOF,I,EAAMC,I,EAAMmB,Q,EAAUlB,E,EAAI;AAC/B,WAAKa,SAAL,CACE1B,OAAO2B,KAAP,CAAahB,IAAb,EAAmB;AACjBiB,aAAK,IADY;AAEjBC,cAAM,KAFW;AAGjBC,gBAAQ,IAHS;AAIjBlB,kBAJiB;AAKjBmB;AALiB,OAAnB,CADF,EAQElB,EARF;AAUD;;AAED;;;;;;;;;;;yBAQKF,I,EAAMC,I,EAAMC,E,EAAI;AACnB,UAAIkB,WAAW,IAAf;;AAEA,UAAI,CAACZ,OAAOa,QAAP,CAAgBrB,IAAhB,CAAL,EAA4B;AAC1B,YAAIA,gBAAgBsB,WAApB,EAAiC;AAC/BtB,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACD,SAFD,MAEO,IAAIsB,YAAYE,MAAZ,CAAmBxB,IAAnB,CAAJ,EAA8B;AACnCA,iBAAOyB,aAAazB,IAAb,CAAP;AACD,SAFM,MAEA;AACLA,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACAoB,qBAAW,KAAX;AACD;AACF;;AAED,UAAI,KAAKvB,UAAT,EAAqB;AACnB,aAAKgB,OAAL,CAAa,CAAC,KAAKc,MAAN,EAAc3B,IAAd,EAAoBC,IAApB,EAA0BmB,QAA1B,EAAoClB,EAApC,CAAb;AACD,OAFD,MAEO;AACL,aAAKyB,MAAL,CAAY3B,IAAZ,EAAkBC,IAAlB,EAAwBmB,QAAxB,EAAkClB,EAAlC;AACD;AACF;;AAED;;;;;;;;;;;;2BASOF,I,EAAMC,I,EAAMmB,Q,EAAUlB,E,EAAI;AAC/B,WAAKa,SAAL,CACE1B,OAAO2B,KAAP,CAAahB,IAAb,EAAmB;AACjBiB,aAAK,IADY;AAEjBC,cAAM,KAFW;AAGjBC,gBAAQ,IAHS;AAIjBlB,kBAJiB;AAKjBmB;AALiB,OAAnB,CADF,EAQElB,EARF;AAUD;;AAED;;;;;;;;;;;;;;;yBAYKF,I,EAAM4B,O,EAAS1B,E,EAAI;AACtB,UAAIiB,SAASS,QAAQC,MAAR,GAAiB,CAAjB,GAAqB,CAAlC;AACA,UAAIX,OAAOU,QAAQE,QAAnB;AACA,UAAIV,WAAW,IAAf;;AAEA,UAAI,CAACZ,OAAOa,QAAP,CAAgBrB,IAAhB,CAAL,EAA4B;AAC1B,YAAIA,gBAAgBsB,WAApB,EAAiC;AAC/BtB,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACD,SAFD,MAEO,IAAIsB,YAAYE,MAAZ,CAAmBxB,IAAnB,CAAJ,EAA8B;AACnCA,iBAAOyB,aAAazB,IAAb,CAAP;AACD,SAFM,MAEA;AACLA,iBAAOQ,OAAOe,IAAP,CAAYvB,IAAZ,CAAP;AACAoB,qBAAW,KAAX;AACD;AACF;;AAED,UAAMW,oBAAoB,KAAKvC,WAAL,CAAiBP,kBAAkB+C,aAAnC,CAA1B;;AAEA,UAAI,KAAKtC,cAAT,EAAyB;AACvB,aAAKA,cAAL,GAAsB,KAAtB;AACA,YAAIwB,QAAQa,iBAAZ,EAA+B;AAC7Bb,iBAAOlB,KAAKiC,MAAL,IAAeF,kBAAkBG,UAAxC;AACD;AACD,aAAKvC,SAAL,GAAiBuB,IAAjB;AACD,OAND,MAMO;AACLA,eAAO,KAAP;AACAC,iBAAS,CAAT;AACD;;AAED,UAAIS,QAAQX,GAAZ,EAAiB,KAAKvB,cAAL,GAAsB,IAAtB;;AAEjB,UAAIqC,iBAAJ,EAAuB;AACrB,YAAMI,OAAO;AACXlB,eAAKW,QAAQX,GADF;AAEXC,oBAFW;AAGXC,wBAHW;AAIXlB,gBAAM2B,QAAQ3B,IAJH;AAKXmB;AALW,SAAb;;AAQA,YAAI,KAAKvB,UAAT,EAAqB;AACnB,eAAKgB,OAAL,CAAa,CAAC,KAAKuB,QAAN,EAAgBpC,IAAhB,EAAsB,KAAKL,SAA3B,EAAsCwC,IAAtC,EAA4CjC,EAA5C,CAAb;AACD,SAFD,MAEO;AACL,eAAKkC,QAAL,CAAcpC,IAAd,EAAoB,KAAKL,SAAzB,EAAoCwC,IAApC,EAA0CjC,EAA1C;AACD;AACF,OAdD,MAcO;AACL,aAAKa,SAAL,CACE1B,OAAO2B,KAAP,CAAahB,IAAb,EAAmB;AACjBiB,eAAKW,QAAQX,GADI;AAEjBC,gBAAM,KAFW;AAGjBC,wBAHiB;AAIjBlB,gBAAM2B,QAAQ3B,IAJG;AAKjBmB;AALiB,SAAnB,CADF,EAQElB,EARF;AAUD;AACF;;AAED;;;;;;;;;;;;;;;;;6BAcSF,I,EAAM8B,Q,EAAUF,O,EAAS1B,E,EAAI;AAAA;;AACpC,UAAI,CAAC4B,QAAL,EAAe;AACb,aAAKf,SAAL,CAAe1B,OAAO2B,KAAP,CAAahB,IAAb,EAAmB4B,OAAnB,CAAf,EAA4C1B,EAA5C;AACA;AACD;;AAED,UAAM6B,oBAAoB,KAAKvC,WAAL,CAAiBP,kBAAkB+C,aAAnC,CAA1B;;AAEA,WAAKnC,UAAL,GAAkB,IAAlB;AACAkC,wBAAkBD,QAAlB,CAA2B9B,IAA3B,EAAiC4B,QAAQX,GAAzC,EAA8C,UAACoB,CAAD,EAAIlC,GAAJ,EAAY;AACxD,cAAKN,UAAL,GAAkB,KAAlB;;AAEA,YAAI,CAAC,MAAKJ,OAAL,CAAa6C,QAAd,IAA0B,CAAC,MAAK7C,OAAL,CAAa8C,QAA5C,EAAsD;AACpD;AACA;AACA;AACA,gBAAK3C,cAAL,GAAsB,CAAtB;AACA,gBAAKE,MAAL,CAAYmC,MAAZ,GAAqB,CAArB;AACA;AACD;;AAEDL,gBAAQR,QAAR,GAAmB,KAAnB;AACA,cAAKL,SAAL,CAAe1B,OAAO2B,KAAP,CAAab,GAAb,EAAkByB,OAAlB,CAAf,EAA2C1B,EAA3C;AACA,cAAKsC,OAAL;AACD,OAfD;AAgBD;;AAED;;;;;;;;8BAKU;AACR,aAAO,CAAC,KAAK3C,UAAN,IAAoB,KAAKC,MAAL,CAAYmC,MAAvC,EAA+C;AAC7C,YAAMQ,SAAS,KAAK3C,MAAL,CAAY4C,KAAZ,EAAf;;AAEA,aAAK9C,cAAL,IAAuB6C,OAAO,CAAP,EAAUR,MAAjC;AACAQ,eAAO,CAAP,EAAUE,KAAV,CAAgB,IAAhB,EAAsBF,OAAOG,KAAP,CAAa,CAAb,CAAtB;AACD;AACF;;AAED;;;;;;;;;4BAMQH,M,EAAQ;AACd,WAAK7C,cAAL,IAAuB6C,OAAO,CAAP,EAAUR,MAAjC;AACA,WAAKnC,MAAL,CAAY+C,IAAZ,CAAiBJ,MAAjB;AACD;;AAED;;;;;;;;;;8BAOUK,I,EAAM5C,E,EAAI;AAClB,UAAI4C,KAAKb,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKxC,OAAL,CAAamB,KAAb,CAAmBkC,KAAK,CAAL,CAAnB;AACA,aAAKrD,OAAL,CAAamB,KAAb,CAAmBkC,KAAK,CAAL,CAAnB,EAA4B5C,EAA5B;AACD,OAHD,MAGO;AACL,aAAKT,OAAL,CAAamB,KAAb,CAAmBkC,KAAK,CAAL,CAAnB,EAA4B5C,EAA5B;AACD;AACF;;;0BAzWYF,I,EAAM4B,O,EAAS;AAC1B,UAAMmB,QAAQ/C,KAAKiC,MAAL,GAAc,IAAd,IAAuBL,QAAQ3B,IAAR,IAAgB2B,QAAQR,QAA7D;AACA,UAAI4B,SAASpB,QAAQ3B,IAAR,GAAe,CAAf,GAAmB,CAAhC;AACA,UAAIgD,gBAAgBjD,KAAKiC,MAAzB;;AAEA,UAAIjC,KAAKiC,MAAL,IAAe,KAAnB,EAA0B;AACxBe,kBAAU,CAAV;AACAC,wBAAgB,GAAhB;AACD,OAHD,MAGO,IAAIjD,KAAKiC,MAAL,GAAc,GAAlB,EAAuB;AAC5Be,kBAAU,CAAV;AACAC,wBAAgB,GAAhB;AACD;;AAED,UAAMC,SAAS1C,OAAOC,WAAP,CAAmBsC,QAAQ/C,KAAKiC,MAAL,GAAce,MAAtB,GAA+BA,MAAlD,CAAf;;AAEAE,aAAO,CAAP,IAAYtB,QAAQX,GAAR,GAAcW,QAAQT,MAAR,GAAiB,IAA/B,GAAsCS,QAAQT,MAA1D;AACA,UAAIS,QAAQV,IAAZ,EAAkBgC,OAAO,CAAP,KAAa,IAAb;;AAElB,UAAID,kBAAkB,GAAtB,EAA2B;AACzBC,eAAOxC,aAAP,CAAqBV,KAAKiC,MAA1B,EAAkC,CAAlC;AACD,OAFD,MAEO,IAAIgB,kBAAkB,GAAtB,EAA2B;AAChCC,eAAOC,aAAP,CAAqB,CAArB,EAAwB,CAAxB;AACAD,eAAOC,aAAP,CAAqBnD,KAAKiC,MAA1B,EAAkC,CAAlC;AACD;;AAED,UAAI,CAACL,QAAQ3B,IAAb,EAAmB;AACjBiD,eAAO,CAAP,IAAYD,aAAZ;AACA,YAAIF,KAAJ,EAAW;AACT/C,eAAKoD,IAAL,CAAUF,MAAV,EAAkBF,MAAlB;AACA,iBAAO,CAACE,MAAD,CAAP;AACD;;AAED,eAAO,CAACA,MAAD,EAASlD,IAAT,CAAP;AACD;;AAED,UAAMC,OAAOlB,OAAOsE,WAAP,CAAmB,CAAnB,CAAb;;AAEAH,aAAO,CAAP,IAAYD,gBAAgB,IAA5B;AACAC,aAAOF,SAAS,CAAhB,IAAqB/C,KAAK,CAAL,CAArB;AACAiD,aAAOF,SAAS,CAAhB,IAAqB/C,KAAK,CAAL,CAArB;AACAiD,aAAOF,SAAS,CAAhB,IAAqB/C,KAAK,CAAL,CAArB;AACAiD,aAAOF,SAAS,CAAhB,IAAqB/C,KAAK,CAAL,CAArB;;AAEA,UAAI8C,KAAJ,EAAW;AACT7D,mBAAWe,IAAX,CAAgBD,IAAhB,EAAsBC,IAAtB,EAA4BiD,MAA5B,EAAoCF,MAApC,EAA4ChD,KAAKiC,MAAjD;AACA,eAAO,CAACiB,MAAD,CAAP;AACD;;AAEDhE,iBAAWe,IAAX,CAAgBD,IAAhB,EAAsBC,IAAtB,EAA4BD,IAA5B,EAAkC,CAAlC,EAAqCA,KAAKiC,MAA1C;AACA,aAAO,CAACiB,MAAD,EAASlD,IAAT,CAAP;AACD;;;;;;AA0THsD,OAAOC,OAAP,GAAiBlE,MAAjB;;AAEA;;;;;;;AAOA,SAASoC,YAAT,CAAsB+B,IAAtB,EAA4B;AAC1B,MAAMrD,MAAMK,OAAOe,IAAP,CAAYiC,KAAKC,MAAjB,CAAZ;;AAEA,MAAID,KAAK7C,UAAL,KAAoB6C,KAAKC,MAAL,CAAY9C,UAApC,EAAgD;AAC9C,WAAOR,IAAIyC,KAAJ,CAAUY,KAAKE,UAAf,EAA2BF,KAAKE,UAAL,GAAkBF,KAAK7C,UAAlD,CAAP;AACD;;AAED,SAAOR,GAAP;AACD","file":"sender.js","sourcesContent":["'use strict';\n\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      buf = constants.EMPTY_BUFFER;\n    } else if (\n      typeof code !== 'number' ||\n      !validation.isValidStatusCode(code)\n    ) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly, cb]);\n    } else {\n      this.doPing(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly, cb]);\n    } else {\n      this.doPong(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send(data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      this._deflating = false;\n\n      if (!this._socket.readable && !this._socket.writable) {\n        //\n        // The socket is closed. Clear the queue and bail out.\n        //\n        this._bufferedBytes = 0;\n        this._queue.length = 0;\n        return;\n      }\n\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer(view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n"]}
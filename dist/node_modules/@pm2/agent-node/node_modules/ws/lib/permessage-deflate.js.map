{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/agent-node/node_modules/ws/lib/permessage-deflate.js"],"names":["Limiter","require","zlib","bufferUtil","constants","TRAILER","Buffer","from","EMPTY_BLOCK","kPerMessageDeflate","Symbol","kWriteInProgress","kPendingClose","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","PerMessageDeflate","options","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","undefined","_isServer","_deflate","_inflate","params","concurrency","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","close","offers","opts","accepted","find","Error","response","forEach","Object","keys","key","value","length","num","Number","isInteger","TypeError","data","fin","callback","push","done","_decompress","err","result","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","assign","zlibInflateOptions","on","inflateOnError","inflateOnData","write","flush","concat","process","nextTick","createDeflateRaw","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","slice","module","exports","chunk","RangeError","kStatusCode","removeListener","reset"],"mappings":"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","file":"permessage-deflate.js","sourcesContent":["'use strict';\n\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst constants = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw(\n        Object.assign({}, this._options.zlibInflateOptions, { windowBits })\n      );\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw(\n        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })\n      );\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][constants.kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[constants.kStatusCode] = 1007;\n  this[kCallback](err);\n}\n"]}
{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/agent-node/node_modules/ws/lib/buffer-util.js"],"names":["concat","list","totalLength","target","Buffer","allocUnsafe","offset","i","length","buf","copy","_mask","source","mask","output","_unmask","buffer","bufferUtil","require","bu","BufferUtil","module","exports","unmask","e"],"mappings":"AAAA;;AAEA;;;;;;;;;AAQA,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,WAAtB,EAAmC;AACjC,MAAMC,SAASC,OAAOC,WAAP,CAAmBH,WAAnB,CAAf;AACA,MAAII,SAAS,CAAb;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,KAAKO,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,QAAME,MAAMR,KAAKM,CAAL,CAAZ;AACAE,QAAIC,IAAJ,CAASP,MAAT,EAAiBG,MAAjB;AACAA,cAAUG,IAAID,MAAd;AACD;;AAED,SAAOL,MAAP;AACD;;AAED;;;;;;;;;;AAUA,SAASQ,KAAT,CAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCR,MAArC,EAA6CE,MAA7C,EAAqD;AACnD,OAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIC,MAApB,EAA4BD,GAA5B,EAAiC;AAC/BO,WAAOR,SAASC,CAAhB,IAAqBK,OAAOL,CAAP,IAAYM,KAAKN,IAAI,CAAT,CAAjC;AACD;AACF;;AAED;;;;;;;AAOA,SAASQ,OAAT,CAAiBC,MAAjB,EAAyBH,IAAzB,EAA+B;AAC7B;AACA,MAAML,SAASQ,OAAOR,MAAtB;AACA,OAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIC,MAApB,EAA4BD,GAA5B,EAAiC;AAC/BS,WAAOT,CAAP,KAAaM,KAAKN,IAAI,CAAT,CAAb;AACD;AACF;;AAED,IAAI;AACF,MAAMU,aAAaC,QAAQ,YAAR,CAAnB;AACA,MAAMC,KAAKF,WAAWG,UAAX,IAAyBH,UAApC;;AAEAI,SAAOC,OAAP,GAAiB;AACfT,QADe,gBACVD,MADU,EACFC,MADE,EACIC,MADJ,EACYR,MADZ,EACoBE,MADpB,EAC4B;AACzC,UAAIA,SAAS,EAAb,EAAiBG,MAAMC,MAAN,EAAcC,MAAd,EAAoBC,MAApB,EAA4BR,MAA5B,EAAoCE,MAApC,EAAjB,KACKW,GAAGN,IAAH,CAAQD,MAAR,EAAgBC,MAAhB,EAAsBC,MAAtB,EAA8BR,MAA9B,EAAsCE,MAAtC;AACN,KAJc;AAKfe,UALe,kBAKRP,MALQ,EAKAH,IALA,EAKM;AACnB,UAAIG,OAAOR,MAAP,GAAgB,EAApB,EAAwBO,QAAQC,MAAR,EAAgBH,IAAhB,EAAxB,KACKM,GAAGI,MAAH,CAAUP,MAAV,EAAkBH,IAAlB;AACN,KARc;;AASfb;AATe,GAAjB;AAWD,CAfD,CAeE,OAAOwB,CAAP,EAAU,0BAA2B;AACrCH,SAAOC,OAAP,GAAiB,EAAEtB,cAAF,EAAUa,MAAMF,KAAhB,EAAuBY,QAAQR,OAA/B,EAAjB;AACD","file":"buffer-util.js","sourcesContent":["'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n"]}
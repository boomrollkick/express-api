{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/agent-node/node_modules/ws/lib/receiver.js"],"names":["stream","require","PerMessageDeflate","bufferUtil","validation","constants","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","Receiver","binaryType","extensions","maxPayload","_binaryType","BINARY_TYPES","kWebSocket","undefined","_extensions","_maxPayload","_bufferedBytes","_buffers","_compressed","_payloadLength","_mask","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","chunk","encoding","cb","length","push","startLoop","n","shift","buf","slice","dst","Buffer","allocUnsafe","copy","err","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","error","RangeError","compressed","extensionName","haveLength","readUInt16BE","num","readUInt32BE","Math","pow","data","EMPTY_BUFFER","unmask","controlMessage","decompress","dataMessage","perMessageDeflate","er","messageLength","fragments","toBuffer","toArrayBuffer","emit","isValidUTF8","Error","toString","end","code","isValidStatusCode","Writable","module","exports","ErrorCtor","message","prefix","statusCode","captureStackTrace","kStatusCode","concat","byteOffset","byteLength","buffer"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEA,IAAMC,oBAAoBD,QAAQ,sBAAR,CAA1B;AACA,IAAME,aAAaF,QAAQ,eAAR,CAAnB;AACA,IAAMG,aAAaH,QAAQ,cAAR,CAAnB;AACA,IAAMI,YAAYJ,QAAQ,aAAR,CAAlB;;AAEA,IAAMK,WAAW,CAAjB;AACA,IAAMC,wBAAwB,CAA9B;AACA,IAAMC,wBAAwB,CAA9B;AACA,IAAMC,WAAW,CAAjB;AACA,IAAMC,WAAW,CAAjB;AACA,IAAMC,YAAY,CAAlB;;AAEA;;;;;;IAKMC,Q;;;AACJ;;;;;;;AAOA,oBAAYC,UAAZ,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgD;AAAA;;AAAA;;AAG9C,UAAKC,WAAL,GAAmBH,cAAcR,UAAUY,YAAV,CAAuB,CAAvB,CAAjC;AACA,UAAKZ,UAAUa,UAAf,IAA6BC,SAA7B;AACA,UAAKC,WAAL,GAAmBN,cAAc,EAAjC;AACA,UAAKO,WAAL,GAAmBN,aAAa,CAAhC;;AAEA,UAAKO,cAAL,GAAsB,CAAtB;AACA,UAAKC,QAAL,GAAgB,EAAhB;;AAEA,UAAKC,WAAL,GAAmB,KAAnB;AACA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,KAAL,GAAaP,SAAb;AACA,UAAKQ,WAAL,GAAmB,CAAnB;AACA,UAAKC,OAAL,GAAe,KAAf;AACA,UAAKC,IAAL,GAAY,KAAZ;AACA,UAAKC,OAAL,GAAe,CAAf;;AAEA,UAAKC,mBAAL,GAA2B,CAA3B;AACA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,UAAL,GAAkB,EAAlB;;AAEA,UAAKC,MAAL,GAAc5B,QAAd;AACA,UAAK6B,KAAL,GAAa,KAAb;AAxB8C;AAyB/C;;AAED;;;;;;;;;;;2BAOOC,K,EAAOC,Q,EAAUC,E,EAAI;AAC1B,UAAI,KAAKR,OAAL,KAAiB,IAArB,EAA2B,OAAOQ,IAAP;;AAE3B,WAAKhB,cAAL,IAAuBc,MAAMG,MAA7B;AACA,WAAKhB,QAAL,CAAciB,IAAd,CAAmBJ,KAAnB;AACA,WAAKK,SAAL,CAAeH,EAAf;AACD;;AAED;;;;;;;;;;4BAOQI,C,EAAG;AACT,WAAKpB,cAAL,IAAuBoB,CAAvB;;AAEA,UAAIA,MAAM,KAAKnB,QAAL,CAAc,CAAd,EAAiBgB,MAA3B,EAAmC,OAAO,KAAKhB,QAAL,CAAcoB,KAAd,EAAP;;AAEnC,UAAID,IAAI,KAAKnB,QAAL,CAAc,CAAd,EAAiBgB,MAAzB,EAAiC;AAC/B,YAAMK,MAAM,KAAKrB,QAAL,CAAc,CAAd,CAAZ;AACA,aAAKA,QAAL,CAAc,CAAd,IAAmBqB,IAAIC,KAAJ,CAAUH,CAAV,CAAnB;AACA,eAAOE,IAAIC,KAAJ,CAAU,CAAV,EAAaH,CAAb,CAAP;AACD;;AAED,UAAMI,MAAMC,OAAOC,WAAP,CAAmBN,CAAnB,CAAZ;;AAEA,SAAG;AACD,YAAME,OAAM,KAAKrB,QAAL,CAAc,CAAd,CAAZ;;AAEA,YAAImB,KAAKE,KAAIL,MAAb,EAAqB;AACnB,eAAKhB,QAAL,CAAcoB,KAAd,GAAsBM,IAAtB,CAA2BH,GAA3B,EAAgCA,IAAIP,MAAJ,GAAaG,CAA7C;AACD,SAFD,MAEO;AACLE,eAAIK,IAAJ,CAASH,GAAT,EAAcA,IAAIP,MAAJ,GAAaG,CAA3B,EAA8B,CAA9B,EAAiCA,CAAjC;AACA,eAAKnB,QAAL,CAAc,CAAd,IAAmBqB,KAAIC,KAAJ,CAAUH,CAAV,CAAnB;AACD;;AAEDA,aAAKE,KAAIL,MAAT;AACD,OAXD,QAWSG,IAAI,CAXb;;AAaA,aAAOI,GAAP;AACD;;AAED;;;;;;;;;8BAMUR,E,EAAI;AACZ,UAAIY,GAAJ;AACA,WAAKf,KAAL,GAAa,IAAb;;AAEA,SAAG;AACD,gBAAQ,KAAKD,MAAb;AACE,eAAK5B,QAAL;AACE4C,kBAAM,KAAKC,OAAL,EAAN;AACA;AACF,eAAK5C,qBAAL;AACE2C,kBAAM,KAAKE,kBAAL,EAAN;AACA;AACF,eAAK5C,qBAAL;AACE0C,kBAAM,KAAKG,kBAAL,EAAN;AACA;AACF,eAAK5C,QAAL;AACE,iBAAK6C,OAAL;AACA;AACF,eAAK5C,QAAL;AACEwC,kBAAM,KAAKK,OAAL,CAAajB,EAAb,CAAN;AACA;AACF;AACE;AACA,iBAAKH,KAAL,GAAa,KAAb;AACA;AAnBJ;AAqBD,OAtBD,QAsBS,KAAKA,KAtBd;;AAwBAG,SAAGY,GAAH;AACD;;AAED;;;;;;;;;8BAMU;AACR,UAAI,KAAK5B,cAAL,GAAsB,CAA1B,EAA6B;AAC3B,aAAKa,KAAL,GAAa,KAAb;AACA;AACD;;AAED,UAAMS,MAAM,KAAKY,OAAL,CAAa,CAAb,CAAZ;;AAEA,UAAI,CAACZ,IAAI,CAAJ,IAAS,IAAV,MAAoB,IAAxB,EAA8B;AAC5B,aAAKT,KAAL,GAAa,KAAb;AACA,eAAOsB,MAAMC,UAAN,EAAkB,6BAAlB,EAAiD,IAAjD,EAAuD,IAAvD,CAAP;AACD;;AAED,UAAMC,aAAa,CAACf,IAAI,CAAJ,IAAS,IAAV,MAAoB,IAAvC;;AAEA,UAAIe,cAAc,CAAC,KAAKvC,WAAL,CAAiBlB,kBAAkB0D,aAAnC,CAAnB,EAAsE;AACpE,aAAKzB,KAAL,GAAa,KAAb;AACA,eAAOsB,MAAMC,UAAN,EAAkB,oBAAlB,EAAwC,IAAxC,EAA8C,IAA9C,CAAP;AACD;;AAED,WAAK7B,IAAL,GAAY,CAACe,IAAI,CAAJ,IAAS,IAAV,MAAoB,IAAhC;AACA,WAAKd,OAAL,GAAec,IAAI,CAAJ,IAAS,IAAxB;AACA,WAAKnB,cAAL,GAAsBmB,IAAI,CAAJ,IAAS,IAA/B;;AAEA,UAAI,KAAKd,OAAL,KAAiB,IAArB,EAA2B;AACzB,YAAI6B,UAAJ,EAAgB;AACd,eAAKxB,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,EAAkB,oBAAlB,EAAwC,IAAxC,EAA8C,IAA9C,CAAP;AACD;;AAED,YAAI,CAAC,KAAK/B,WAAV,EAAuB;AACrB,eAAKQ,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,EAAkB,kBAAlB,EAAsC,IAAtC,EAA4C,IAA5C,CAAP;AACD;;AAED,aAAK5B,OAAL,GAAe,KAAKH,WAApB;AACD,OAZD,MAYO,IAAI,KAAKG,OAAL,KAAiB,IAAjB,IAAyB,KAAKA,OAAL,KAAiB,IAA9C,EAAoD;AACzD,YAAI,KAAKH,WAAT,EAAsB;AACpB,eAAKQ,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,sBAAoC,KAAK5B,OAAzC,EAAoD,IAApD,EAA0D,IAA1D,CAAP;AACD;;AAED,aAAKN,WAAL,GAAmBmC,UAAnB;AACD,OAPM,MAOA,IAAI,KAAK7B,OAAL,GAAe,IAAf,IAAuB,KAAKA,OAAL,GAAe,IAA1C,EAAgD;AACrD,YAAI,CAAC,KAAKD,IAAV,EAAgB;AACd,eAAKM,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,EAAkB,iBAAlB,EAAqC,IAArC,EAA2C,IAA3C,CAAP;AACD;;AAED,YAAIC,UAAJ,EAAgB;AACd,eAAKxB,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,EAAkB,oBAAlB,EAAwC,IAAxC,EAA8C,IAA9C,CAAP;AACD;;AAED,YAAI,KAAKjC,cAAL,GAAsB,IAA1B,EAAgC;AAC9B,eAAKU,KAAL,GAAa,KAAb;AACA,iBAAOsB,MACLC,UADK,8BAEqB,KAAKjC,cAF1B,EAGL,IAHK,EAIL,IAJK,CAAP;AAMD;AACF,OApBM,MAoBA;AACL,aAAKU,KAAL,GAAa,KAAb;AACA,eAAOsB,MAAMC,UAAN,sBAAoC,KAAK5B,OAAzC,EAAoD,IAApD,EAA0D,IAA1D,CAAP;AACD;;AAED,UAAI,CAAC,KAAKD,IAAN,IAAc,CAAC,KAAKF,WAAxB,EAAqC,KAAKA,WAAL,GAAmB,KAAKG,OAAxB;AACrC,WAAKF,OAAL,GAAe,CAACgB,IAAI,CAAJ,IAAS,IAAV,MAAoB,IAAnC;;AAEA,UAAI,KAAKnB,cAAL,KAAwB,GAA5B,EAAiC,KAAKS,MAAL,GAAc3B,qBAAd,CAAjC,KACK,IAAI,KAAKkB,cAAL,KAAwB,GAA5B,EAAiC,KAAKS,MAAL,GAAc1B,qBAAd,CAAjC,KACA,OAAO,KAAKqD,UAAL,EAAP;AACN;;AAED;;;;;;;;;yCAMqB;AACnB,UAAI,KAAKvC,cAAL,GAAsB,CAA1B,EAA6B;AAC3B,aAAKa,KAAL,GAAa,KAAb;AACA;AACD;;AAED,WAAKV,cAAL,GAAsB,KAAK+B,OAAL,CAAa,CAAb,EAAgBM,YAAhB,CAA6B,CAA7B,CAAtB;AACA,aAAO,KAAKD,UAAL,EAAP;AACD;;AAED;;;;;;;;;yCAMqB;AACnB,UAAI,KAAKvC,cAAL,GAAsB,CAA1B,EAA6B;AAC3B,aAAKa,KAAL,GAAa,KAAb;AACA;AACD;;AAED,UAAMS,MAAM,KAAKY,OAAL,CAAa,CAAb,CAAZ;AACA,UAAMO,MAAMnB,IAAIoB,YAAJ,CAAiB,CAAjB,CAAZ;;AAEA;AACA;AACA;AACA;AACA,UAAID,MAAME,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAK,EAAjB,IAAuB,CAAjC,EAAoC;AAClC,aAAK/B,KAAL,GAAa,KAAb;AACA,eAAOsB,MACLC,UADK,EAEL,wDAFK,EAGL,KAHK,EAIL,IAJK,CAAP;AAMD;;AAED,WAAKjC,cAAL,GAAsBsC,MAAME,KAAKC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAN,GAAwBtB,IAAIoB,YAAJ,CAAiB,CAAjB,CAA9C;AACA,aAAO,KAAKH,UAAL,EAAP;AACD;;AAED;;;;;;;;;iCAMa;AACX,UAAI,KAAKpC,cAAL,IAAuB,KAAKK,OAAL,GAAe,IAA1C,EAAgD;AAC9C,aAAKC,mBAAL,IAA4B,KAAKN,cAAjC;AACA,YAAI,KAAKM,mBAAL,GAA2B,KAAKV,WAAhC,IAA+C,KAAKA,WAAL,GAAmB,CAAtE,EAAyE;AACvE,eAAKc,KAAL,GAAa,KAAb;AACA,iBAAOsB,MAAMC,UAAN,EAAkB,2BAAlB,EAA+C,KAA/C,EAAsD,IAAtD,CAAP;AACD;AACF;;AAED,UAAI,KAAK9B,OAAT,EAAkB,KAAKM,MAAL,GAAczB,QAAd,CAAlB,KACK,KAAKyB,MAAL,GAAcxB,QAAd;AACN;;AAED;;;;;;;;8BAKU;AACR,UAAI,KAAKY,cAAL,GAAsB,CAA1B,EAA6B;AAC3B,aAAKa,KAAL,GAAa,KAAb;AACA;AACD;;AAED,WAAKT,KAAL,GAAa,KAAK8B,OAAL,CAAa,CAAb,CAAb;AACA,WAAKtB,MAAL,GAAcxB,QAAd;AACD;;AAED;;;;;;;;;;4BAOQ4B,E,EAAI;AACV,UAAI6B,OAAO9D,UAAU+D,YAArB;;AAEA,UAAI,KAAK3C,cAAT,EAAyB;AACvB,YAAI,KAAKH,cAAL,GAAsB,KAAKG,cAA/B,EAA+C;AAC7C,eAAKU,KAAL,GAAa,KAAb;AACA;AACD;;AAEDgC,eAAO,KAAKX,OAAL,CAAa,KAAK/B,cAAlB,CAAP;AACA,YAAI,KAAKG,OAAT,EAAkBzB,WAAWkE,MAAX,CAAkBF,IAAlB,EAAwB,KAAKzC,KAA7B;AACnB;;AAED,UAAI,KAAKI,OAAL,GAAe,IAAnB,EAAyB,OAAO,KAAKwC,cAAL,CAAoBH,IAApB,CAAP;;AAEzB,UAAI,KAAK3C,WAAT,EAAsB;AACpB,aAAKU,MAAL,GAAcvB,SAAd;AACA,aAAK4D,UAAL,CAAgBJ,IAAhB,EAAsB7B,EAAtB;AACA;AACD;;AAED,UAAI6B,KAAK5B,MAAT,EAAiB;AACf;AACA;AACA;AACA;AACA,aAAKP,cAAL,GAAsB,KAAKD,mBAA3B;AACA,aAAKE,UAAL,CAAgBO,IAAhB,CAAqB2B,IAArB;AACD;;AAED,aAAO,KAAKK,WAAL,EAAP;AACD;;AAED;;;;;;;;;;+BAOWL,I,EAAM7B,E,EAAI;AAAA;;AACnB,UAAMmC,oBAAoB,KAAKrD,WAAL,CAAiBlB,kBAAkB0D,aAAnC,CAA1B;;AAEAa,wBAAkBF,UAAlB,CAA6BJ,IAA7B,EAAmC,KAAKtC,IAAxC,EAA8C,UAACqB,GAAD,EAAMN,GAAN,EAAc;AAC1D,YAAIM,GAAJ,EAAS,OAAOZ,GAAGY,GAAH,CAAP;;AAET,YAAIN,IAAIL,MAAR,EAAgB;AACd,iBAAKP,cAAL,IAAuBY,IAAIL,MAA3B;AACA,cAAI,OAAKP,cAAL,GAAsB,OAAKX,WAA3B,IAA0C,OAAKA,WAAL,GAAmB,CAAjE,EAAoE;AAClE,mBAAOiB,GACLmB,MAAMC,UAAN,EAAkB,2BAAlB,EAA+C,KAA/C,EAAsD,IAAtD,CADK,CAAP;AAGD;;AAED,iBAAKzB,UAAL,CAAgBO,IAAhB,CAAqBI,GAArB;AACD;;AAED,YAAM8B,KAAK,OAAKF,WAAL,EAAX;AACA,YAAIE,EAAJ,EAAQ,OAAOpC,GAAGoC,EAAH,CAAP;;AAER,eAAKjC,SAAL,CAAeH,EAAf;AACD,OAlBD;AAmBD;;AAED;;;;;;;;;kCAMc;AACZ,UAAI,KAAKT,IAAT,EAAe;AACb,YAAM8C,gBAAgB,KAAK3C,cAA3B;AACA,YAAM4C,YAAY,KAAK3C,UAAvB;;AAEA,aAAKF,mBAAL,GAA2B,CAA3B;AACA,aAAKC,cAAL,GAAsB,CAAtB;AACA,aAAKL,WAAL,GAAmB,CAAnB;AACA,aAAKM,UAAL,GAAkB,EAAlB;;AAEA,YAAI,KAAKH,OAAL,KAAiB,CAArB,EAAwB;AACtB,cAAIqC,IAAJ;;AAEA,cAAI,KAAKnD,WAAL,KAAqB,YAAzB,EAAuC;AACrCmD,mBAAOU,SAASD,SAAT,EAAoBD,aAApB,CAAP;AACD,WAFD,MAEO,IAAI,KAAK3D,WAAL,KAAqB,aAAzB,EAAwC;AAC7CmD,mBAAOW,cAAcD,SAASD,SAAT,EAAoBD,aAApB,CAAd,CAAP;AACD,WAFM,MAEA;AACLR,mBAAOS,SAAP;AACD;;AAED,eAAKG,IAAL,CAAU,SAAV,EAAqBZ,IAArB;AACD,SAZD,MAYO;AACL,cAAMvB,MAAMiC,SAASD,SAAT,EAAoBD,aAApB,CAAZ;;AAEA,cAAI,CAACvE,WAAW4E,WAAX,CAAuBpC,GAAvB,CAAL,EAAkC;AAChC,iBAAKT,KAAL,GAAa,KAAb;AACA,mBAAOsB,MAAMwB,KAAN,EAAa,wBAAb,EAAuC,IAAvC,EAA6C,IAA7C,CAAP;AACD;;AAED,eAAKF,IAAL,CAAU,SAAV,EAAqBnC,IAAIsC,QAAJ,EAArB;AACD;AACF;;AAED,WAAKhD,MAAL,GAAc5B,QAAd;AACD;;AAED;;;;;;;;;;mCAOe6D,I,EAAM;AACnB,UAAI,KAAKrC,OAAL,KAAiB,IAArB,EAA2B;AACzB,aAAKK,KAAL,GAAa,KAAb;;AAEA,YAAIgC,KAAK5B,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAKwC,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,EAA5B;AACA,eAAKI,GAAL;AACD,SAHD,MAGO,IAAIhB,KAAK5B,MAAL,KAAgB,CAApB,EAAuB;AAC5B,iBAAOkB,MAAMC,UAAN,EAAkB,0BAAlB,EAA8C,IAA9C,EAAoD,IAApD,CAAP;AACD,SAFM,MAEA;AACL,cAAM0B,OAAOjB,KAAKL,YAAL,CAAkB,CAAlB,CAAb;;AAEA,cAAI,CAAC1D,WAAWiF,iBAAX,CAA6BD,IAA7B,CAAL,EAAyC;AACvC,mBAAO3B,MAAMC,UAAN,2BAAyC0B,IAAzC,EAAiD,IAAjD,EAAuD,IAAvD,CAAP;AACD;;AAED,cAAMxC,MAAMuB,KAAKtB,KAAL,CAAW,CAAX,CAAZ;;AAEA,cAAI,CAACzC,WAAW4E,WAAX,CAAuBpC,GAAvB,CAAL,EAAkC;AAChC,mBAAOa,MAAMwB,KAAN,EAAa,wBAAb,EAAuC,IAAvC,EAA6C,IAA7C,CAAP;AACD;;AAED,eAAKF,IAAL,CAAU,UAAV,EAAsBK,IAAtB,EAA4BxC,IAAIsC,QAAJ,EAA5B;AACA,eAAKC,GAAL;AACD;;AAED;AACD;;AAED,UAAI,KAAKrD,OAAL,KAAiB,IAArB,EAA2B,KAAKiD,IAAL,CAAU,MAAV,EAAkBZ,IAAlB,EAA3B,KACK,KAAKY,IAAL,CAAU,MAAV,EAAkBZ,IAAlB;;AAEL,WAAKjC,MAAL,GAAc5B,QAAd;AACD;;;;EA1boBN,OAAOsF,Q;;AA6b9BC,OAAOC,OAAP,GAAiB5E,QAAjB;;AAEA;;;;;;;;;;;AAWA,SAAS6C,KAAT,CAAegC,SAAf,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,UAA3C,EAAuD;AACrD,MAAM1C,MAAM,IAAIuC,SAAJ,CACVE,uCAAqCD,OAArC,GAAiDA,OADvC,CAAZ;;AAIAT,QAAMY,iBAAN,CAAwB3C,GAAxB,EAA6BO,KAA7B;AACAP,MAAI7C,UAAUyF,WAAd,IAA6BF,UAA7B;AACA,SAAO1C,GAAP;AACD;;AAED;;;;;;;;AAQA,SAAS2B,QAAT,CAAkBD,SAAlB,EAA6BD,aAA7B,EAA4C;AAC1C,MAAIC,UAAUrC,MAAV,KAAqB,CAAzB,EAA4B,OAAOqC,UAAU,CAAV,CAAP;AAC5B,MAAIA,UAAUrC,MAAV,GAAmB,CAAvB,EAA0B,OAAOpC,WAAW4F,MAAX,CAAkBnB,SAAlB,EAA6BD,aAA7B,CAAP;AAC1B,SAAOtE,UAAU+D,YAAjB;AACD;;AAED;;;;;;AAMA,SAASU,aAAT,CAAuBlC,GAAvB,EAA4B;AAC1B,MAAIA,IAAIoD,UAAJ,KAAmB,CAAnB,IAAwBpD,IAAIqD,UAAJ,KAAmBrD,IAAIsD,MAAJ,CAAWD,UAA1D,EAAsE;AACpE,WAAOrD,IAAIsD,MAAX;AACD;;AAED,SAAOtD,IAAIsD,MAAJ,CAAWrD,KAAX,CAAiBD,IAAIoD,UAArB,EAAiCpD,IAAIoD,UAAJ,GAAiBpD,IAAIqD,UAAtD,CAAP;AACD","file":"receiver.js","sourcesContent":["'use strict';\n\nconst stream = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends stream.Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this[constants.kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n\n      if (n >= buf.length) {\n        this._buffers.shift().copy(dst, dst.length - n);\n      } else {\n        buf.copy(dst, dst.length - n, 0, n);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    var err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(RangeError, 'Max payload size exceeded', false, 1009)\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!validation.isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!validation.isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!validation.isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.emit('ping', data);\n    else this.emit('pong', data);\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[constants.kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer(fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n"]}
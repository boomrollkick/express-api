{"version":3,"sources":["../../../../../../src/node_modules/@pm2/agent-node/src/utils/meta.js"],"names":["os","require","pkg","cst","module","exports","publicKey","server","MACHINE_NAME","PUBLIC_KEY","PM2_VERSION","MEMORY","totalmem","HOSTNAME","hostname","CPUS","cpus","computeInternalIp","interfaceType","v4","default","family","v6","retrieveAddress","type","interfce","ret","interfaces","networkInterfaces","Object","keys","forEach","el","el2","internal","address","getServerMeta","cpuMeta","number","length","info","model","username","process","env","SUDO_USER","C9_USER","LOGNAME","USER","LNAME","USERNAME","loadavg","total_mem","free_mem","freemem","cpu","uptime","platform","arch","interaction","pm2_version","pm2_agent_version","version","node_version","lastCpuUsage","getCpuUsage","usage","_start","assign","cpuUsage","time","Date","now","percent","system","user","defineProperty","value","Math","floor","getMemoryUsage","memoryUsage","rss"],"mappings":"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","file":"meta.js","sourcesContent":["'use strict'\n\nconst os = require('os')\nconst pkg = require('../../package.json')\nconst cst = require('../../constants')\n\nmodule.exports = (publicKey, server) => {\n  return {\n    MACHINE_NAME: server,\n    PUBLIC_KEY: publicKey,\n    PM2_VERSION: cst.PM2_VERSION,\n    MEMORY: os.totalmem() / 1000 / 1000,\n    HOSTNAME: os.hostname(),\n    CPUS: os.cpus()\n  }\n}\n\nmodule.exports.computeInternalIp = _ => {\n  const interfaceType = {\n    v4: {\n      default: '127.0.0.1',\n      family: 'IPv4'\n    },\n    v6: {\n      default: '::1',\n      family: 'IPv6'\n    }\n  }\n\n  const retrieveAddress = (type) => {\n    let interfce = interfaceType[type]\n    let ret = interfce.default\n    let interfaces = os.networkInterfaces()\n\n    Object.keys(interfaces).forEach(function (el) {\n      interfaces[el].forEach(function (el2) {\n        if (!el2.internal && el2.family === interfce.family) {\n          ret = el2.address\n        }\n      })\n    })\n    return ret\n  }\n\n  return retrieveAddress('v4')\n}\n\nmodule.exports.getServerMeta = _ => {\n  const cpuMeta = {\n    number: os.cpus().length,\n    info: os.cpus().length > 0 ? os.cpus()[0].model : 'no-data'\n  }\n  const username = process.env.SUDO_USER || process.env.C9_USER || process.env.LOGNAME ||\n      process.env.USER || process.env.LNAME || process.env.USERNAME\n\n  return {\n    loadavg: os.loadavg(),\n    total_mem: os.totalmem(),\n    free_mem: os.freemem(),\n    cpu: cpuMeta,\n    username: username,\n    hostname: os.hostname(),\n    uptime: os.uptime(),\n    type: os.type(),\n    platform: os.platform(),\n    arch: os.arch(),\n    interaction: true,\n    pm2_version: cst.PM2_VERSION,\n    pm2_agent_version: pkg.version,\n    node_version: process.version\n  }\n}\n\nlet lastCpuUsage = {}\nconst getCpuUsage = _ => {\n  let usage = null\n  if (lastCpuUsage && lastCpuUsage._start) {\n    usage = Object.assign({}, process.cpuUsage(lastCpuUsage._start.cpuUsage))\n    usage.time = Date.now() - lastCpuUsage._start.time\n  } else {\n    usage = Object.assign({}, process.cpuUsage())\n    usage.time = process.uptime() * 1000 // s to ms\n  }\n  usage.percent = (usage.system + usage.user) / (usage.time * 10)\n  Object.defineProperty(usage, '_start', {\n    value: {\n      cpuUsage: process.cpuUsage(),\n      time: Date.now()\n    }\n  })\n  lastCpuUsage = usage\n  return Math.floor(usage.percent)\n}\nmodule.exports.getCpuUsage = getCpuUsage\n\nmodule.exports.getMemoryUsage = _ => {\n  return Math.floor(process.memoryUsage().rss)\n}\n"]}
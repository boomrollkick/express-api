{"version":3,"sources":["../../../../../src/node_modules/@pm2/agent-node/tests/index.js"],"names":["process","env","NODE_ENV","Agent","require","assert","transport","createAgent","proc","cb","prototype","connect","module","exports","tmp","checkCredentials","config","ws","publicKey","secretKey","appName","agent","destruct","next","describe","it","done","Error","start","then","console","log","e","catch","err","internalIp","unique_id","clearInterval","statusInterval","ids","i","id","generateUniqueId","includes","push","generateProcess","pid","name","interpreter","restart_time","created_at","exec_mode","watching","pm_uptime","status","pm_id","cpu","memory","versioning","node_env","Array","isArray","axm_actions","axm_monitor","axm_options","axm_dynamic","configProc","action_type","action_name","sendLogs","send","channel","data","listenForLogs","error","setTimeout","Object","assign","logFilter"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-env mocha */\n\n'use strict'\n\nprocess.env.NODE_ENV = 'test'\n\nconst Agent = require('../src/index')\nconst assert = require('assert')\nconst transport = require('../src/transport')\nconst createAgent = (proc, cb) => {\n  if (!cb) {\n    cb = proc\n    proc = null\n  }\n  transport.prototype.connect = (cb) => cb()\n  module.exports = transport\n  let tmp = Agent.prototype.checkCredentials\n  Agent.prototype.checkCredentials = (config, cb) => cb(null, {ws: 'endpoint'})\n  let config = {publicKey: 'public', secretKey: 'secret', appName: 'app'}\n  let agent = new Agent(config, proc || {})\n  return cb(agent, next => {\n    Agent.prototype.checkCredentials = tmp\n    agent.destruct()\n    next()\n  })\n}\n\ndescribe('Agent', _ => {\n  describe('constructor', _ => {\n    it('should return an error with bad configuration', (done) => {\n      assert(new Agent() instanceof Error)\n      assert(new Agent({}) instanceof Error)\n      assert(new Agent({publicKey: ''}) instanceof Error)\n      assert(new Agent({publicKey: '', secretKey: ''}) instanceof Error)\n      assert(new Agent({publicKey: '', secretKey: '', appName: ''}) instanceof Error)\n      assert(new Agent({publicKey: '', secretKey: '', appName: {}, proc: {}}) instanceof Error)\n      assert(new Agent({publicKey: '', secretKey: '', appName: {}, proc: ''}) instanceof Error)\n      return done()\n    })\n    it('should fail check credentials', (done) => {\n      let tmp = Agent.prototype.checkCredentials\n      Agent.prototype.checkCredentials = (config, cb) => cb(new Error('Test error'))\n      let agent = new Agent({publicKey: 'public', secretKey: 'secret', appName: 'app'}, {})\n      assert(!(agent instanceof Error))\n      agent.start().then(e => {\n        console.log(e)\n        agent.destruct()\n        done(new Error('agent started'))\n      }).catch(err => {\n        agent.destruct()\n        assert(err instanceof Error)\n        done()\n      })\n      Agent.prototype.checkCredentials = tmp\n    })\n    it('should fail transport connect', (done) => {\n      transport.prototype.connect = (cb) => cb(new Error('Test error'))\n      module.exports = transport\n      let tmp = Agent.prototype.checkCredentials\n      Agent.prototype.checkCredentials = (config, cb) => cb(null, {ws: 'endpoint'})\n      let agent = new Agent({publicKey: 'public', secretKey: 'secret', appName: 'app'}, {})\n      assert(!(agent instanceof Error))\n      agent.start().then(_ => {\n        agent.destruct()\n        done(new Error('correctly connected'))\n      }).catch(err => {\n        agent.destruct()\n        assert(err instanceof Error)\n        done()\n      })\n      Agent.prototype.checkCredentials = tmp\n    })\n    it('should save config', (done) => {\n      transport.prototype.connect = (cb) => cb()\n      module.exports = transport\n      let tmp = Agent.prototype.checkCredentials\n      Agent.prototype.checkCredentials = (config, cb) => cb(null, {ws: 'endpoint'})\n      let config = {publicKey: 'public', secretKey: 'secret', appName: 'app'}\n      let agent = new Agent(config, {})\n      assert(!(agent instanceof Error))\n      agent.start().then(_ => {\n        assert(agent.transport instanceof transport)\n        assert(agent.config.publicKey === config.publicKey)\n        assert(agent.config.secretKey === config.secretKey)\n        assert(agent.config.appName === config.appName)\n        assert(typeof agent.config.internalIp === 'string')\n        assert(typeof agent.process.unique_id === 'string')\n        clearInterval(agent.statusInterval)\n        Agent.prototype.checkCredentials = tmp\n        agent.destruct()\n        done()\n      }).catch(err => {\n        done(err)\n      })\n    })\n  })\n  describe('generateUniqueId', _ => {\n    it('should return unique id', (done) => {\n      let ids = []\n      for (let i = 0; i < 100; i++) {\n        let id = Agent.prototype.generateUniqueId()\n        assert(!ids.includes(id))\n        ids.push(id)\n      }\n      return done()\n    })\n  })\n  describe('generateProcess', _ => {\n    it('should add created at', (done) => {\n      createAgent((agent, next) => {\n        let proc = agent.generateProcess(agent.process)\n        assert(proc.pid === process.pid)\n        assert(proc.name === agent.config.appName)\n        assert(proc.interpreter === 'node')\n        assert(proc.restart_time === 0)\n        assert(typeof proc.created_at === 'number')\n        assert(proc.exec_mode === 'fork_mode')\n        assert(proc.watching === false)\n        assert(typeof proc.pm_uptime === 'number')\n        assert(proc.status === 'online')\n        assert(proc.pm_id === 0)\n        assert(proc.unique_id === agent.process.unique_id)\n        assert(typeof proc.cpu === 'number')\n        assert(typeof proc.memory === 'number')\n        assert(proc.versioning === null)\n        assert(proc.node_env === 'test')\n        assert(Array.isArray(proc.axm_actions))\n        assert(typeof proc.axm_monitor === 'object')\n        assert(typeof proc.axm_options === 'object')\n        assert(typeof proc.axm_dynamic === 'object')\n        return next(done)\n      })\n    })\n    it('should return process with new axm action', (done) => {\n      let configProc = {\n        axm_actions: [{action_type: 'pm2', action_name: 'test'}]\n      }\n      createAgent(configProc, (agent, next) => {\n        let proc = agent.generateProcess(agent.process)\n        assert(proc.axm_actions[0].action_name === 'test')\n        return next(done)\n      })\n    })\n  })\n  describe('listenForLogs', _ => {\n    const config = {publicKey: 'public', secretKey: 'secret', appName: 'app'}\n    it('should send stdout logs', (done) => {\n      const agent = new Agent(config, {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(channel === 'logs')\n        assert(data.data === 'log line\\n')\n        agent.destruct()\n        return done()\n      }\n      agent.listenForLogs()\n      console.log('log line')\n    })\n    it('should send stderr logs', (done) => {\n      const agent = new Agent(config, {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(channel === 'logs')\n        assert(data.data === 'log line\\n')\n        agent.destruct()\n        return done()\n      }\n      agent.listenForLogs()\n      console.error('log line')\n    })\n    it(\"shouldn't send logs\", (done) => {\n      const agent = new Agent(config, {})\n      agent.sendLogs = false\n      agent.send = (channel, data) => {\n        assert(false)\n      }\n      agent.listenForLogs()\n      console.log('log line')\n      setTimeout(_ => {\n        agent.destruct()\n        return done()\n      }, 1000)\n    })\n    it(\"shouldn't send unmatched logs\", (done) => {\n      const agent = new Agent(Object.assign({logFilter: 'unmatch'}, config), {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(false)\n      }\n      agent.listenForLogs()\n      console.log('log line')\n      setTimeout(_ => {\n        agent.destruct()\n        return done()\n      }, 1000)\n    })\n    it(\"shouldn't send unmatched logs\", (done) => {\n      const agent = new Agent(Object.assign({logFilter: 'unmatch'}, config), {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(false)\n      }\n      agent.listenForLogs()\n      console.error('log line')\n      setTimeout(_ => {\n        agent.destruct()\n        return done()\n      }, 1000)\n    })\n    it('should send matched logs', (done) => {\n      const agent = new Agent(Object.assign({logFilter: 'log'}, config), {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(channel === 'logs')\n        assert(data.data === 'log line\\n')\n        agent.destruct()\n        return done()\n      }\n      agent.listenForLogs()\n      console.log('log line')\n    })\n    it('should send matched logs', (done) => {\n      const agent = new Agent(Object.assign({logFilter: 'log'}, config), {})\n      agent.sendLogs = true\n      agent.send = (channel, data) => {\n        assert(channel === 'logs')\n        assert(data.data === 'log line\\n')\n        agent.destruct()\n        return done()\n      }\n      agent.listenForLogs()\n      console.error('log line')\n    })\n  })\n})\n"]}
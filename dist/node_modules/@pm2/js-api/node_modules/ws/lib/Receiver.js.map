{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/js-api/node_modules/ws/lib/Receiver.js"],"names":["safeBuffer","require","PerMessageDeflate","isValidUTF8","bufferUtil","ErrorCodes","constants","Buffer","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","Receiver","extensions","maxPayload","binaryType","_binaryType","BINARY_TYPES","_extensions","_maxPayload","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_mask","_opcode","_totalPayloadLength","_messageLength","_fragments","_cleanupCallback","_hadError","_dead","_loop","onmessage","onclose","onerror","onping","onpong","_state","bytes","offset","dst","l","length","shift","slice","allocUnsafe","copy","n","cleanup","data","push","startLoop","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","hasBufferedBytes","buf","readBuffer","error","Error","compressed","extensionName","haveLength","readUInt16BE","num","readUInt32BE","Math","pow","maxPayloadExceeded","EMPTY_BUFFER","unmask","controlMessage","decompress","pushFragment","dataMessage","perMessageDeflate","err","closeCode","messageLength","fragments","toBuffer","toArrayBuffer","toString","code","isValidErrorCode","fullLength","fragment","totalLength","cb","module","exports","concat","byteOffset","byteLength","buffer"],"mappings":"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","file":"Receiver.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst isValidUTF8 = require('./Validation');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\nconst constants = require('./Constants');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n */\nclass Receiver {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   * @param {String} binaryType The type for binary data\n   */\n  constructor (extensions, maxPayload, binaryType) {\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._mask = null;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._cleanupCallback = null;\n    this._hadError = false;\n    this._dead = false;\n    this._loop = false;\n\n    this.onmessage = null;\n    this.onclose = null;\n    this.onerror = null;\n    this.onping = null;\n    this.onpong = null;\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Consumes bytes from the available buffered data.\n   *\n   * @param {Number} bytes The number of bytes to consume\n   * @return {Buffer} Consumed bytes\n   * @private\n   */\n  readBuffer (bytes) {\n    var offset = 0;\n    var dst;\n    var l;\n\n    this._bufferedBytes -= bytes;\n\n    if (bytes === this._buffers[0].length) return this._buffers.shift();\n\n    if (bytes < this._buffers[0].length) {\n      dst = this._buffers[0].slice(0, bytes);\n      this._buffers[0] = this._buffers[0].slice(bytes);\n      return dst;\n    }\n\n    dst = Buffer.allocUnsafe(bytes);\n\n    while (bytes > 0) {\n      l = this._buffers[0].length;\n\n      if (bytes >= l) {\n        this._buffers[0].copy(dst, offset);\n        offset += l;\n        this._buffers.shift();\n      } else {\n        this._buffers[0].copy(dst, offset, 0, bytes);\n        this._buffers[0] = this._buffers[0].slice(bytes);\n      }\n\n      bytes -= l;\n    }\n\n    return dst;\n  }\n\n  /**\n   * Checks if the number of buffered bytes is bigger or equal than `n` and\n   * calls `cleanup` if necessary.\n   *\n   * @param {Number} n The number of bytes to check against\n   * @return {Boolean} `true` if `bufferedBytes >= n`, else `false`\n   * @private\n   */\n  hasBufferedBytes (n) {\n    if (this._bufferedBytes >= n) return true;\n\n    this._loop = false;\n    if (this._dead) this.cleanup(this._cleanupCallback);\n    return false;\n  }\n\n  /**\n   * Adds new data to the parser.\n   *\n   * @public\n   */\n  add (data) {\n    if (this._dead) return;\n\n    this._bufferedBytes += data.length;\n    this._buffers.push(data);\n    this.startLoop();\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @private\n   */\n  startLoop () {\n    this._loop = true;\n\n    while (this._loop) {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData();\n          break;\n        default: // `INFLATING`\n          this._loop = false;\n      }\n    }\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @private\n   */\n  getInfo () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    const buf = this.readBuffer(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this.error(new Error('RSV2 and RSV3 must be clear'), 1002);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this.error(new Error('RSV1 must be clear'), 1002);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (!this._fragmented) {\n        this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n        return;\n      } else {\n        this._opcode = this._fragmented;\n      }\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this.error(new Error('FIN must be set'), 1002);\n        return;\n      }\n\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this.error(new Error('invalid payload length'), 1002);\n        return;\n      }\n    } else {\n      this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @private\n   */\n  getPayloadLength16 () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    this._payloadLength = this.readBuffer(2).readUInt16BE(0, true);\n    this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @private\n   */\n  getPayloadLength64 () {\n    if (!this.hasBufferedBytes(8)) return;\n\n    const buf = this.readBuffer(8);\n    const num = buf.readUInt32BE(0, true);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this.error(new Error('max payload size exceeded'), 1009);\n      return;\n    }\n\n    this._payloadLength = (num * Math.pow(2, 32)) + buf.readUInt32BE(4, true);\n    this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @private\n   */\n  haveLength () {\n    if (this._opcode < 0x08 && this.maxPayloadExceeded(this._payloadLength)) {\n      return;\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask () {\n    if (!this.hasBufferedBytes(4)) return;\n\n    this._mask = this.readBuffer(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @private\n   */\n  getData () {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (!this.hasBufferedBytes(this._payloadLength)) return;\n\n      data = this.readBuffer(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data);\n    } else if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data);\n    } else if (this.pushFragment(data)) {\n      this.dataMessage();\n    }\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @private\n   */\n  decompress (data) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) {\n        this.error(err, err.closeCode === 1009 ? 1009 : 1007);\n        return;\n      }\n\n      if (this.pushFragment(buf)) this.dataMessage();\n      this.startLoop();\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @private\n   */\n  dataMessage () {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.onmessage(data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onmessage(buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @private\n   */\n  controlMessage (data) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this.onclose(1000, '');\n        this._loop = false;\n        this.cleanup(this._cleanupCallback);\n      } else if (data.length === 1) {\n        this.error(new Error('invalid payload length'), 1002);\n      } else {\n        const code = data.readUInt16BE(0, true);\n\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          this.error(new Error(`invalid status code: ${code}`), 1002);\n          return;\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onclose(code, buf.toString());\n        this._loop = false;\n        this.cleanup(this._cleanupCallback);\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.onping(data);\n    else this.onpong(data);\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles an error.\n   *\n   * @param {Error} err The error\n   * @param {Number} code Close code\n   * @private\n   */\n  error (err, code) {\n    this.onerror(err, code);\n    this._hadError = true;\n    this._loop = false;\n    this.cleanup(this._cleanupCallback);\n  }\n\n  /**\n   * Checks payload size, disconnects socket when it exceeds `maxPayload`.\n   *\n   * @param {Number} length Payload length\n   * @private\n   */\n  maxPayloadExceeded (length) {\n    if (length === 0 || this._maxPayload < 1) return false;\n\n    const fullLength = this._totalPayloadLength + length;\n\n    if (fullLength <= this._maxPayload) {\n      this._totalPayloadLength = fullLength;\n      return false;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return true;\n  }\n\n  /**\n   * Appends a fragment in the fragments array after checking that the sum of\n   * fragment lengths does not exceed `maxPayload`.\n   *\n   * @param {Buffer} fragment The fragment to add\n   * @return {Boolean} `true` if `maxPayload` is not exceeded, else `false`\n   * @private\n   */\n  pushFragment (fragment) {\n    if (fragment.length === 0) return true;\n\n    const totalLength = this._messageLength + fragment.length;\n\n    if (this._maxPayload < 1 || totalLength <= this._maxPayload) {\n      this._messageLength = totalLength;\n      this._fragments.push(fragment);\n      return true;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return false;\n  }\n\n  /**\n   * Releases resources used by the receiver.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  cleanup (cb) {\n    this._dead = true;\n\n    if (!this._hadError && (this._loop || this._state === INFLATING)) {\n      this._cleanupCallback = cb;\n    } else {\n      this._extensions = null;\n      this._fragments = null;\n      this._buffers = null;\n      this._mask = null;\n\n      this._cleanupCallback = null;\n      this.onmessage = null;\n      this.onclose = null;\n      this.onerror = null;\n      this.onping = null;\n      this.onpong = null;\n\n      if (cb) cb();\n    }\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer (fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer (buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n"]}
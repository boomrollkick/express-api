{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/js-api/node_modules/ws/lib/PerMessageDeflate.js"],"names":["safeBuffer","require","Limiter","zlib","bufferUtil","Buffer","TRAILER","from","EMPTY_BLOCK","kWriteInProgress","Symbol","kPendingClose","kTotalLength","kCallback","kBuffers","kError","kOwner","zlibLimiter","PerMessageDeflate","options","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","undefined","_isServer","_deflate","_inflate","params","concurrency","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","paramsList","normalizeParams","acceptAsServer","acceptAsClient","close","accepted","result","some","Error","map","Object","keys","forEach","key","value","length","parseInt","Number","isNaN","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","data","fin","callback","push","done","_decompress","err","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","on","inflateOnError","inflateOnData","write","flush","concat","process","nextTick","createDeflateRaw","memLevel","level","Z_SYNC_FLUSH","deflateOnData","slice","module","exports","chunk","closeCode","removeListener","reset"],"mappings":"AAAA;;;;;;AAEA,IAAMA,aAAaC,QAAQ,aAAR,CAAnB;AACA,IAAMC,UAAUD,QAAQ,eAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA,IAAMG,aAAaH,QAAQ,cAAR,CAAnB;;AAEA,IAAMI,SAASL,WAAWK,MAA1B;;AAEA,IAAMC,UAAUD,OAAOE,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAAhB;AACA,IAAMC,cAAcH,OAAOE,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;;AAEA,IAAME,mBAAmBC,OAAO,mBAAP,CAAzB;AACA,IAAMC,gBAAgBD,OAAO,eAAP,CAAtB;AACA,IAAME,eAAeF,OAAO,cAAP,CAArB;AACA,IAAMG,YAAYH,OAAO,UAAP,CAAlB;AACA,IAAMI,WAAWJ,OAAO,SAAP,CAAjB;AACA,IAAMK,SAASL,OAAO,OAAP,CAAf;AACA,IAAMM,SAASN,OAAO,OAAP,CAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIO,oBAAJ;;AAEA;;;;IAGMC,iB;AACJ;;;;;;;;;;;;;;;;;;;;;;AAsBA,6BAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,UAAhC,EAA4C;AAAA;;AAC1C,SAAKC,WAAL,GAAmBD,aAAa,CAAhC;AACA,SAAKE,QAAL,GAAgBJ,WAAW,EAA3B;AACA,SAAKK,UAAL,GAAkB,KAAKD,QAAL,CAAcE,SAAd,KAA4BC,SAA5B,GACd,KAAKH,QAAL,CAAcE,SADA,GAEd,IAFJ;AAGA,SAAKE,SAAL,GAAiB,CAAC,CAACP,QAAnB;AACA,SAAKQ,QAAL,GAAgB,IAAhB;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA,SAAKC,MAAL,GAAc,IAAd;;AAEA,QAAI,CAACb,WAAL,EAAkB;AAChB,UAAMc,cAAc,KAAKR,QAAL,CAAcS,gBAAd,KAAmCN,SAAnC,GAChB,KAAKH,QAAL,CAAcS,gBADE,GAEhB,EAFJ;AAGAf,oBAAc,IAAIf,OAAJ,CAAY,EAAE6B,wBAAF,EAAZ,CAAd;AACD;AACF;;AAED;;;;;;;;;AAOA;;;;;;4BAMS;AACP,UAAMD,SAAS,EAAf;;AAEA,UAAI,KAAKP,QAAL,CAAcU,uBAAlB,EAA2C;AACzCH,eAAOI,0BAAP,GAAoC,IAApC;AACD;AACD,UAAI,KAAKX,QAAL,CAAcY,uBAAlB,EAA2C;AACzCL,eAAOM,0BAAP,GAAoC,IAApC;AACD;AACD,UAAI,KAAKb,QAAL,CAAcc,mBAAlB,EAAuC;AACrCP,eAAOQ,sBAAP,GAAgC,KAAKf,QAAL,CAAcc,mBAA9C;AACD;AACD,UAAI,KAAKd,QAAL,CAAcgB,mBAAlB,EAAuC;AACrCT,eAAOU,sBAAP,GAAgC,KAAKjB,QAAL,CAAcgB,mBAA9C;AACD,OAFD,MAEO,IAAI,KAAKhB,QAAL,CAAcgB,mBAAd,IAAqC,IAAzC,EAA+C;AACpDT,eAAOU,sBAAP,GAAgC,IAAhC;AACD;;AAED,aAAOV,MAAP;AACD;;AAED;;;;;;;;;;2BAOQW,U,EAAY;AAClBA,mBAAa,KAAKC,eAAL,CAAqBD,UAArB,CAAb;;AAEA,UAAIX,MAAJ;AACA,UAAI,KAAKH,SAAT,EAAoB;AAClBG,iBAAS,KAAKa,cAAL,CAAoBF,UAApB,CAAT;AACD,OAFD,MAEO;AACLX,iBAAS,KAAKc,cAAL,CAAoBH,UAApB,CAAT;AACD;;AAED,WAAKX,MAAL,GAAcA,MAAd;AACA,aAAOA,MAAP;AACD;;AAED;;;;;;;;8BAKW;AACT,UAAI,KAAKD,QAAT,EAAmB;AACjB,YAAI,KAAKA,QAAL,CAAcpB,gBAAd,CAAJ,EAAqC;AACnC,eAAKoB,QAAL,CAAclB,aAAd,IAA+B,IAA/B;AACD,SAFD,MAEO;AACL,eAAKkB,QAAL,CAAcgB,KAAd;AACA,eAAKhB,QAAL,GAAgB,IAAhB;AACD;AACF;AACD,UAAI,KAAKD,QAAT,EAAmB;AACjB,YAAI,KAAKA,QAAL,CAAcnB,gBAAd,CAAJ,EAAqC;AACnC,eAAKmB,QAAL,CAAcjB,aAAd,IAA+B,IAA/B;AACD,SAFD,MAEO;AACL,eAAKiB,QAAL,CAAciB,KAAd;AACA,eAAKjB,QAAL,GAAgB,IAAhB;AACD;AACF;AACF;;AAED;;;;;;;;;;mCAOgBa,U,EAAY;AAAA;;AAC1B,UAAMK,WAAW,EAAjB;AACA,UAAMC,SAASN,WAAWO,IAAX,CAAgB,UAAClB,MAAD,EAAY;AACzC,YACG,MAAKP,QAAL,CAAcU,uBAAd,KAA0C,KAA1C,IACCH,OAAOI,0BADT,IAEC,MAAKX,QAAL,CAAcc,mBAAd,KAAsC,KAAtC,IACCP,OAAOQ,sBAHT,IAIC,OAAO,MAAKf,QAAL,CAAcc,mBAArB,KAA6C,QAA7C,IACC,OAAOP,OAAOQ,sBAAd,KAAyC,QAD1C,IAEC,MAAKf,QAAL,CAAcc,mBAAd,GAAoCP,OAAOQ,sBAN7C,IAOC,OAAO,MAAKf,QAAL,CAAcgB,mBAArB,KAA6C,QAA7C,IACC,CAACT,OAAOU,sBATZ,EAUE;AACA;AACD;;AAED,YACE,MAAKjB,QAAL,CAAcU,uBAAd,IACAH,OAAOI,0BAFT,EAGE;AACAY,mBAASZ,0BAAT,GAAsC,IAAtC;AACD;AACD,YACE,MAAKX,QAAL,CAAcY,uBAAd,IACC,MAAKZ,QAAL,CAAcY,uBAAd,KAA0C,KAA1C,IACCL,OAAOM,0BAHX,EAIE;AACAU,mBAASV,0BAAT,GAAsC,IAAtC;AACD;AACD,YAAI,OAAO,MAAKb,QAAL,CAAcc,mBAArB,KAA6C,QAAjD,EAA2D;AACzDS,mBAASR,sBAAT,GAAkC,MAAKf,QAAL,CAAcc,mBAAhD;AACD,SAFD,MAEO,IAAI,OAAOP,OAAOQ,sBAAd,KAAyC,QAA7C,EAAuD;AAC5DQ,mBAASR,sBAAT,GAAkCR,OAAOQ,sBAAzC;AACD;AACD,YAAI,OAAO,MAAKf,QAAL,CAAcgB,mBAArB,KAA6C,QAAjD,EAA2D;AACzDO,mBAASN,sBAAT,GAAkC,MAAKjB,QAAL,CAAcgB,mBAAhD;AACD,SAFD,MAEO,IACL,MAAKhB,QAAL,CAAcgB,mBAAd,KAAsC,KAAtC,IACA,OAAOT,OAAOU,sBAAd,KAAyC,QAFpC,EAGL;AACAM,mBAASN,sBAAT,GAAkCV,OAAOU,sBAAzC;AACD;AACD,eAAO,IAAP;AACD,OA1Cc,CAAf;;AA4CA,UAAI,CAACO,MAAL,EAAa,MAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN;;AAEb,aAAOH,QAAP;AACD;;AAED;;;;;;;;;;mCAOgBL,U,EAAY;AAC1B,UAAMX,SAASW,WAAW,CAAX,CAAf;;AAEA,UACE,KAAKlB,QAAL,CAAcY,uBAAd,KAA0C,KAA1C,IACAL,OAAOM,0BAFT,EAGE;AACA,cAAM,IAAIa,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,UACG,OAAO,KAAK1B,QAAL,CAAcgB,mBAArB,KAA6C,QAA7C,KACE,CAACT,OAAOU,sBAAR,IACCV,OAAOU,sBAAP,GAAgC,KAAKjB,QAAL,CAAcgB,mBAFjD,CAAD,IAGC,KAAKhB,QAAL,CAAcgB,mBAAd,KAAsC,KAAtC,IACCT,OAAOU,sBALX,EAME;AACA,cAAM,IAAIS,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,aAAOnB,MAAP;AACD;;AAED;;;;;;;;;;oCAOiBW,U,EAAY;AAAA;;AAC3B,aAAOA,WAAWS,GAAX,CAAe,UAACpB,MAAD,EAAY;AAChCqB,eAAOC,IAAP,CAAYtB,MAAZ,EAAoBuB,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnC,cAAIC,QAAQzB,OAAOwB,GAAP,CAAZ;AACA,cAAIC,MAAMC,MAAN,GAAe,CAAnB,EAAsB;AACpB,kBAAM,IAAIP,KAAJ,wCAA+CK,GAA/C,CAAN;AACD;;AAEDC,kBAAQA,MAAM,CAAN,CAAR;;AAEA,kBAAQD,GAAR;AACE,iBAAK,4BAAL;AACA,iBAAK,4BAAL;AACE,kBAAIC,UAAU,IAAd,EAAoB;AAClB,sBAAM,IAAIN,KAAJ,4CAAmDK,GAAnD,UAA2DC,KAA3D,OAAN;AACD;AACDzB,qBAAOwB,GAAP,IAAc,IAAd;AACA;AACF,iBAAK,wBAAL;AACA,iBAAK,wBAAL;AACE,kBAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,wBAAQE,SAASF,KAAT,EAAgB,EAAhB,CAAR;AACA,oBACEG,OAAOC,KAAP,CAAaJ,KAAb,KACAA,QAAQpD,KAAKyD,gBADb,IAEAL,QAAQpD,KAAK0D,gBAHf,EAIE;AACA,wBAAM,IAAIZ,KAAJ,4CAAmDK,GAAnD,UAA2DC,KAA3D,OAAN;AACD;AACF;AACD,kBAAI,CAAC,OAAK5B,SAAN,IAAmB4B,UAAU,IAAjC,EAAuC;AACrC,sBAAM,IAAIN,KAAJ,4CAAmDK,GAAnD,CAAN;AACD;AACDxB,qBAAOwB,GAAP,IAAcC,KAAd;AACA;AACF;AACE,oBAAM,IAAIN,KAAJ,uCAA8CK,GAA9C,OAAN;AA1BJ;AA4BD,SApCD;AAqCA,eAAOxB,MAAP;AACD,OAvCM,CAAP;AAwCD;;AAED;;;;;;;;;;;+BAQYgC,I,EAAMC,G,EAAKC,Q,EAAU;AAAA;;AAC/B/C,kBAAYgD,IAAZ,CAAiB,UAACC,IAAD,EAAU;AACzB,eAAKC,WAAL,CAAiBL,IAAjB,EAAuBC,GAAvB,EAA4B,UAACK,GAAD,EAAMrB,MAAN,EAAiB;AAC3CmB;AACAF,mBAASI,GAAT,EAAcrB,MAAd;AACD,SAHD;AAID,OALD;AAMD;;AAED;;;;;;;;;;;6BAQUe,I,EAAMC,G,EAAKC,Q,EAAU;AAAA;;AAC7B/C,kBAAYgD,IAAZ,CAAiB,UAACC,IAAD,EAAU;AACzB,eAAKG,SAAL,CAAeP,IAAf,EAAqBC,GAArB,EAA0B,UAACK,GAAD,EAAMrB,MAAN,EAAiB;AACzCmB;AACAF,mBAASI,GAAT,EAAcrB,MAAd;AACD,SAHD;AAID,OALD;AAMD;;AAED;;;;;;;;;;;gCAQae,I,EAAMC,G,EAAKC,Q,EAAU;AAAA;;AAChC,UAAMM,WAAW,KAAK3C,SAAL,GAAiB,QAAjB,GAA4B,QAA7C;;AAEA,UAAI,CAAC,KAAKE,QAAV,EAAoB;AAClB,YAAMyB,MAASgB,QAAT,qBAAN;AACA,YAAMC,aAAa,OAAO,KAAKzC,MAAL,CAAYwB,GAAZ,CAAP,KAA4B,QAA5B,GACfnD,KAAKqE,oBADU,GAEf,KAAK1C,MAAL,CAAYwB,GAAZ,CAFJ;;AAIA,aAAKzB,QAAL,GAAgB1B,KAAKsE,gBAAL,CAAsB,EAAEF,sBAAF,EAAtB,CAAhB;AACA,aAAK1C,QAAL,CAAcjB,YAAd,IAA8B,CAA9B;AACA,aAAKiB,QAAL,CAAcf,QAAd,IAA0B,EAA1B;AACA,aAAKe,QAAL,CAAcb,MAAd,IAAwB,IAAxB;AACA,aAAKa,QAAL,CAAc6C,EAAd,CAAiB,OAAjB,EAA0BC,cAA1B;AACA,aAAK9C,QAAL,CAAc6C,EAAd,CAAiB,MAAjB,EAAyBE,aAAzB;AACD;;AAED,WAAK/C,QAAL,CAAchB,SAAd,IAA2BmD,QAA3B;AACA,WAAKnC,QAAL,CAAcpB,gBAAd,IAAkC,IAAlC;;AAEA,WAAKoB,QAAL,CAAcgD,KAAd,CAAoBf,IAApB;AACA,UAAIC,GAAJ,EAAS,KAAKlC,QAAL,CAAcgD,KAAd,CAAoBvE,OAApB;;AAET,WAAKuB,QAAL,CAAciD,KAAd,CAAoB,YAAM;AACxB,YAAMV,MAAM,OAAKvC,QAAL,CAAcd,MAAd,CAAZ;;AAEA,YAAIqD,GAAJ,EAAS;AACP,iBAAKvC,QAAL,CAAcgB,KAAd;AACA,iBAAKhB,QAAL,GAAgB,IAAhB;AACAmC,mBAASI,GAAT;AACA;AACD;;AAED,YAAMN,OAAO1D,WAAW2E,MAAX,CACX,OAAKlD,QAAL,CAAcf,QAAd,CADW,EAEX,OAAKe,QAAL,CAAcjB,YAAd,CAFW,CAAb;;AAKA,YACGmD,OAAO,OAAKjC,MAAL,CAAewC,QAAf,0BAAR,IACA,OAAKzC,QAAL,CAAclB,aAAd,CAFF,EAGE;AACA,iBAAKkB,QAAL,CAAcgB,KAAd;AACA,iBAAKhB,QAAL,GAAgB,IAAhB;AACD,SAND,MAMO;AACL,iBAAKA,QAAL,CAAcpB,gBAAd,IAAkC,KAAlC;AACA,iBAAKoB,QAAL,CAAcjB,YAAd,IAA8B,CAA9B;AACA,iBAAKiB,QAAL,CAAcf,QAAd,IAA0B,EAA1B;AACD;;AAEDkD,iBAAS,IAAT,EAAeF,IAAf;AACD,OA5BD;AA6BD;;AAED;;;;;;;;;;;8BAQWA,I,EAAMC,G,EAAKC,Q,EAAU;AAAA;;AAC9B,UAAI,CAACF,IAAD,IAASA,KAAKN,MAAL,KAAgB,CAA7B,EAAgC;AAC9BwB,gBAAQC,QAAR,CAAiBjB,QAAjB,EAA2B,IAA3B,EAAiCxD,WAAjC;AACA;AACD;;AAED,UAAM8D,WAAW,KAAK3C,SAAL,GAAiB,QAAjB,GAA4B,QAA7C;;AAEA,UAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB,YAAM0B,MAASgB,QAAT,qBAAN;AACA,YAAMC,aAAa,OAAO,KAAKzC,MAAL,CAAYwB,GAAZ,CAAP,KAA4B,QAA5B,GACfnD,KAAKqE,oBADU,GAEf,KAAK1C,MAAL,CAAYwB,GAAZ,CAFJ;;AAIA,aAAK1B,QAAL,GAAgBzB,KAAK+E,gBAAL,CAAsB;AACpCC,oBAAU,KAAK5D,QAAL,CAAc4D,QADY;AAEpCC,iBAAO,KAAK7D,QAAL,CAAc6D,KAFe;AAGpCN,iBAAO3E,KAAKkF,YAHwB;AAIpCd;AAJoC,SAAtB,CAAhB;;AAOA,aAAK3C,QAAL,CAAchB,YAAd,IAA8B,CAA9B;AACA,aAAKgB,QAAL,CAAcd,QAAd,IAA0B,EAA1B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAKc,QAAL,CAAc8C,EAAd,CAAiB,MAAjB,EAAyBY,aAAzB;AACD;;AAED,WAAK1D,QAAL,CAAcnB,gBAAd,IAAkC,IAAlC;;AAEA,WAAKmB,QAAL,CAAciD,KAAd,CAAoBf,IAApB;AACA,WAAKlC,QAAL,CAAckD,KAAd,CAAoB3E,KAAKkF,YAAzB,EAAuC,YAAM;AAC3C,YAAIvB,OAAO1D,WAAW2E,MAAX,CACT,OAAKnD,QAAL,CAAcd,QAAd,CADS,EAET,OAAKc,QAAL,CAAchB,YAAd,CAFS,CAAX;;AAKA,YAAImD,GAAJ,EAASD,OAAOA,KAAKyB,KAAL,CAAW,CAAX,EAAczB,KAAKN,MAAL,GAAc,CAA5B,CAAP;;AAET,YACGO,OAAO,OAAKjC,MAAL,CAAewC,QAAf,0BAAR,IACA,OAAK1C,QAAL,CAAcjB,aAAd,CAFF,EAGE;AACA,iBAAKiB,QAAL,CAAciB,KAAd;AACA,iBAAKjB,QAAL,GAAgB,IAAhB;AACD,SAND,MAMO;AACL,iBAAKA,QAAL,CAAcnB,gBAAd,IAAkC,KAAlC;AACA,iBAAKmB,QAAL,CAAchB,YAAd,IAA8B,CAA9B;AACA,iBAAKgB,QAAL,CAAcd,QAAd,IAA0B,EAA1B;AACD;;AAEDkD,iBAAS,IAAT,EAAeF,IAAf;AACD,OArBD;AAsBD;;;wBAvX2B;AAC1B,aAAO,oBAAP;AACD;;;;;;AAwXH0B,OAAOC,OAAP,GAAiBvE,iBAAjB;;AAEA;;;;;;AAMA,SAASoE,aAAT,CAAwBI,KAAxB,EAA+B;AAC7B,OAAK5E,QAAL,EAAemD,IAAf,CAAoByB,KAApB;AACA,OAAK9E,YAAL,KAAsB8E,MAAMlC,MAA5B;AACD;;AAED;;;;;;AAMA,SAASoB,aAAT,CAAwBc,KAAxB,EAA+B;AAC7B,OAAK9E,YAAL,KAAsB8E,MAAMlC,MAA5B;;AAEA,MACE,KAAKxC,MAAL,EAAaM,WAAb,GAA2B,CAA3B,IACA,KAAKV,YAAL,KAAsB,KAAKI,MAAL,EAAaM,WAFrC,EAGE;AACA,SAAKR,QAAL,EAAemD,IAAf,CAAoByB,KAApB;AACA;AACD;;AAED,OAAK3E,MAAL,IAAe,IAAIkC,KAAJ,CAAU,2BAAV,CAAf;AACA,OAAKlC,MAAL,EAAa4E,SAAb,GAAyB,IAAzB;AACA,OAAKC,cAAL,CAAoB,MAApB,EAA4BhB,aAA5B;AACA,OAAKiB,KAAL;AACD;;AAED;;;;;;AAMA,SAASlB,cAAT,CAAyBP,GAAzB,EAA8B;AAC5B;AACA;AACA;AACA;AACA,OAAKpD,MAAL,EAAaa,QAAb,GAAwB,IAAxB;AACA,OAAKhB,SAAL,EAAgBuD,GAAhB;AACD","file":"PerMessageDeflate.js","sourcesContent":["'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./BufferUtil');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\nconst kOwner = Symbol('owner');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Number} options.level The value of zlib's `level` param\n   * @param {Number} options.memLevel The value of zlib's `memLevel` param\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create extension parameters offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept extension offer.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (paramsList) {\n    paramsList = this.normalizeParams(paramsList);\n\n    var params;\n    if (this._isServer) {\n      params = this.acceptAsServer(paramsList);\n    } else {\n      params = this.acceptAsClient(paramsList);\n    }\n\n    this.params = params;\n    return params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   * Accept extension offer from client.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (paramsList) {\n    const accepted = {};\n    const result = paramsList.some((params) => {\n      if (\n        (this._options.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (this._options.serverMaxWindowBits === false &&\n          params.server_max_window_bits) ||\n        (typeof this._options.serverMaxWindowBits === 'number' &&\n          typeof params.server_max_window_bits === 'number' &&\n          this._options.serverMaxWindowBits > params.server_max_window_bits) ||\n        (typeof this._options.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return;\n      }\n\n      if (\n        this._options.serverNoContextTakeover ||\n        params.server_no_context_takeover\n      ) {\n        accepted.server_no_context_takeover = true;\n      }\n      if (\n        this._options.clientNoContextTakeover ||\n        (this._options.clientNoContextTakeover !== false &&\n          params.client_no_context_takeover)\n      ) {\n        accepted.client_no_context_takeover = true;\n      }\n      if (typeof this._options.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n      } else if (typeof params.server_max_window_bits === 'number') {\n        accepted.server_max_window_bits = params.server_max_window_bits;\n      }\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (\n        this._options.clientMaxWindowBits !== false &&\n        typeof params.client_max_window_bits === 'number'\n      ) {\n        accepted.client_max_window_bits = params.client_max_window_bits;\n      }\n      return true;\n    });\n\n    if (!result) throw new Error(\"Doesn't support the offered configuration\");\n\n    return accepted;\n  }\n\n  /**\n   * Accept extension response from server.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (paramsList) {\n    const params = paramsList[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n\n    if (\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits ||\n          params.client_max_window_bits > this._options.clientMaxWindowBits)) ||\n      (this._options.clientMaxWindowBits === false &&\n        params.client_max_window_bits)\n    ) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize extensions parameters.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Array} Normalized extensions parameters\n   * @private\n   */\n  normalizeParams (paramsList) {\n    return paramsList.map((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Multiple extension parameters for ${key}`);\n        }\n\n        value = value[0];\n\n        switch (key) {\n          case 'server_no_context_takeover':\n          case 'client_no_context_takeover':\n            if (value !== true) {\n              throw new Error(`invalid extension parameter value for ${key} (${value})`);\n            }\n            params[key] = true;\n            break;\n          case 'server_max_window_bits':\n          case 'client_max_window_bits':\n            if (typeof value === 'string') {\n              value = parseInt(value, 10);\n              if (\n                Number.isNaN(value) ||\n                value < zlib.Z_MIN_WINDOWBITS ||\n                value > zlib.Z_MAX_WINDOWBITS\n              ) {\n                throw new Error(`invalid extension parameter value for ${key} (${value})`);\n              }\n            }\n            if (!this._isServer && value === true) {\n              throw new Error(`Missing extension parameter value for ${key}`);\n            }\n            params[key] = value;\n            break;\n          default:\n            throw new Error(`Not defined extension parameter (${key})`);\n        }\n      });\n      return params;\n    });\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({ windowBits });\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate[kOwner] = this;\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        memLevel: this._options.memLevel,\n        level: this._options.level,\n        flush: zlib.Z_SYNC_FLUSH,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kOwner]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kOwner]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new Error('max payload size exceeded');\n  this[kError].closeCode = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kOwner]._inflate = null;\n  this[kCallback](err);\n}\n"]}
{"version":3,"sources":["../../../../../../../src/node_modules/@pm2/js-api/node_modules/ws/lib/WebSocket.js"],"names":["EventEmitter","require","crypto","Ultron","https","http","url","PerMessageDeflate","EventTarget","Extensions","constants","Receiver","Sender","protocolVersions","closeTimeout","WebSocket","address","protocols","options","Array","isArray","readyState","CONNECTING","bytesReceived","extensions","protocol","_binaryType","BINARY_TYPES","_finalize","finalize","bind","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_finalized","_closeCode","_receiver","_sender","_socket","_ultron","initAsServerClient","call","initAsClient","socket","head","setTimeout","setNoDelay","_maxPayload","binaryType","on","length","unshift","data","add","onmessage","emit","onping","pong","_isServer","onpong","onclose","code","reason","close","onerror","error","CLOSING","OPEN","emitClose","clearTimeout","destroy","NOOP","end","cleanup","CLOSED","extensionName","removeAllListeners","Error","pause","resume","_req","abort","err","mask","failSilently","toString","undefined","ping","EMPTY_BUFFER","cb","opts","Object","assign","binary","compress","fin","send","amount","bufferSize","_bufferedBytes","type","indexOf","forEach","method","defineProperty","prototype","get","listeners","i","_listener","set","listener","removeListener","addEventListener","removeEventListener","module","exports","protocolVersion","maxPayload","setSocket","join","perMessageDeflate","handshakeTimeout","localAddress","headers","family","origin","agent","host","checkServerIdentity","rejectUnauthorized","passphrase","ciphers","ecdhCurve","cert","key","pfx","ca","serverUrl","parse","isUnixSocket","path","isSecure","randomBytes","httpObj","requestOptions","port","hostname","format","offer","Origin","Host","auth","parts","split","socketPath","charAt","Agent","aborted","res","statusCode","digest","createHash","update","GUID","serverProt","protList","protError","serverExtensions","accept"],"mappings":"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","file":"WebSocket.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst Ultron = require('ultron');\nconst https = require('https');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst EventTarget = require('./EventTarget');\nconst Extensions = require('./Extensions');\nconst constants = require('./Constants');\nconst Receiver = require('./Receiver');\nconst Sender = require('./Sender');\n\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {String} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    if (!protocols) {\n      protocols = [];\n    } else if (typeof protocols === 'string') {\n      protocols = [protocols];\n    } else if (!Array.isArray(protocols)) {\n      options = protocols;\n      protocols = [];\n    }\n\n    this.readyState = WebSocket.CONNECTING;\n    this.bytesReceived = 0;\n    this.extensions = {};\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._finalize = this.finalize.bind(this);\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._finalized = false;\n    this._closeCode = 1006;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n    this._ultron = null;\n\n    if (Array.isArray(address)) {\n      initAsServerClient.call(this, address[0], address[1], options);\n    } else {\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    var amount = 0;\n\n    if (this._socket) {\n      amount = this._socket.bufferSize + this._sender._bufferedBytes;\n    }\n    return amount;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @private\n   */\n  setSocket (socket, head) {\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    this._receiver = new Receiver(this.extensions, this._maxPayload, this.binaryType);\n    this._sender = new Sender(socket, this.extensions);\n    this._ultron = new Ultron(socket);\n    this._socket = socket;\n\n    this._ultron.on('close', this._finalize);\n    this._ultron.on('error', this._finalize);\n    this._ultron.on('end', this._finalize);\n\n    if (head.length > 0) socket.unshift(head);\n\n    this._ultron.on('data', (data) => {\n      this.bytesReceived += data.length;\n      this._receiver.add(data);\n    });\n\n    this._receiver.onmessage = (data) => this.emit('message', data);\n    this._receiver.onping = (data) => {\n      this.pong(data, !this._isServer, true);\n      this.emit('ping', data);\n    };\n    this._receiver.onpong = (data) => this.emit('pong', data);\n    this._receiver.onclose = (code, reason) => {\n      this._closeFrameReceived = true;\n      this._closeMessage = reason;\n      this._closeCode = code;\n      if (!this._finalized) this.close(code, reason);\n    };\n    this._receiver.onerror = (error, code) => {\n      this._closeMessage = '';\n      this._closeCode = code;\n\n      //\n      // Ensure that the error is emitted even if `WebSocket#finalize()` has\n      // already been called.\n      //\n      this.readyState = WebSocket.CLOSING;\n      this.emit('error', error);\n      this.finalize(true);\n    };\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Clean up and release internal resources.\n   *\n   * @param {(Boolean|Error)} error Indicates whether or not an error occurred\n   * @private\n   */\n  finalize (error) {\n    if (this._finalized) return;\n\n    this.readyState = WebSocket.CLOSING;\n    this._finalized = true;\n\n    if (typeof error === 'object') this.emit('error', error);\n    if (!this._socket) return this.emitClose();\n\n    clearTimeout(this._closeTimer);\n    this._closeTimer = null;\n\n    this._ultron.destroy();\n    this._ultron = null;\n\n    this._socket.on('error', constants.NOOP);\n\n    if (!error) this._socket.end();\n    else this._socket.destroy();\n\n    this._socket = null;\n    this._sender = null;\n\n    this._receiver.cleanup(() => this.emitClose());\n    this._receiver = null;\n  }\n\n  /**\n   * Emit the `close` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n\n    this.emit('close', this._closeCode, this._closeMessage);\n\n    if (this.extensions[PerMessageDeflate.extensionName]) {\n      this.extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this.extensions = null;\n\n    this.removeAllListeners();\n  }\n\n  /**\n   * Pause the socket stream.\n   *\n   * @public\n   */\n  pause () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.pause();\n  }\n\n  /**\n   * Resume the socket stream\n   *\n   * @public\n   */\n  resume () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.resume();\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *            +----------+     +-----------+   +----------+\n   *     + - - -|ws.close()|---->|close frame|-->|ws.close()|- - - -\n   *            +----------+     +-----------+   +----------+       |\n   *     |      +----------+     +-----------+         |\n   *            |ws.close()|<----|close frame|<--------+            |\n   *            +----------+     +-----------+         |\n   *  CLOSING         |              +---+             |         CLOSING\n   *                  |          +---|fin|<------------+\n   *     |            |          |   +---+                          |\n   *                  |          |   +---+      +-------------+\n   *     |            +----------+-->|fin|----->|ws.finalize()| - - +\n   *                             |   +---+      +-------------+\n   *     |     +-------------+   |\n   *      - - -|ws.finalize()|<--+\n   *           +-------------+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (!this._finalized) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is cleaned up even when the closing\n        // handshake fails.\n        //\n        this._closeTimer = setTimeout(this._finalize, closeTimeout, true);\n      }\n    });\n  }\n\n  /**\n   * Send a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  ping (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  pong (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      if (cb) cb(new Error('not opened'));\n      else throw new Error('not opened');\n      return;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this.extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    this.finalize(true);\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.OPEN = 1;\nWebSocket.CLOSING = 2;\nWebSocket.CLOSED = 3;\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket server client.\n *\n * @param {http.IncomingMessage} req The request object\n * @param {net.Socket} socket The network socket between the server and client\n * @param {Buffer} head The first packet of the upgraded stream\n * @param {Object} options WebSocket attributes\n * @param {Number} options.protocolVersion The WebSocket protocol version\n * @param {Object} options.extensions The negotiated extensions\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {String} options.protocol The chosen subprotocol\n * @private\n */\nfunction initAsServerClient (socket, head, options) {\n  this.protocolVersion = options.protocolVersion;\n  this._maxPayload = options.maxPayload;\n  this.extensions = options.extensions;\n  this.protocol = options.protocol;\n\n  this._isServer = true;\n\n  this.setSocket(socket, head);\n}\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {String} address The URL to which to connect\n * @param {String[]} protocols The list of subprotocols\n * @param {Object} options Connection options\n * @param {String} options.protocol Value of the `Sec-WebSocket-Protocol` header\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {String} options.localAddress Local interface to bind for network connections\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {Object} options.headers An object containing request headers\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {http.Agent} options.agent Use the specified Agent\n * @param {String} options.host Value of the `Host` header\n * @param {Number} options.family IP address family to use during hostname lookup (4 or 6).\n * @param {Function} options.checkServerIdentity A function to validate the server hostname\n * @param {Boolean} options.rejectUnauthorized Verify or not the server certificate\n * @param {String} options.passphrase The passphrase for the private key or pfx\n * @param {String} options.ciphers The ciphers to use or exclude\n * @param {String} options.ecdhCurve The curves for ECDH key agreement to use or exclude\n * @param {(String|String[]|Buffer|Buffer[])} options.cert The certificate key\n * @param {(String|String[]|Buffer|Buffer[])} options.key The private key\n * @param {(String|Buffer)} options.pfx The private key, certificate, and CA certs\n * @param {(String|String[]|Buffer|Buffer[])} options.ca Trusted certificates\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    protocol: protocols.join(','),\n    perMessageDeflate: true,\n    handshakeTimeout: null,\n    localAddress: null,\n    headers: null,\n    family: null,\n    origin: null,\n    agent: null,\n    host: null,\n\n    //\n    // SSL options.\n    //\n    checkServerIdentity: null,\n    rejectUnauthorized: null,\n    passphrase: null,\n    ciphers: null,\n    ecdhCurve: null,\n    cert: null,\n    key: null,\n    pfx: null,\n    ca: null\n  }, options);\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new Error(\n      `unsupported protocol version: ${options.protocolVersion} ` +\n      `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this.protocolVersion = options.protocolVersion;\n  this._isServer = false;\n  this.url = address;\n\n  const serverUrl = url.parse(address);\n  const isUnixSocket = serverUrl.protocol === 'ws+unix:';\n\n  if (!serverUrl.host && (!isUnixSocket || !serverUrl.path)) {\n    throw new Error('invalid url');\n  }\n\n  const isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  var perMessageDeflate;\n\n  const requestOptions = {\n    port: serverUrl.port || (isSecure ? 443 : 80),\n    host: serverUrl.hostname,\n    path: '/',\n    headers: {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket'\n    }\n  };\n\n  if (options.headers) Object.assign(requestOptions.headers, options.headers);\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (options.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.protocol;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      requestOptions.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      requestOptions.headers.Origin = options.origin;\n    }\n  }\n  if (options.host) requestOptions.headers.Host = options.host;\n  if (serverUrl.auth) requestOptions.auth = serverUrl.auth;\n\n  if (options.localAddress) requestOptions.localAddress = options.localAddress;\n  if (options.family) requestOptions.family = options.family;\n\n  if (isUnixSocket) {\n    const parts = serverUrl.path.split(':');\n\n    requestOptions.socketPath = parts[0];\n    requestOptions.path = parts[1];\n  } else if (serverUrl.path) {\n    //\n    // Make sure that path starts with `/`.\n    //\n    if (serverUrl.path.charAt(0) !== '/') {\n      requestOptions.path = `/${serverUrl.path}`;\n    } else {\n      requestOptions.path = serverUrl.path;\n    }\n  }\n\n  var agent = options.agent;\n\n  //\n  // A custom agent is required for these options.\n  //\n  if (\n    options.rejectUnauthorized != null ||\n    options.checkServerIdentity ||\n    options.passphrase ||\n    options.ciphers ||\n    options.ecdhCurve ||\n    options.cert ||\n    options.key ||\n    options.pfx ||\n    options.ca\n  ) {\n    if (options.passphrase) requestOptions.passphrase = options.passphrase;\n    if (options.ciphers) requestOptions.ciphers = options.ciphers;\n    if (options.ecdhCurve) requestOptions.ecdhCurve = options.ecdhCurve;\n    if (options.cert) requestOptions.cert = options.cert;\n    if (options.key) requestOptions.key = options.key;\n    if (options.pfx) requestOptions.pfx = options.pfx;\n    if (options.ca) requestOptions.ca = options.ca;\n    if (options.checkServerIdentity) {\n      requestOptions.checkServerIdentity = options.checkServerIdentity;\n    }\n    if (options.rejectUnauthorized != null) {\n      requestOptions.rejectUnauthorized = options.rejectUnauthorized;\n    }\n\n    if (!agent) agent = new httpObj.Agent(requestOptions);\n  }\n\n  if (agent) requestOptions.agent = agent;\n\n  this._req = httpObj.get(requestOptions);\n\n  if (options.handshakeTimeout) {\n    this._req.setTimeout(options.handshakeTimeout, () => {\n      this._req.abort();\n      this.finalize(new Error('opening handshake has timed out'));\n    });\n  }\n\n  this._req.on('error', (error) => {\n    if (this._req.aborted) return;\n\n    this._req = null;\n    this.finalize(error);\n  });\n\n  this._req.on('response', (res) => {\n    if (!this.emit('unexpected-response', this._req, res)) {\n      this._req.abort();\n      this.finalize(new Error(`unexpected server response (${res.statusCode})`));\n    }\n  });\n\n  this._req.on('upgrade', (res, socket, head) => {\n    this.emit('headers', res.headers, res);\n\n    //\n    // The user may have closed the connection from a listener of the `headers`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      socket.destroy();\n      return this.finalize(new Error('invalid server key'));\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (options.protocol || '').split(/, */);\n    var protError;\n\n    if (!options.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      socket.destroy();\n      return this.finalize(new Error(protError));\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const serverExtensions = Extensions.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (serverExtensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(\n            serverExtensions[PerMessageDeflate.extensionName]\n          );\n          this.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        socket.destroy();\n        this.finalize(new Error('invalid Sec-WebSocket-Extensions header'));\n        return;\n      }\n    }\n\n    this.setSocket(socket, head);\n  });\n}\n"]}
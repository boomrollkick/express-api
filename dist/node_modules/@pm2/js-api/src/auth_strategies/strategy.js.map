{"version":3,"sources":["../../../../../../src/node_modules/@pm2/js-api/src/auth_strategies/strategy.js"],"names":["constants","require","AuthStrategy","opts","_opts","client_id","OAUTH_CLIENT_ID","Error","scope","response_mode","reponse_mode","optsOauthEndpoint","services","OAUTH","API","oauthEndpoint","oauth_endpoint","length","OAUTH_AUTHORIZE_ENDPOINT","substr","oauth_query","name","flows","nodule","condition","module","exports"],"mappings":";AACA;;;;;;AAEA,IAAMA,YAAYC,QAAQ,oBAAR,CAAlB;;AAEA,IAAMC;AACJ,wBAAaC,IAAb,EAAmB;AAAA;;AACjB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,SAAL,GAAiBF,KAAKE,SAAL,IAAkBF,KAAKG,eAAxC;AACA,QAAI,CAAC,KAAKD,SAAV,EAAqB;AACnB,YAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACD;AACD,SAAKC,KAAL,GAAaL,KAAKK,KAAL,IAAc,KAA3B;AACA,SAAKC,aAAL,GAAqBN,KAAKO,YAAL,IAAqB,OAA1C;;AAEA,QAAIC,oBAAoB,IAAxB;AACA,QAAIR,QAAQA,KAAKS,QAAjB,EAA2B;AACzBD,0BAAoBR,KAAKS,QAAL,CAAcC,KAAd,IAAuBV,KAAKS,QAAL,CAAcE,GAAzD;AACD;AACD,QAAMC,gBAAgBf,UAAUY,QAAV,CAAmBC,KAAnB,IAA4Bb,UAAUY,QAAV,CAAmBE,GAArE;AACA,SAAKE,cAAL,SAAyBL,qBAAqBI,aAA9C;AACA,QAAI,KAAKC,cAAL,CAAoB,KAAKA,cAAL,CAAoBC,MAApB,GAA6B,CAAjD,MAAwD,GAAxD,IAA+DjB,UAAUkB,wBAAV,CAAmC,CAAnC,MAA0C,GAA7G,EAAkH;AAChH,WAAKF,cAAL,GAAsB,KAAKA,cAAL,CAAoBG,MAApB,CAA2B,CAA3B,EAA8B,KAAKH,cAAL,CAAoBC,MAApB,GAA6B,CAA3D,CAAtB;AACD;AACD,SAAKD,cAAL,IAAuBhB,UAAUkB,wBAAjC;AACA,SAAKE,WAAL,GAAmB,gBAAcjB,KAAKE,SAAnB,uBAA8C,KAAKI,aAAnD,oCACa,KAAKD,KADlB,CAAnB;AAED;;AAtBG;AAAA;AAAA,qCAwBc;AAChB,YAAM,IAAID,KAAJ,CAAU,sEAAV,CAAN;AACD;AA1BG;AAAA;AAAA,mCA4BY;AACd,YAAM,IAAIA,KAAJ,CAAU,oEAAV,CAAN;AACD;AA9BG;AAAA;AAAA,oCAgCoBc,IAhCpB,EAgC0B;AAC5B,UAAMC,QAAQ;AACZ,iBAAS;AACPC,kBAAQtB,QAAQ,kBAAR,CADD;AAEPuB,qBAAW;AAFJ,SADG;AAKZ,mBAAW;AACTD,kBAAQtB,QAAQ,oBAAR,CADC;AAETuB,qBAAW;AAFF,SALC;AASZ,sBAAc;AACZD,kBAAQtB,QAAQ,uBAAR,CADI;AAEZuB,qBAAW;AAFC;AATF,OAAd;AAcA,aAAOH,OAAOC,MAAMD,IAAN,CAAP,GAAqB,IAA5B;AACD;AAhDG;;AAAA;AAAA,GAAN;;AAmDAI,OAAOC,OAAP,GAAiBxB,YAAjB","file":"strategy.js","sourcesContent":["\n'use strict'\n\nconst constants = require('../../constants.js')\n\nconst AuthStrategy = class AuthStrategy {\n  constructor (opts) {\n    this._opts = opts\n    this.client_id = opts.client_id || opts.OAUTH_CLIENT_ID\n    if (!this.client_id) {\n      throw new Error('You must always provide a application id for any of the strategies')\n    }\n    this.scope = opts.scope || 'all'\n    this.response_mode = opts.reponse_mode || 'query'\n\n    let optsOauthEndpoint = null\n    if (opts && opts.services) {\n      optsOauthEndpoint = opts.services.OAUTH || opts.services.API\n    }\n    const oauthEndpoint = constants.services.OAUTH || constants.services.API\n    this.oauth_endpoint = `${optsOauthEndpoint || oauthEndpoint}`\n    if (this.oauth_endpoint[this.oauth_endpoint.length - 1] === '/' && constants.OAUTH_AUTHORIZE_ENDPOINT[0] === '/') {\n      this.oauth_endpoint = this.oauth_endpoint.substr(0, this.oauth_endpoint.length - 1)\n    }\n    this.oauth_endpoint += constants.OAUTH_AUTHORIZE_ENDPOINT\n    this.oauth_query = `?client_id=${opts.client_id}&response_mode=${this.response_mode}` +\n      `&response_type=token&scope=${this.scope}`\n  }\n\n  retrieveTokens () {\n    throw new Error('You need to implement a retrieveTokens function inside your strategy')\n  }\n\n  deleteTokens () {\n    throw new Error('You need to implement a deleteTokens function inside your strategy')\n  }\n\n  static implementations (name) {\n    const flows = {\n      'embed': {\n        nodule: require('./embed_strategy'),\n        condition: 'node'\n      },\n      'browser': {\n        nodule: require('./browser_strategy'),\n        condition: 'browser'\n      },\n      'standalone': {\n        nodule: require('./standalone_strategy'),\n        condition: null\n      }\n    }\n    return name ? flows[name] : null\n  }\n}\n\nmodule.exports = AuthStrategy\n"]}
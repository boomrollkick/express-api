{"version":3,"sources":["../../../../../../src/node_modules/@pm2/js-api/src/auth_strategies/embed_strategy.js"],"names":["AuthStrategy","require","http","fs","url","exec","async","path","os","module","exports","km","cb","verifyToken","refresh","auth","retrieveToken","client_id","refresh_token","tryEach","next","process","env","KM_TOKEN","Error","then","res","data","catch","readFile","resolve","homedir","err","tokens","JSON","parse","Date","expire_at","toISOString","launch","access_token","result","file","writeFile","stringify","shutdown","server","createServer","req","end","query","write","close","listen","open","oauth_endpoint","oauth_query","target","appName","callback","opener","escape","s","replace","platform","SUDO_USER","Promise","reject","revoke","unlinkSync"],"mappings":"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","file":"embed_strategy.js","sourcesContent":["\n'use strict'\n\nconst AuthStrategy = require('./strategy.js')\nconst http = require('http')\nconst fs = require('fs')\nconst url = require('url')\nconst exec = require('child_process').exec\nconst async = require('async')\nconst path = require('path')\nconst os = require('os')\n\nmodule.exports = class EmbedStrategy extends AuthStrategy {\n  // try to find a token\n  retrieveTokens (km, cb) {\n    let verifyToken = (refresh) => {\n      return km.auth.retrieveToken({\n        client_id: this.client_id,\n        refresh_token: refresh\n      })\n    }\n    async.tryEach([\n      // try to find the token via the environement\n      (next) => {\n        if (!process.env.KM_TOKEN) {\n          return next(new Error('No token in env'))\n        }\n        verifyToken(process.env.KM_TOKEN)\n          .then((res) => {\n            return next(null, res.data)\n          })\n          .catch(next)\n      },\n      // try to find it in the file system\n      (next) => {\n        fs.readFile(path.resolve(os.homedir(), '.keymetrics-tokens'), (err, tokens) => {\n          if (err) return next(err)\n\n          // verify that the token is valid\n          tokens = JSON.parse(tokens || '{}')\n          if (new Date(tokens.expire_at) > new Date(new Date().toISOString())) {\n            return next(null, tokens)\n          }\n\n          verifyToken(tokens.refresh_token)\n          .then((res) => {\n            return next(null, res.data)\n          })\n          .catch(next)\n        })\n      },\n      // otherwise make the whole flow\n      (next) => {\n        return this.launch((data) => {\n          // verify that the token is valid\n          verifyToken(data.access_token)\n          .then((res) => {\n            return next(null, res.data)\n          })\n          .catch(next)\n        })\n      }\n    ], (err, result) => {\n      if (result.refresh_token) {\n        let file = path.resolve(os.homedir(), '.keymetrics-tokens')\n        fs.writeFile(file, JSON.stringify(result), () => {\n          return cb(err, result)\n        })\n      } else {\n        return cb(err, result)\n      }\n    })\n  }\n\n  launch (cb) {\n    let shutdown = false\n    let server = http.createServer((req, res) => {\n      // only handle one request\n      if (shutdown === true) return res.end()\n      shutdown = true\n\n      let query = url.parse(req.url, true).query\n\n      res.write(` You can go back to your terminal now :) `)\n      res.end()\n      server.close()\n      return cb(query)\n    })\n    server.listen(43532, () => {\n      this.open(`${this.oauth_endpoint}${this.oauth_query}`)\n    })\n  }\n\n  open (target, appName, callback) {\n    let opener\n    const escape = function (s) {\n      return s.replace(/\"/g, '\\\\\"')\n    }\n\n    if (typeof (appName) === 'function') {\n      callback = appName\n      appName = null\n    }\n\n    switch (process.platform) {\n      case 'darwin': {\n        opener = appName ? `open -a \"${escape(appName)}\"` : `open`\n        break\n      }\n      case 'win32': {\n        opener = appName ? `start \"\" ${escape(appName)}\"` : `start \"\"`\n        break\n      }\n      default: {\n        opener = appName ? escape(appName) : `xdg-open`\n        break\n      }\n    }\n\n    if (process.env.SUDO_USER) {\n      opener = 'sudo -u ' + process.env.SUDO_USER + ' ' + opener\n    }\n    return exec(`${opener} \"${escape(target)}\"`, callback)\n  }\n\n  deleteTokens (km) {\n    return new Promise((resolve, reject) => {\n      // revoke the refreshToken\n      km.auth.revoke()\n      .then(res => {\n        // remove the token from the filesystem\n        let file = path.resolve(os.homedir(), '.keymetrics-tokens')\n        fs.unlinkSync(file)\n        return resolve(res)\n      }).catch(reject)\n    })\n  }\n}\n"]}
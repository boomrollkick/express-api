{"version":3,"sources":["../../../../../src/node_modules/@pm2/js-api/src/namespace.js"],"names":["Endpoint","require","logger","module","exports","mapping","opts","name","http","endpoints","namespaces","child","route","defaultNamespace","Namespace","services","push","key","addNamespace","service","baseURL","addEndpoint","length","map","namespace","join","endpoint","Error","build"],"mappings":";AACA;;;;;;;;AAEA,IAAMA,WAAWC,QAAQ,YAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,OAAR,EAAiB,gBAAjB,CAAf;;AAEAE,OAAOC,OAAP;AACE,qBAAaC,OAAb,EAAsBC,IAAtB,EAA4B;AAAA;;AAC1BJ,yCAAmCI,KAAKC,IAAxC;AACA,SAAKA,IAAL,GAAYD,KAAKC,IAAjB;AACA,SAAKC,IAAL,GAAYF,KAAKE,IAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,UAAL,GAAkB,EAAlB;;AAEAR,mCAA6BI,KAAKC,IAAlC;AACA,SAAK,IAAIA,IAAT,IAAiBF,OAAjB,EAA0B;AACxB,UAAIM,QAAQN,QAAQE,IAAR,CAAZ;AACA,UAAI,QAAOF,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,CAACM,MAAMC,KAA1C,EAAiD;AAC/C;AACA,YAAIL,SAAS,SAAb,EAAwB;AACtB;AACA,cAAMM,mBAAmB,IAAIC,SAAJ,CAAcH,KAAd,EAAqB,EAAEJ,UAAF,EAAQC,MAAM,KAAKA,IAAnB,EAAyBO,UAAUT,KAAKS,QAAxC,EAArB,CAAzB;AACA,eAAKL,UAAL,CAAgBM,IAAhB,CAAqBH,gBAArB;AACA;AACA,eAAK,IAAII,GAAT,IAAgBJ,gBAAhB,EAAkC;AAChC,gBAAII,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC;AACtC,iBAAKA,GAAL,IAAYJ,iBAAiBI,GAAjB,CAAZ;AACD;AACD;AACD;AACD;AACA,aAAKC,YAAL,CAAkB,IAAIJ,SAAJ,CAAcH,KAAd,EAAqB,EAAEJ,UAAF,EAAQC,MAAM,KAAKA,IAAnB,EAAyBO,UAAUT,KAAKS,QAAxC,EAArB,CAAlB;AACD,OAfD,MAeO;AACL;AACA,YAAIJ,MAAMQ,OAAN,IAAiBb,KAAKS,QAAtB,IAAkCT,KAAKS,QAAL,CAAcJ,MAAMQ,OAAN,CAAcZ,IAA5B,CAAtC,EAAyE;AACvEI,gBAAMQ,OAAN,CAAcC,OAAd,GAAwBd,KAAKS,QAAL,CAAcJ,MAAMQ,OAAN,CAAcZ,IAA5B,CAAxB;AACD;AACD,aAAKc,WAAL,CAAiB,IAAIrB,QAAJ,CAAaW,KAAb,CAAjB;AACD;AACF;;AAED;AACA,QAAI,KAAKD,UAAL,CAAgBY,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BpB,4BAAoB,KAAKK,IAAzB,iCAAyD,KAAKG,UAAL,CAAgBa,GAAhB,CAAoB;AAAA,eAAaC,UAAUjB,IAAvB;AAAA,OAApB,EAAiDkB,IAAjD,CAAsD,IAAtD,CAAzD;AACD;;AAED;AACA,QAAI,KAAKhB,SAAL,CAAea,MAAf,GAAwB,CAA5B,EAA+B;AAC7BpB,4BAAoB,KAAKK,IAAzB,gCAAwD,KAAKE,SAAL,CAAec,GAAf,CAAmB;AAAA,eAAYG,SAASd,KAAT,CAAeL,IAA3B;AAAA,OAAnB,EAAoDkB,IAApD,CAAyD,IAAzD,CAAxD;AACD;AACF;;AA5CH;AAAA;AAAA,iCA8CgBD,SA9ChB,EA8C2B;AACvB,UAAI,CAACA,SAAD,IAAcA,UAAUjB,IAAV,KAAmB,KAAKA,IAA1C,EAAgD;AAC9C,cAAM,IAAIoB,KAAJ,mEAAN;AACD;AACD,UAAI,EAAEH,qBAAqBV,SAAvB,CAAJ,EAAuC;AACrC,cAAM,IAAIa,KAAJ,+CAAN;AACD;;AAED,WAAKjB,UAAL,CAAgBM,IAAhB,CAAqBQ,SAArB;AACA,WAAKA,UAAUjB,IAAf,IAAuBiB,SAAvB;AACD;AAxDH;AAAA;AAAA,gCA0DeE,QA1Df,EA0DyB;AACrB,UAAI,CAACA,QAAD,IAAaA,SAASnB,IAAT,KAAkB,KAAKA,IAAxC,EAA8C;AAC5C,cAAM,IAAIoB,KAAJ,yDAAN;AACD;AACD,UAAI,EAAED,oBAAoB1B,QAAtB,CAAJ,EAAqC;AACnC,cAAM,IAAI2B,KAAJ,+CAAN;AACD;;AAED,WAAKlB,SAAL,CAAeO,IAAf,CAAoBU,QAApB;AACA,WAAKA,SAASnB,IAAd,IAAsBmB,SAASE,KAAT,CAAe,KAAKpB,IAApB,CAAtB;AACD;AApEH;;AAAA;AAAA","file":"namespace.js","sourcesContent":["\n'use strict'\n\nconst Endpoint = require('./endpoint')\nconst logger = require('debug')('kmjs:namespace')\n\nmodule.exports = class Namespace {\n  constructor (mapping, opts) {\n    logger(`initialization namespace ${opts.name}`)\n    this.name = opts.name\n    this.http = opts.http\n    this.endpoints = []\n    this.namespaces = []\n\n    logger(`building namespace ${opts.name}`)\n    for (let name in mapping) {\n      let child = mapping[name]\n      if (typeof mapping === 'object' && !child.route) {\n        // ignore the 'default' namespace that should bind to the parent namespace\n        if (name === 'default') {\n          // create the namespace\n          const defaultNamespace = new Namespace(child, { name, http: this.http, services: opts.services })\n          this.namespaces.push(defaultNamespace)\n          // bind property of the default namespace to this namespace\n          for (let key in defaultNamespace) {\n            if (key === 'name' || key === 'opts') continue\n            this[key] = defaultNamespace[key]\n          }\n          continue\n        }\n        // if the parent namespace is a object, the child are namespace too\n        this.addNamespace(new Namespace(child, { name, http: this.http, services: opts.services }))\n      } else {\n        // otherwise its an endpoint\n        if (child.service && opts.services && opts.services[child.service.name]) {\n          child.service.baseURL = opts.services[child.service.name]\n        }\n        this.addEndpoint(new Endpoint(child))\n      }\n    }\n\n    // logging namespaces\n    if (this.namespaces.length > 0) {\n      logger(`namespace ${this.name} contains namespaces : \\n${this.namespaces.map(namespace => namespace.name).join('\\n')}\\n`)\n    }\n\n    // logging endpoints\n    if (this.endpoints.length > 0) {\n      logger(`Namespace ${this.name} contains endpoints : \\n${this.endpoints.map(endpoint => endpoint.route.name).join('\\n')}\\n`)\n    }\n  }\n\n  addNamespace (namespace) {\n    if (!namespace || namespace.name === this.name) {\n      throw new Error(`A namespace must not have the same name as the parent namespace`)\n    }\n    if (!(namespace instanceof Namespace)) {\n      throw new Error(`addNamespace only accept Namespace instance`)\n    }\n\n    this.namespaces.push(namespace)\n    this[namespace.name] = namespace\n  }\n\n  addEndpoint (endpoint) {\n    if (!endpoint || endpoint.name === this.name) {\n      throw new Error(`A endpoint must not have the same name as a namespace`)\n    }\n    if (!(endpoint instanceof Endpoint)) {\n      throw new Error(`addNamespace only accept Namespace instance`)\n    }\n\n    this.endpoints.push(endpoint)\n    this[endpoint.name] = endpoint.build(this.http)\n  }\n}\n"]}
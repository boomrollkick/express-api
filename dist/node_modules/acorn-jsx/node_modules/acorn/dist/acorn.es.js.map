{"version":3,"sources":["../../../../../../src/node_modules/acorn-jsx/node_modules/acorn/dist/acorn.es.js"],"names":["reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywordTypes","kw","options","tt","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","nonASCIIwhitespace","skipWhiteSpace","isArray","obj","Object","prototype","toString","call","has","propName","hasOwnProperty","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","value","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","Math","max","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","potentialArrowAt","inFunction","inGenerator","labels","skipLineComment","isKeyword","word","isReservedWord","extend","f","pluginConfigs","this$1","plugin","Error","parse","node","startNode","nextToken","parseTopLevel","pp","isUseStrict","stmt","expression","raw","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","checkPatternErrors","refDestructuringErrors","andThrow","trailing","checkExpressionErrors","pp$1","first","body","parseStatement","setStrict","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","expr","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","parseFor","init$1","parseVar","declarations","init","parseForIn","toAssignable","checkLVal","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","raiseRecoverable","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","statementStart","allowStrict","oldStrict","update","left","right","isFor","decl","parseVarId","parseMaybeAssign","id","isStatement","allowExpressionBody","initFunction","generator","oldInGen","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","method","isGenerator","isMaybeStatic","parsePropertyName","static","isGetSet","computed","key","parseClassMethod","paramCount","parseMethod","superClass","parseExprSubscripts","parseExprAtom","parens","needsSemi","shouldParseExportStatement","specifiers","parseExportSpecifiers","local","nodes","exported","parseImportSpecifiers","node$1","node$2","imported","pp$2","isBinding","properties","prop","toAssignableList","elements","operator","exprList","last","arg","elt","parseSpread","parseRest","allowNonIdent","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","startNodeAt","checkClashes","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","skipArrowSubscripts","parseSubscripts","base","noCalls","property","callee","arguments","parseExprList","node$3","tag","quasi","parseTemplate","canBeArrow","parseArrowExpression","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","innerStartPos","innerStartLoc","spreadStart","innerParenStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isPattern","parsePropertyValue","isArrowFunction","isExpression","oldInFunc","oldLabels","useStrict","checkParams","nameHash","liberal","indexOf","delegate","pp$4","message","err","SyntaxError","raisedAt","Node","parser","pp$5","TokContext","isExpr","preserveSpace","override","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","readTmplToken","f_expr","pp$6","braceIsBlock","prevType","parent","curContext","out","statementParens","Token","pp$7","isRhino","Packages","getToken","Symbol","iterator","self","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","ch","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","codePointToString","str","tryCreateRegexp","src","throwErrorAt","e","undefined","regexpUnicodeSupport","escaped","inClass","charAt","content","mods","readWord1","tmp","tmpFlags","validFlags","_match","Number","readInt","radix","len","total","Infinity","startsWithDot","isFloat","octal","parseFloat","parseInt","readCodePoint","codePos","readHexChar","quote","chunkStart","readEscapedChar","inTemplate","octalStr","substr","escStart","esc","version","parseExpressionAt","tokenizer","tokTypes","tokContexts"],"mappings":";;;;;;;;AAAA;;AAEA,IAAIA,gBAAgB;AAClB,KAAG,qNADe;AAElB,KAAG,8CAFe;AAGlB,KAAG,MAHe;AAIlB,KAAG,MAJe;AAKlBC,UAAQ,wEALU;AAMlBC,cAAY;;AAGd;;AAToB,CAApB,CAWA,IAAIC,uBAAuB,6KAA3B;;AAEA,IAAIC,WAAW;AACb,KAAGD,oBADU;AAEb,KAAGA,uBAAuB;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;;AAXe,CAAf,CAaA,IAAIE,+BAA+B,qrIAAnC;AACA,IAAIC,0BAA0B,+gFAA9B;;AAEA,IAAIC,0BAA0B,IAAIC,MAAJ,CAAW,MAAMH,4BAAN,GAAqC,GAAhD,CAA9B;AACA,IAAII,qBAAqB,IAAID,MAAJ,CAAW,MAAMH,4BAAN,GAAqCC,uBAArC,GAA+D,GAA1E,CAAzB;;AAEAD,+BAA+BC,0BAA0B,IAAzD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAII,6BAA6B,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,EAAQ,EAAR,EAAW,CAAX,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,EAAtB,EAAyB,CAAzB,EAA2B,EAA3B,EAA8B,EAA9B,EAAiC,GAAjC,EAAqC,EAArC,EAAwC,EAAxC,EAA2C,GAA3C,EAA+C,EAA/C,EAAkD,CAAlD,EAAoD,EAApD,EAAuD,EAAvD,EAA0D,EAA1D,EAA6D,EAA7D,EAAgE,EAAhE,EAAmE,CAAnE,EAAqE,EAArE,EAAwE,EAAxE,EAA2E,EAA3E,EAA8E,CAA9E,EAAgF,EAAhF,EAAmF,CAAnF,EAAqF,CAArF,EAAuF,CAAvF,EAAyF,CAAzF,EAA2F,EAA3F,EAA8F,GAA9F,EAAkG,EAAlG,EAAqG,EAArG,EAAwG,CAAxG,EAA0G,EAA1G,EAA6G,CAA7G,EAA+G,EAA/G,EAAkH,CAAlH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,GAA3H,EAA+H,EAA/H,EAAkI,EAAlI,EAAqI,EAArI,EAAwI,CAAxI,EAA0I,GAA1I,EAA8I,CAA9I,EAAgJ,CAAhJ,EAAkJ,CAAlJ,EAAoJ,CAApJ,EAAsJ,EAAtJ,EAAyJ,CAAzJ,EAA2J,CAA3J,EAA6J,CAA7J,EAA+J,CAA/J,EAAiK,CAAjK,EAAmK,EAAnK,EAAsK,EAAtK,EAAyK,EAAzK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,EAAlL,EAAqL,EAArL,EAAwL,CAAxL,EAA0L,CAA1L,EAA4L,EAA5L,EAA+L,EAA/L,EAAkM,EAAlM,EAAqM,EAArM,EAAwM,EAAxM,EAA2M,EAA3M,EAA8M,CAA9M,EAAgN,CAAhN,EAAkN,EAAlN,EAAqN,CAArN,EAAuN,EAAvN,EAA0N,CAA1N,EAA4N,CAA5N,EAA8N,CAA9N,EAAgO,CAAhO,EAAkO,EAAlO,EAAqO,EAArO,EAAwO,EAAxO,EAA2O,CAA3O,EAA6O,EAA7O,EAAgP,EAAhP,EAAmP,CAAnP,EAAqP,CAArP,EAAuP,EAAvP,EAA0P,EAA1P,EAA6P,EAA7P,EAAgQ,EAAhQ,EAAmQ,EAAnQ,EAAsQ,EAAtQ,EAAyQ,EAAzQ,EAA4Q,EAA5Q,EAA+Q,EAA/Q,EAAkR,GAAlR,EAAsR,EAAtR,EAAyR,EAAzR,EAA4R,EAA5R,EAA+R,EAA/R,EAAkS,EAAlS,EAAqS,GAArS,EAAyS,EAAzS,EAA4S,EAA5S,EAA+S,EAA/S,EAAkT,EAAlT,EAAqT,EAArT,EAAwT,EAAxT,EAA2T,EAA3T,EAA8T,EAA9T,EAAiU,EAAjU,EAAoU,CAApU,EAAsU,CAAtU,EAAwU,EAAxU,EAA2U,EAA3U,EAA8U,EAA9U,EAAiV,CAAjV,EAAmV,EAAnV,EAAsV,CAAtV,EAAwV,CAAxV,EAA0V,CAA1V,EAA4V,EAA5V,EAA+V,EAA/V,EAAkW,CAAlW,EAAoW,EAApW,EAAuW,EAAvW,EAA0W,CAA1W,EAA4W,CAA5W,EAA8W,CAA9W,EAAgX,CAAhX,EAAkX,CAAlX,EAAoX,CAApX,EAAsX,EAAtX,EAAyX,CAAzX,EAA2X,CAA3X,EAA6X,CAA7X,EAA+X,EAA/X,EAAkY,EAAlY,EAAqY,CAArY,EAAuY,CAAvY,EAAyY,CAAzY,EAA2Y,CAA3Y,EAA6Y,EAA7Y,EAAgZ,CAAhZ,EAAkZ,CAAlZ,EAAoZ,CAApZ,EAAsZ,CAAtZ,EAAwZ,CAAxZ,EAA0Z,CAA1Z,EAA4Z,CAA5Z,EAA8Z,CAA9Z,EAAga,EAAha,EAAma,CAAna,EAAqa,EAAra,EAAwa,CAAxa,EAA0a,GAA1a,EAA8a,EAA9a,EAAib,EAAjb,EAAob,CAApb,EAAsb,EAAtb,EAAyb,EAAzb,EAA4b,EAA5b,EAA+b,CAA/b,EAAic,CAAjc,EAAmc,CAAnc,EAAqc,GAArc,EAAyc,EAAzc,EAA4c,EAA5c,EAA+c,CAA/c,EAAid,EAAjd,EAAod,EAApd,EAAud,EAAvd,EAA0d,CAA1d,EAA4d,EAA5d,EAA+d,EAA/d,EAAke,EAAle,EAAqe,EAAre,EAAwe,GAAxe,EAA4e,EAA5e,EAA+e,EAA/e,EAAkf,CAAlf,EAAof,GAApf,EAAwf,EAAxf,EAA2f,GAA3f,EAA+f,CAA/f,EAAigB,CAAjgB,EAAmgB,EAAngB,EAAsgB,EAAtgB,EAAygB,CAAzgB,EAA2gB,EAA3gB,EAA8gB,EAA9gB,EAAihB,GAAjhB,EAAqhB,GAArhB,EAAyhB,GAAzhB,EAA6hB,GAA7hB,EAAiiB,EAAjiB,EAAoiB,GAApiB,EAAwiB,IAAxiB,EAA6iB,IAA7iB,EAAkjB,IAAljB,EAAujB,GAAvjB,EAA2jB,IAA3jB,EAAgkB,GAAhkB,EAAokB,CAApkB,EAAskB,EAAtkB,EAAykB,GAAzkB,EAA6kB,EAA7kB,EAAglB,EAAhlB,EAAmlB,EAAnlB,EAAslB,EAAtlB,EAAylB,CAAzlB,EAA2lB,EAA3lB,EAA8lB,EAA9lB,EAAimB,CAAjmB,EAAmmB,EAAnmB,EAAsmB,GAAtmB,EAA0mB,EAA1mB,EAA6mB,EAA7mB,EAAgnB,CAAhnB,EAAknB,EAAlnB,EAAqnB,EAArnB,EAAwnB,EAAxnB,EAA2nB,CAA3nB,EAA6nB,EAA7nB,EAAgoB,IAAhoB,EAAqoB,EAAroB,EAAwoB,GAAxoB,EAA4oB,IAA5oB,EAAipB,CAAjpB,EAAmpB,IAAnpB,EAAwpB,GAAxpB,EAA4pB,CAA5pB,EAA8pB,EAA9pB,EAAiqB,CAAjqB,EAAmqB,CAAnqB,EAAqqB,CAArqB,EAAuqB,CAAvqB,EAAyqB,IAAzqB,EAA8qB,EAA9qB,EAAirB,CAAjrB,EAAmrB,EAAnrB,EAAsrB,CAAtrB,EAAwrB,CAAxrB,EAA0rB,CAA1rB,EAA4rB,CAA5rB,EAA8rB,CAA9rB,EAAgsB,CAAhsB,EAAksB,CAAlsB,EAAosB,CAApsB,EAAssB,CAAtsB,EAAwsB,EAAxsB,EAA2sB,CAA3sB,EAA6sB,CAA7sB,EAA+sB,CAA/sB,EAAitB,CAAjtB,EAAmtB,CAAntB,EAAqtB,EAArtB,EAAwtB,CAAxtB,EAA0tB,CAA1tB,EAA4tB,CAA5tB,EAA8tB,CAA9tB,EAAguB,CAAhuB,EAAkuB,CAAluB,EAAouB,CAApuB,EAAsuB,EAAtuB,EAAyuB,CAAzuB,EAA2uB,CAA3uB,EAA6uB,CAA7uB,EAA+uB,CAA/uB,EAAivB,CAAjvB,EAAmvB,CAAnvB,EAAqvB,CAArvB,EAAuvB,CAAvvB,EAAyvB,CAAzvB,EAA2vB,GAA3vB,EAA+vB,CAA/vB,EAAiwB,EAAjwB,EAAowB,CAApwB,EAAswB,EAAtwB,EAAywB,CAAzwB,EAA2wB,EAA3wB,EAA8wB,CAA9wB,EAAgxB,EAAhxB,EAAmxB,CAAnxB,EAAqxB,EAArxB,EAAwxB,CAAxxB,EAA0xB,EAA1xB,EAA6xB,CAA7xB,EAA+xB,EAA/xB,EAAkyB,CAAlyB,EAAoyB,EAApyB,EAAuyB,CAAvyB,EAAyyB,EAAzyB,EAA4yB,CAA5yB,EAA8yB,EAA9yB,EAAizB,CAAjzB,EAAmzB,CAAnzB,EAAqzB,IAArzB,EAA0zB,GAA1zB,EAA8zB,EAA9zB,EAAi0B,EAAj0B,EAAo0B,IAAp0B,EAAy0B,CAAz0B,EAA20B,CAA30B,EAA60B,EAA70B,EAAg1B,CAAh1B,EAAk1B,CAAl1B,EAAo1B,CAAp1B,EAAs1B,CAAt1B,EAAw1B,CAAx1B,EAA01B,CAA11B,EAA41B,CAA51B,EAA81B,CAA91B,EAAg2B,CAAh2B,EAAk2B,CAAl2B,EAAo2B,CAAp2B,EAAs2B,CAAt2B,EAAw2B,CAAx2B,EAA02B,CAA12B,EAA42B,CAA52B,EAA82B,CAA92B,EAAg3B,CAAh3B,EAAk3B,CAAl3B,EAAo3B,CAAp3B,EAAs3B,CAAt3B,EAAw3B,CAAx3B,EAA03B,CAA13B,EAA43B,CAA53B,EAA83B,CAA93B,EAAg4B,CAAh4B,EAAk4B,CAAl4B,EAAo4B,CAAp4B,EAAs4B,CAAt4B,EAAw4B,CAAx4B,EAA04B,CAA14B,EAA44B,CAA54B,EAA84B,CAA94B,EAAg5B,CAAh5B,EAAk5B,CAAl5B,EAAo5B,CAAp5B,EAAs5B,CAAt5B,EAAw5B,CAAx5B,EAA05B,CAA15B,EAA45B,CAA55B,EAA85B,CAA95B,EAAg6B,CAAh6B,EAAk6B,CAAl6B,EAAo6B,CAAp6B,EAAs6B,CAAt6B,EAAw6B,CAAx6B,EAA06B,CAA16B,EAA46B,CAA56B,EAA86B,CAA96B,EAAg7B,CAAh7B,EAAk7B,CAAl7B,EAAo7B,CAAp7B,EAAs7B,CAAt7B,EAAw7B,CAAx7B,EAA07B,CAA17B,EAA47B,CAA57B,EAA87B,EAA97B,EAAi8B,CAAj8B,EAAm8B,CAAn8B,EAAq8B,CAAr8B,EAAu8B,CAAv8B,EAAy8B,CAAz8B,EAA28B,EAA38B,EAA88B,IAA98B,EAAm9B,KAAn9B,EAAy9B,EAAz9B,EAA49B,IAA59B,EAAi+B,EAAj+B,EAAo+B,GAAp+B,EAAw+B,CAAx+B,EAA0+B,IAA1+B,EAA++B,KAA/+B,EAAq/B,GAAr/B,CAAjC;AACA,IAAIC,wBAAwB,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,CAAX,EAAa,GAAb,EAAiB,CAAjB,EAAmB,GAAnB,EAAuB,CAAvB,EAAyB,IAAzB,EAA8B,CAA9B,EAAgC,CAAhC,EAAkC,CAAlC,EAAoC,CAApC,EAAsC,CAAtC,EAAwC,EAAxC,EAA2C,CAA3C,EAA6C,CAA7C,EAA+C,CAA/C,EAAiD,GAAjD,EAAqD,CAArD,EAAuD,IAAvD,EAA4D,CAA5D,EAA8D,EAA9D,EAAiE,EAAjE,EAAoE,EAApE,EAAuE,CAAvE,EAAyE,EAAzE,EAA4E,CAA5E,EAA8E,EAA9E,EAAiF,EAAjF,EAAoF,EAApF,EAAuF,CAAvF,EAAyF,CAAzF,EAA2F,CAA3F,EAA6F,EAA7F,EAAgG,EAAhG,EAAmG,CAAnG,EAAqG,CAArG,EAAuG,EAAvG,EAA0G,CAA1G,EAA4G,EAA5G,EAA+G,CAA/G,EAAiH,EAAjH,EAAoH,EAApH,EAAuH,EAAvH,EAA0H,CAA1H,EAA4H,CAA5H,EAA8H,CAA9H,EAAgI,EAAhI,EAAmI,EAAnI,EAAsI,CAAtI,EAAwI,CAAxI,EAA0I,GAA1I,EAA8I,EAA9I,EAAiJ,CAAjJ,EAAmJ,CAAnJ,EAAqJ,CAArJ,EAAuJ,CAAvJ,EAAyJ,EAAzJ,EAA4J,CAA5J,EAA8J,CAA9J,EAAgK,CAAhK,EAAkK,CAAlK,EAAoK,CAApK,EAAsK,CAAtK,EAAwK,CAAxK,EAA0K,EAA1K,EAA6K,CAA7K,EAA+K,EAA/K,EAAkL,CAAlL,EAAoL,CAApL,EAAsL,CAAtL,EAAwL,CAAxL,EAA0L,CAA1L,EAA4L,GAA5L,EAAgM,EAAhM,EAAmM,EAAnM,EAAsM,CAAtM,EAAwM,EAAxM,EAA2M,EAA3M,EAA8M,EAA9M,EAAiN,CAAjN,EAAmN,GAAnN,EAAuN,CAAvN,EAAyN,CAAzN,EAA2N,CAA3N,EAA6N,EAA7N,EAAgO,CAAhO,EAAkO,EAAlO,EAAqO,EAArO,EAAwO,EAAxO,EAA2O,CAA3O,EAA6O,EAA7O,EAAgP,EAAhP,EAAmP,CAAnP,EAAqP,CAArP,EAAuP,EAAvP,EAA0P,EAA1P,EAA6P,CAA7P,EAA+P,CAA/P,EAAiQ,GAAjQ,EAAqQ,CAArQ,EAAuQ,GAAvQ,EAA2Q,CAA3Q,EAA6Q,CAA7Q,EAA+Q,CAA/Q,EAAiR,EAAjR,EAAoR,CAApR,EAAsR,EAAtR,EAAyR,EAAzR,EAA4R,CAA5R,EAA8R,EAA9R,EAAiS,KAAjS,EAAuS,CAAvS,EAAyS,GAAzS,EAA6S,CAA7S,EAA+S,EAA/S,EAAkT,CAAlT,EAAoT,EAApT,EAAuT,CAAvT,EAAyT,IAAzT,EAA8T,EAA9T,EAAiU,EAAjU,EAAoU,CAApU,EAAsU,KAAtU,EAA4U,CAA5U,EAA8U,IAA9U,EAAmV,CAAnV,EAAqV,CAArV,EAAuV,CAAvV,EAAyV,CAAzV,EAA2V,CAA3V,EAA6V,CAA7V,EAA+V,CAA/V,EAAiW,EAAjW,EAAoW,CAApW,EAAsW,GAAtW,EAA0W,CAA1W,EAA4W,IAA5W,EAAiX,EAAjX,EAAoX,GAApX,EAAwX,EAAxX,EAA2X,CAA3X,EAA6X,EAA7X,EAAgY,CAAhY,EAAkY,CAAlY,EAAoY,EAApY,EAAuY,CAAvY,EAAyY,EAAzY,EAA4Y,CAA5Y,EAA8Y,CAA9Y,EAAgZ,EAAhZ,EAAmZ,IAAnZ,EAAwZ,CAAxZ,EAA0Z,CAA1Z,EAA4Z,EAA5Z,EAA+Z,CAA/Z,EAAia,CAAja,EAAma,CAAna,EAAqa,CAAra,EAAua,CAAva,EAAya,CAAza,EAA2a,IAA3a,EAAgb,CAAhb,EAAkb,GAAlb,EAAsb,CAAtb,EAAwb,CAAxb,EAA0b,CAA1b,EAA4b,MAA5b,EAAmc,GAAnc,CAA5B;;AAEA;AACA;AACA;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAkC;AAChC,MAAIC,MAAM,OAAV;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,IAAIG,MAAxB,EAAgCD,KAAK,CAArC,EAAwC;AACtCD,WAAOD,IAAIE,CAAJ,CAAP;AACA,QAAID,MAAMF,IAAV,EAAgB,OAAO,KAAP;AAChBE,WAAOD,IAAIE,IAAI,CAAR,CAAP;AACA,QAAID,OAAOF,IAAX,EAAiB,OAAO,IAAP;AAClB;AACF;;AAED;;AAEA,SAASK,iBAAT,CAA2BL,IAA3B,EAAiCM,MAAjC,EAAyC;AACvC,MAAIN,OAAO,EAAX,EAAe,OAAOA,SAAS,EAAhB;AACf,MAAIA,OAAO,EAAX,EAAe,OAAO,IAAP;AACf,MAAIA,OAAO,EAAX,EAAe,OAAOA,SAAS,EAAhB;AACf,MAAIA,OAAO,GAAX,EAAgB,OAAO,IAAP;AAChB,MAAIA,QAAQ,MAAZ,EAAoB,OAAOA,QAAQ,IAAR,IAAgBN,wBAAwBa,IAAxB,CAA6BC,OAAOC,YAAP,CAAoBT,IAApB,CAA7B,CAAvB;AACpB,MAAIM,WAAW,KAAf,EAAsB,OAAO,KAAP;AACtB,SAAOP,cAAcC,IAAd,EAAoBH,0BAApB,CAAP;AACD;;AAED;;AAEA,SAASa,gBAAT,CAA0BV,IAA1B,EAAgCM,MAAhC,EAAwC;AACtC,MAAIN,OAAO,EAAX,EAAe,OAAOA,SAAS,EAAhB;AACf,MAAIA,OAAO,EAAX,EAAe,OAAO,IAAP;AACf,MAAIA,OAAO,EAAX,EAAe,OAAO,KAAP;AACf,MAAIA,OAAO,EAAX,EAAe,OAAO,IAAP;AACf,MAAIA,OAAO,EAAX,EAAe,OAAOA,SAAS,EAAhB;AACf,MAAIA,OAAO,GAAX,EAAgB,OAAO,IAAP;AAChB,MAAIA,QAAQ,MAAZ,EAAoB,OAAOA,QAAQ,IAAR,IAAgBJ,mBAAmBW,IAAnB,CAAwBC,OAAOC,YAAP,CAAoBT,IAApB,CAAxB,CAAvB;AACpB,MAAIM,WAAW,KAAf,EAAsB,OAAO,KAAP;AACtB,SAAOP,cAAcC,IAAd,EAAoBH,0BAApB,KAAmDE,cAAcC,IAAd,EAAoBF,qBAApB,CAA1D;AACD;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIa,YAAY,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC9C,MAAKA,SAAS,KAAK,CAAnB,EAAuBA,OAAO,EAAP;;AAEvB,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKE,OAAL,GAAeD,KAAKC,OAApB;AACA,OAAKC,UAAL,GAAkB,CAAC,CAACF,KAAKE,UAAzB;AACA,OAAKC,UAAL,GAAkB,CAAC,CAACH,KAAKG,UAAzB;AACA,OAAKC,MAAL,GAAc,CAAC,CAACJ,KAAKI,MAArB;AACA,OAAKC,QAAL,GAAgB,CAAC,CAACL,KAAKK,QAAvB;AACA,OAAKC,MAAL,GAAc,CAAC,CAACN,KAAKM,MAArB;AACA,OAAKC,OAAL,GAAe,CAAC,CAACP,KAAKO,OAAtB;AACA,OAAKC,KAAL,GAAaR,KAAKQ,KAAL,IAAc,IAA3B;AACA,OAAKC,aAAL,GAAqB,IAArB;AACD,CAbD;;AAeA,SAASD,KAAT,CAAeE,IAAf,EAAqBC,IAArB,EAA2B;AACzB,SAAO,IAAIb,SAAJ,CAAcY,IAAd,EAAoB,EAACR,YAAY,IAAb,EAAmBM,OAAOG,IAA1B,EAApB,CAAP;AACD;AACD,IAAIT,aAAa,EAACA,YAAY,IAAb,EAAjB;AACA,IAAIC,aAAa,EAACA,YAAY,IAAb,EAAjB;AACA;;AAEA,IAAIS,eAAe,EAAnB;;AAEA;AACA,SAASC,EAAT,CAAYH,IAAZ,EAAkBI,OAAlB,EAA2B;AACzB,MAAKA,YAAY,KAAK,CAAtB,EAA0BA,UAAU,EAAV;;AAE1BA,UAAQb,OAAR,GAAkBS,IAAlB;AACA,SAAOE,aAAaF,IAAb,IAAqB,IAAIZ,SAAJ,CAAcY,IAAd,EAAoBI,OAApB,CAA5B;AACD;;AAED,IAAIC,KAAK;AACPC,OAAK,IAAIlB,SAAJ,CAAc,KAAd,EAAqBK,UAArB,CADE;AAEPc,UAAQ,IAAInB,SAAJ,CAAc,QAAd,EAAwBK,UAAxB,CAFD;AAGPe,UAAQ,IAAIpB,SAAJ,CAAc,QAAd,EAAwBK,UAAxB,CAHD;AAIPO,QAAM,IAAIZ,SAAJ,CAAc,MAAd,EAAsBK,UAAtB,CAJC;AAKPgB,OAAK,IAAIrB,SAAJ,CAAc,KAAd,CALE;;AAOP;AACAsB,YAAU,IAAItB,SAAJ,CAAc,GAAd,EAAmB,EAACI,YAAY,IAAb,EAAmBC,YAAY,IAA/B,EAAnB,CARH;AASPkB,YAAU,IAAIvB,SAAJ,CAAc,GAAd,CATH;AAUPwB,UAAQ,IAAIxB,SAAJ,CAAc,GAAd,EAAmB,EAACI,YAAY,IAAb,EAAmBC,YAAY,IAA/B,EAAnB,CAVD;AAWPoB,UAAQ,IAAIzB,SAAJ,CAAc,GAAd,CAXD;AAYP0B,UAAQ,IAAI1B,SAAJ,CAAc,GAAd,EAAmB,EAACI,YAAY,IAAb,EAAmBC,YAAY,IAA/B,EAAnB,CAZD;AAaPsB,UAAQ,IAAI3B,SAAJ,CAAc,GAAd,CAbD;AAcP4B,SAAO,IAAI5B,SAAJ,CAAc,GAAd,EAAmBI,UAAnB,CAdA;AAePyB,QAAM,IAAI7B,SAAJ,CAAc,GAAd,EAAmBI,UAAnB,CAfC;AAgBP0B,SAAO,IAAI9B,SAAJ,CAAc,GAAd,EAAmBI,UAAnB,CAhBA;AAiBP2B,OAAK,IAAI/B,SAAJ,CAAc,GAAd,CAjBE;AAkBPgC,YAAU,IAAIhC,SAAJ,CAAc,GAAd,EAAmBI,UAAnB,CAlBH;AAmBP6B,SAAO,IAAIjC,SAAJ,CAAc,IAAd,EAAoBI,UAApB,CAnBA;AAoBP8B,YAAU,IAAIlC,SAAJ,CAAc,UAAd,CApBH;AAqBPmC,YAAU,IAAInC,SAAJ,CAAc,KAAd,EAAqBI,UAArB,CArBH;AAsBPgC,aAAW,IAAIpC,SAAJ,CAAc,GAAd,EAAmBK,UAAnB,CAtBJ;AAuBPgC,gBAAc,IAAIrC,SAAJ,CAAc,IAAd,EAAoB,EAACI,YAAY,IAAb,EAAmBC,YAAY,IAA/B,EAApB,CAvBP;;AAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAiC,MAAI,IAAItC,SAAJ,CAAc,GAAd,EAAmB,EAACI,YAAY,IAAb,EAAmBG,UAAU,IAA7B,EAAnB,CAvCG;AAwCPgC,UAAQ,IAAIvC,SAAJ,CAAc,IAAd,EAAoB,EAACI,YAAY,IAAb,EAAmBG,UAAU,IAA7B,EAApB,CAxCD;AAyCPiC,UAAQ,IAAIxC,SAAJ,CAAc,OAAd,EAAuB,EAACQ,QAAQ,IAAT,EAAeC,SAAS,IAAxB,EAA8BJ,YAAY,IAA1C,EAAvB,CAzCD;AA0CPG,UAAQ,IAAIR,SAAJ,CAAc,QAAd,EAAwB,EAACI,YAAY,IAAb,EAAmBI,QAAQ,IAA3B,EAAiCH,YAAY,IAA7C,EAAxB,CA1CD;AA2CPoC,aAAW/B,MAAM,IAAN,EAAY,CAAZ,CA3CJ;AA4CPgC,cAAYhC,MAAM,IAAN,EAAY,CAAZ,CA5CL;AA6CPiC,aAAWjC,MAAM,GAAN,EAAW,CAAX,CA7CJ;AA8CPkC,cAAYlC,MAAM,GAAN,EAAW,CAAX,CA9CL;AA+CPmC,cAAYnC,MAAM,GAAN,EAAW,CAAX,CA/CL;AAgDPoC,YAAUpC,MAAM,OAAN,EAAe,CAAf,CAhDH;AAiDPqC,cAAYrC,MAAM,KAAN,EAAa,CAAb,CAjDL;AAkDPsC,YAAUtC,MAAM,OAAN,EAAe,CAAf,CAlDH;AAmDPuC,WAAS,IAAIjD,SAAJ,CAAc,KAAd,EAAqB,EAACI,YAAY,IAAb,EAAmBM,OAAO,CAA1B,EAA6BF,QAAQ,IAArC,EAA2CH,YAAY,IAAvD,EAArB,CAnDF;AAoDP6C,UAAQxC,MAAM,GAAN,EAAW,EAAX,CApDD;AAqDPyC,QAAMzC,MAAM,GAAN,EAAW,EAAX,CArDC;AAsDP0C,SAAO1C,MAAM,GAAN,EAAW,EAAX,CAtDA;AAuDP2C,YAAU,IAAIrD,SAAJ,CAAc,IAAd,EAAoB,EAACI,YAAY,IAAb,EAApB,CAvDH;;AAyDP;AACAkD,UAAQvC,GAAG,OAAH,CA1DD;AA2DPwC,SAAOxC,GAAG,MAAH,EAAWX,UAAX,CA3DA;AA4DPoD,UAAQzC,GAAG,OAAH,CA5DD;AA6DP0C,aAAW1C,GAAG,UAAH,CA7DJ;AA8DP2C,aAAW3C,GAAG,UAAH,CA9DJ;AA+DP4C,YAAU5C,GAAG,SAAH,EAAcX,UAAd,CA/DH;AAgEPwD,OAAK7C,GAAG,IAAH,EAAS,EAACT,QAAQ,IAAT,EAAeF,YAAY,IAA3B,EAAT,CAhEE;AAiEPyD,SAAO9C,GAAG,MAAH,EAAWX,UAAX,CAjEA;AAkEP0D,YAAU/C,GAAG,SAAH,CAlEH;AAmEPgD,QAAMhD,GAAG,KAAH,EAAU,EAACT,QAAQ,IAAT,EAAV,CAnEC;AAoEP0D,aAAWjD,GAAG,UAAH,EAAeV,UAAf,CApEJ;AAqEP4D,OAAKlD,GAAG,IAAH,CArEE;AAsEPmD,WAASnD,GAAG,QAAH,EAAaX,UAAb,CAtEF;AAuEP+D,WAASpD,GAAG,QAAH,CAvEF;AAwEPqD,UAAQrD,GAAG,OAAH,EAAYX,UAAZ,CAxED;AAyEPiE,QAAMtD,GAAG,KAAH,CAzEC;AA0EPuD,QAAMvD,GAAG,KAAH,CA1EC;AA2EPwD,UAAQxD,GAAG,OAAH,CA3ED;AA4EPyD,UAAQzD,GAAG,OAAH,EAAY,EAACT,QAAQ,IAAT,EAAZ,CA5ED;AA6EPmE,SAAO1D,GAAG,MAAH,CA7EA;AA8EP2D,QAAM3D,GAAG,KAAH,EAAU,EAACX,YAAY,IAAb,EAAmBC,YAAY,IAA/B,EAAV,CA9EC;AA+EPsE,SAAO5D,GAAG,MAAH,EAAWV,UAAX,CA/EA;AAgFPuE,UAAQ7D,GAAG,OAAH,EAAYV,UAAZ,CAhFD;AAiFPwE,UAAQ9D,GAAG,OAAH,CAjFD;AAkFP+D,YAAU/D,GAAG,SAAH,EAAcX,UAAd,CAlFH;AAmFP2E,WAAShE,GAAG,QAAH,CAnFF;AAoFPiE,WAASjE,GAAG,QAAH,CApFF;AAqFPkE,SAAOlE,GAAG,MAAH,EAAWV,UAAX,CArFA;AAsFP6E,SAAOnE,GAAG,MAAH,EAAWV,UAAX,CAtFA;AAuFP8E,UAAQpE,GAAG,OAAH,EAAYV,UAAZ,CAvFD;AAwFP+E,OAAKrE,GAAG,IAAH,EAAS,EAACX,YAAY,IAAb,EAAmBM,OAAO,CAA1B,EAAT,CAxFE;AAyFP2E,eAAatE,GAAG,YAAH,EAAiB,EAACX,YAAY,IAAb,EAAmBM,OAAO,CAA1B,EAAjB,CAzFN;AA0FP4E,WAASvE,GAAG,QAAH,EAAa,EAACX,YAAY,IAAb,EAAmBI,QAAQ,IAA3B,EAAiCH,YAAY,IAA7C,EAAb,CA1FF;AA2FPkF,SAAOxE,GAAG,MAAH,EAAW,EAACX,YAAY,IAAb,EAAmBI,QAAQ,IAA3B,EAAiCH,YAAY,IAA7C,EAAX,CA3FA;AA4FPmF,WAASzE,GAAG,QAAH,EAAa,EAACX,YAAY,IAAb,EAAmBI,QAAQ,IAA3B,EAAiCH,YAAY,IAA7C,EAAb;;AAGX;AACA;;AAhGS,CAAT,CAkGA,IAAIoF,YAAY,wBAAhB;AACA,IAAIC,aAAa,IAAI1G,MAAJ,CAAWyG,UAAUE,MAArB,EAA6B,GAA7B,CAAjB;;AAEA,SAASC,SAAT,CAAmBvG,IAAnB,EAAyB;AACvB,SAAOA,SAAS,EAAT,IAAeA,SAAS,EAAxB,IAA8BA,SAAS,MAAvC,IAAiDA,QAAQ,MAAhE;AACD;;AAED,IAAIwG,qBAAqB,qDAAzB;;AAEA,IAAIC,iBAAiB,+BAArB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,gBAA/C;AACD;;AAED;;AAEA,SAASK,GAAT,CAAaL,GAAb,EAAkBM,QAAlB,EAA4B;AAC1B,SAAOL,OAAOC,SAAP,CAAiBK,cAAjB,CAAgCH,IAAhC,CAAqCJ,GAArC,EAA0CM,QAA1C,CAAP;AACD;;AAED;AACA;;AAEA,IAAIE,WAAW,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAC1C,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKE,MAAL,GAAcD,GAAd;AACD,CAHD;;AAKAF,SAASN,SAAT,CAAmBU,MAAnB,GAA4B,SAASA,MAAT,CAAiBC,CAAjB,EAAoB;AAC9C,SAAO,IAAIL,QAAJ,CAAa,KAAKC,IAAlB,EAAwB,KAAKE,MAAL,GAAcE,CAAtC,CAAP;AACD,CAFD;;AAIA,IAAIC,iBAAiB,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuC;AAC1D,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,MAAIF,EAAEG,UAAF,KAAiB,IAArB,EAA2B,KAAKvB,MAAL,GAAcoB,EAAEG,UAAhB;AAC5B,CAJD;;AAMA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BR,MAA5B,EAAoC;AAClC,OAAK,IAAIH,OAAO,CAAX,EAAcY,MAAM,CAAzB,IAA8B;AAC5B3B,eAAW4B,SAAX,GAAuBD,GAAvB;AACA,QAAIE,QAAQ7B,WAAW8B,IAAX,CAAgBJ,KAAhB,CAAZ;AACA,QAAIG,SAASA,MAAME,KAAN,GAAcb,MAA3B,EAAmC;AACjC,QAAEH,IAAF;AACAY,YAAME,MAAME,KAAN,GAAcF,MAAM,CAAN,EAAS9H,MAA7B;AACD,KAHD,MAGO;AACL,aAAO,IAAI+G,QAAJ,CAAaC,IAAb,EAAmBG,SAASS,GAA5B,CAAP;AACD;AACF;AACF;;AAED;AACA;;AAEA,IAAIK,iBAAiB;AACnB;AACA;AACA;AACA;AACAC,eAAa,CALM;AAMnB;AACAC,cAAY,QAPO;AAQnB;AACA;AACA;AACA;AACA;AACAC,uBAAqB,IAbF;AAcnB;AACA;AACAC,mBAAiB,IAhBE;AAiBnB;AACA;AACA;AACA;AACAC,iBAAe,IArBI;AAsBnB;AACA;AACAC,8BAA4B,KAxBT;AAyBnB;AACA;AACAC,+BAA6B,KA3BV;AA4BnB;AACA;AACAC,iBAAe,KA9BI;AA+BnB;AACA;AACA;AACA;AACAC,aAAW,KAnCQ;AAoCnB;AACA;AACA;AACA;AACA;AACAC,WAAS,IAzCU;AA0CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAAW,IApDQ;AAqDnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,UAAQ,KA7DW;AA8DnB;AACA;AACA;AACA;AACA;AACAC,WAAS,IAnEU;AAoEnB;AACA;AACArB,cAAY,IAtEO;AAuEnB;AACA;AACAsB,oBAAkB,IAzEC;AA0EnB;AACA;AACAC,kBAAgB,KA5EG;AA6EnBC,WAAS;;AAGX;;AAhFqB,CAArB,CAkFA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAI5H,UAAU,EAAd;AACA,OAAK,IAAI6H,GAAT,IAAgBnB,cAAhB;AACE1G,YAAQ6H,GAAR,IAAeD,QAAQvC,IAAIuC,IAAJ,EAAUC,GAAV,CAAR,GAAyBD,KAAKC,GAAL,CAAzB,GAAqCnB,eAAemB,GAAf,CAApD;AADF,GAEA,IAAI7H,QAAQ+G,aAAR,IAAyB,IAA7B,EACE/G,QAAQ+G,aAAR,GAAwB/G,QAAQ2G,WAAR,GAAsB,CAA9C;;AAEF,MAAI5B,QAAQ/E,QAAQoH,OAAhB,CAAJ,EAA8B;AAC5B,QAAIU,SAAS9H,QAAQoH,OAArB;AACApH,YAAQoH,OAAR,GAAkB,UAAUW,KAAV,EAAiB;AAAE,aAAOD,OAAOE,IAAP,CAAYD,KAAZ,CAAP;AAA4B,KAAjE;AACD;AACD,MAAIhD,QAAQ/E,QAAQqH,SAAhB,CAAJ,EACErH,QAAQqH,SAAR,GAAoBY,YAAYjI,OAAZ,EAAqBA,QAAQqH,SAA7B,CAApB;;AAEF,SAAOrH,OAAP;AACD;;AAED,SAASiI,WAAT,CAAqBjI,OAArB,EAA8BkI,KAA9B,EAAqC;AACnC,SAAO,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBpC,KAAvB,EAA8BC,GAA9B,EAAmCoC,QAAnC,EAA6CC,MAA7C,EAAqD;AAC1D,QAAIC,UAAU;AACZC,YAAML,QAAQ,OAAR,GAAkB,MADZ;AAEZM,aAAOL,IAFK;AAGZpC,aAAOA,KAHK;AAIZC,WAAKA;AAJO,KAAd;AAMA,QAAIjG,QAAQmH,SAAZ,EACEoB,QAAQG,GAAR,GAAc,IAAI5C,cAAJ,CAAmB,IAAnB,EAAyBuC,QAAzB,EAAmCC,MAAnC,CAAd;AACF,QAAItI,QAAQsH,MAAZ,EACEiB,QAAQI,KAAR,GAAgB,CAAC3C,KAAD,EAAQC,GAAR,CAAhB;AACFiC,UAAMF,IAAN,CAAWO,OAAX;AACD,GAZD;AAaD;;AAED;AACA,IAAIb,UAAU,EAAd;;AAEA,SAASkB,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO,IAAI7K,MAAJ,CAAW,OAAO6K,MAAMC,OAAN,CAAc,IAAd,EAAoB,GAApB,CAAP,GAAkC,IAA7C,CAAP;AACD;;AAED,IAAIC,SAAS,SAASA,MAAT,CAAgB/I,OAAhB,EAAyBoG,KAAzB,EAAgC4C,QAAhC,EAA0C;AACrD,OAAKhJ,OAAL,GAAeA,UAAU2H,WAAW3H,OAAX,CAAzB;AACA,OAAKkG,UAAL,GAAkBlG,QAAQkG,UAA1B;AACA,OAAKtI,QAAL,GAAgBgL,cAAchL,SAASoC,QAAQ2G,WAAR,IAAuB,CAAvB,GAA2B,CAA3B,GAA+B,CAAxC,CAAd,CAAhB;AACA,MAAIsC,WAAWjJ,QAAQ+G,aAAR,GAAwB,EAAxB,GACXvJ,cAAcwC,QAAQ2G,WAAtB,KAAsC3G,QAAQ4G,UAAR,IAAsB,QAAtB,GAAiC,QAAjC,GAA4C,EAAlF,CADJ;AAEA,OAAKpJ,aAAL,GAAqBoL,cAAcK,QAAd,CAArB;AACA,MAAIC,iBAAiB,CAACD,WAAWA,WAAW,GAAtB,GAA4B,EAA7B,IAAmCzL,cAAcC,MAAtE;AACA,OAAK0L,mBAAL,GAA2BP,cAAcM,cAAd,CAA3B;AACA,OAAKE,uBAAL,GAA+BR,cAAcM,iBAAiB,GAAjB,GAAuB1L,cAAcE,UAAnD,CAA/B;AACA,OAAK0I,KAAL,GAAavH,OAAOuH,KAAP,CAAb;;AAEA;AACA;AACA;AACA,OAAKiD,WAAL,GAAmB,KAAnB;;AAEA;AACA,OAAKC,WAAL,CAAiBtJ,QAAQ0H,OAAzB;;AAEA;;AAEA;AACA,MAAIsB,QAAJ,EAAc;AACZ,SAAKzK,GAAL,GAAWyK,QAAX;AACA,SAAKO,SAAL,GAAiBC,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKrD,KAAL,CAAWsD,WAAX,CAAuB,IAAvB,EAA6BV,QAA7B,CAAZ,CAAjB;AACA,SAAKW,OAAL,GAAe,KAAKvD,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoB,KAAKL,SAAzB,EAAoCM,KAApC,CAA0CpF,SAA1C,EAAqDhG,MAApE;AACD,GAJD,MAIO;AACL,SAAKF,GAAL,GAAW,KAAKgL,SAAL,GAAiB,CAA5B;AACA,SAAKI,OAAL,GAAe,CAAf;AACD;;AAED;AACA;AACA,OAAKnB,IAAL,GAAYvI,GAAGI,GAAf;AACA;AACA,OAAKoI,KAAL,GAAa,IAAb;AACA;AACA,OAAKzC,KAAL,GAAa,KAAKC,GAAL,GAAW,KAAK1H,GAA7B;AACA;AACA;AACA,OAAK8J,QAAL,GAAgB,KAAKC,MAAL,GAAc,KAAKwB,WAAL,EAA9B;;AAEA;AACA,OAAKC,aAAL,GAAqB,KAAKC,eAAL,GAAuB,IAA5C;AACA,OAAKC,YAAL,GAAoB,KAAKC,UAAL,GAAkB,KAAK3L,GAA3C;;AAEA;AACA;AACA;AACA,OAAK4L,OAAL,GAAe,KAAKC,cAAL,EAAf;AACA,OAAKC,WAAL,GAAmB,IAAnB;;AAEA;AACA,OAAK5M,MAAL,GAAc,KAAK6M,QAAL,GAAgBtK,QAAQ4G,UAAR,KAAuB,QAArD;;AAEA;AACA,OAAK2D,gBAAL,GAAwB,CAAC,CAAzB;;AAEA;AACA,OAAKC,UAAL,GAAkB,KAAKC,WAAL,GAAmB,KAArC;AACA;AACA,OAAKC,MAAL,GAAc,EAAd;;AAEA;AACA,MAAI,KAAKnM,GAAL,KAAa,CAAb,IAAkByB,QAAQkH,aAA1B,IAA2C,KAAKd,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoB,CAApB,MAA2B,IAA1E,EACE,KAAKe,eAAL,CAAqB,CAArB;AACH,CAnED;;AAqEA;AACA5B,OAAO7D,SAAP,CAAiB0F,SAAjB,GAA6B,SAASA,SAAT,CAAoBC,IAApB,EAA0B;AAAE,SAAO,KAAKjN,QAAL,CAAcgB,IAAd,CAAmBiM,IAAnB,CAAP;AAAiC,CAA1F;AACA9B,OAAO7D,SAAP,CAAiB4F,cAAjB,GAAkC,SAASA,cAAT,CAAyBD,IAAzB,EAA+B;AAAE,SAAO,KAAKrN,aAAL,CAAmBoB,IAAnB,CAAwBiM,IAAxB,CAAP;AAAsC,CAAzG;;AAEA9B,OAAO7D,SAAP,CAAiB6F,MAAjB,GAA0B,SAASA,MAAT,CAAiBnL,IAAjB,EAAuBoL,CAAvB,EAA0B;AAClD,OAAKpL,IAAL,IAAaoL,EAAE,KAAKpL,IAAL,CAAF,CAAb;AACD,CAFD;;AAIAmJ,OAAO7D,SAAP,CAAiBoE,WAAjB,GAA+B,SAASA,WAAT,CAAsB2B,aAAtB,EAAqC;AAChE,MAAIC,SAAS,IAAb;;AAEF,OAAK,IAAItL,IAAT,IAAiBqL,aAAjB,EAAgC;AAC9B,QAAIE,SAASzD,QAAQ9H,IAAR,CAAb;AACA,QAAI,CAACuL,MAAL,EAAa,MAAM,IAAIC,KAAJ,CAAU,aAAaxL,IAAb,GAAoB,aAA9B,CAAN;AACbuL,WAAOD,MAAP,EAAeD,cAAcrL,IAAd,CAAf;AACD;AACF,CARD;;AAUAmJ,OAAO7D,SAAP,CAAiBmG,KAAjB,GAAyB,SAASA,KAAT,GAAkB;AACzC,MAAIC,OAAO,KAAKtL,OAAL,CAAauH,OAAb,IAAwB,KAAKgE,SAAL,EAAnC;AACA,OAAKC,SAAL;AACA,SAAO,KAAKC,aAAL,CAAmBH,IAAnB,CAAP;AACD,CAJD;;AAMA,IAAII,KAAK3C,OAAO7D,SAAhB;;AAEA;;AAEA;;AAEAwG,GAAGC,WAAH,GAAiB,UAASC,IAAT,EAAe;AAC9B,SAAO,KAAK5L,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiCiF,KAAKpD,IAAL,KAAc,qBAA/C,IACLoD,KAAKC,UAAL,CAAgBrD,IAAhB,KAAyB,SADpB,IAELoD,KAAKC,UAAL,CAAgBC,GAAhB,CAAoBlC,KAApB,CAA0B,CAA1B,EAA6B,CAAC,CAA9B,MAAqC,YAFvC;AAGD,CAJD;;AAMA;AACA;;AAEA8B,GAAGK,GAAH,GAAS,UAASvD,IAAT,EAAe;AACtB,MAAI,KAAKA,IAAL,KAAcA,IAAlB,EAAwB;AACtB,SAAKwD,IAAL;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACL,WAAO,KAAP;AACD;AACF,CAPD;;AASA;;AAEAN,GAAGO,YAAH,GAAkB,UAASrM,IAAT,EAAe;AAC/B,SAAO,KAAK4I,IAAL,KAAcvI,GAAGL,IAAjB,IAAyB,KAAK6I,KAAL,KAAe7I,IAA/C;AACD,CAFD;;AAIA;;AAEA8L,GAAGQ,aAAH,GAAmB,UAAStM,IAAT,EAAe;AAChC,SAAO,KAAK6I,KAAL,KAAe7I,IAAf,IAAuB,KAAKmM,GAAL,CAAS9L,GAAGL,IAAZ,CAA9B;AACD,CAFD;;AAIA;;AAEA8L,GAAGS,gBAAH,GAAsB,UAASvM,IAAT,EAAe;AACnC,MAAI,CAAC,KAAKsM,aAAL,CAAmBtM,IAAnB,CAAL,EAA+B,KAAKwM,UAAL;AAChC,CAFD;;AAIA;;AAEAV,GAAGW,kBAAH,GAAwB,YAAW;AACjC,SAAO,KAAK7D,IAAL,KAAcvI,GAAGI,GAAjB,IACL,KAAKmI,IAAL,KAAcvI,GAAGQ,MADZ,IAELgE,UAAU7F,IAAV,CAAe,KAAKwH,KAAL,CAAWwD,KAAX,CAAiB,KAAKM,UAAtB,EAAkC,KAAKlE,KAAvC,CAAf,CAFF;AAGD,CAJD;;AAMA0F,GAAGY,eAAH,GAAqB,YAAW;AAC9B,MAAI,KAAKD,kBAAL,EAAJ,EAA+B;AAC7B,QAAI,KAAKrM,OAAL,CAAa6G,mBAAjB,EACE,KAAK7G,OAAL,CAAa6G,mBAAb,CAAiC,KAAKqD,UAAtC,EAAkD,KAAKH,aAAvD;AACF,WAAO,IAAP;AACD;AACF,CAND;;AAQA;AACA;;AAEA2B,GAAGa,SAAH,GAAe,YAAW;AACxB,MAAI,CAAC,KAAKR,GAAL,CAAS9L,GAAGY,IAAZ,CAAD,IAAsB,CAAC,KAAKyL,eAAL,EAA3B,EAAmD,KAAKF,UAAL;AACpD,CAFD;;AAIAV,GAAGc,kBAAH,GAAwB,UAASC,OAAT,EAAkB;AACxC,MAAI,KAAKjE,IAAL,IAAaiE,OAAjB,EAA0B;AACxB,QAAI,KAAKzM,OAAL,CAAa8G,eAAjB,EACE,KAAK9G,OAAL,CAAa8G,eAAb,CAA6B,KAAKmD,YAAlC,EAAgD,KAAKD,eAArD;AACF,SAAKgC,IAAL;AACA,WAAO,IAAP;AACD;AACF,CAPD;;AASA;AACA;;AAEAN,GAAGgB,MAAH,GAAY,UAASlE,IAAT,EAAe;AACzB,OAAKuD,GAAL,CAASvD,IAAT,KAAkB,KAAK4D,UAAL,EAAlB;AACD,CAFD;;AAIA;;AAEAV,GAAGU,UAAH,GAAgB,UAAS7N,GAAT,EAAc;AAC5B,OAAKoO,KAAL,CAAWpO,OAAO,IAAP,GAAcA,GAAd,GAAoB,KAAKyH,KAApC,EAA2C,kBAA3C;AACD,CAFD;;AAIA,IAAI4G,sBAAsB,SAASA,mBAAT,GAA+B;AACvD,OAAKC,eAAL,GAAuB,CAAvB;AACA,OAAKC,aAAL,GAAqB,CAArB;AACD,CAHD;;AAKApB,GAAGqB,kBAAH,GAAwB,UAASC,sBAAT,EAAiCC,QAAjC,EAA2C;AACjE,MAAIC,WAAWF,0BAA0BA,uBAAuBF,aAAhE;AACA,MAAI,CAACG,QAAL,EAAe,OAAO,CAAC,CAACC,QAAT;AACf,MAAIA,QAAJ,EAAc,KAAKP,KAAL,CAAWO,QAAX,EAAqB,+CAArB;AACf,CAJD;;AAMAxB,GAAGyB,qBAAH,GAA2B,UAASH,sBAAT,EAAiCC,QAAjC,EAA2C;AACpE,MAAI1O,MAAMyO,0BAA0BA,uBAAuBH,eAA3D;AACA,MAAI,CAACI,QAAL,EAAe,OAAO,CAAC,CAAC1O,GAAT;AACf,MAAIA,GAAJ,EAAS,KAAKoO,KAAL,CAAWpO,GAAX,EAAgB,yEAAhB;AACV,CAJD;;AAMA,IAAI6O,OAAOrE,OAAO7D,SAAlB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEAkI,KAAK3B,aAAL,GAAqB,UAASH,IAAT,EAAe;AAClC,MAAIJ,SAAS,IAAb;;AAEA,MAAImC,QAAQ,IAAZ;AACA,MAAI,CAAC/B,KAAKgC,IAAV,EAAgBhC,KAAKgC,IAAL,GAAY,EAAZ;AAChB,SAAO,KAAK9E,IAAL,KAAcvI,GAAGI,GAAxB,EAA6B;AAC3B,QAAIuL,OAAOV,OAAOqC,cAAP,CAAsB,IAAtB,EAA4B,IAA5B,CAAX;AACAjC,SAAKgC,IAAL,CAAUtF,IAAV,CAAe4D,IAAf;AACA,QAAIyB,KAAJ,EAAW;AACT,UAAInC,OAAOS,WAAP,CAAmBC,IAAnB,CAAJ,EAA8BV,OAAOsC,SAAP,CAAiB,IAAjB;AAC9BH,cAAQ,KAAR;AACD;AACF;AACD,OAAKrB,IAAL;AACA,MAAI,KAAKhM,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC2E,SAAK1E,UAAL,GAAkB,KAAK5G,OAAL,CAAa4G,UAA/B;AACD;AACD,SAAO,KAAK6G,UAAL,CAAgBnC,IAAhB,EAAsB,SAAtB,CAAP;AACD,CAlBD;;AAoBA,IAAIoC,YAAY,EAACC,MAAM,MAAP,EAAhB;AACA,IAAIC,cAAc,EAACD,MAAM,QAAP,EAAlB;AACAP,KAAKS,KAAL,GAAa,YAAW;AACtB,MAAI,KAAKrF,IAAL,KAAcvI,GAAGL,IAAjB,IAAyB,KAAKI,OAAL,CAAa2G,WAAb,GAA2B,CAApD,IAAyD,KAAK8B,KAAL,IAAc,KAA3E,EAAkF,OAAO,KAAP;AAClF3D,iBAAewB,SAAf,GAA2B,KAAK/H,GAAhC;AACA,MAAIuP,OAAOhJ,eAAe0B,IAAf,CAAoB,KAAKJ,KAAzB,CAAX;AACA,MAAI4F,OAAO,KAAKzN,GAAL,GAAWuP,KAAK,CAAL,EAAQrP,MAA9B;AAAA,MAAsCsP,SAAS,KAAK3H,KAAL,CAAW4H,UAAX,CAAsBhC,IAAtB,CAA/C;AACA,MAAI+B,WAAW,EAAX,IAAiBA,UAAU,GAA/B,EAAoC,OAAO,IAAP,CALd,CAK0B;AAChD,MAAIrP,kBAAkBqP,MAAlB,EAA0B,IAA1B,CAAJ,EAAqC;AACnC,SAAK,IAAIxP,MAAMyN,OAAO,CAAtB,EAAyBjN,iBAAiB,KAAKqH,KAAL,CAAW4H,UAAX,CAAsBzP,GAAtB,CAAjB,EAA6C,IAA7C,CAAzB,EAA6E,EAAEA,GAA/E,EAAoF,CAAE;AACtF,QAAI0P,QAAQ,KAAK7H,KAAL,CAAWwD,KAAX,CAAiBoC,IAAjB,EAAuBzN,GAAvB,CAAZ;AACA,QAAI,CAAC,KAAKqM,SAAL,CAAeqD,KAAf,CAAL,EAA4B,OAAO,IAAP;AAC7B;AACD,SAAO,KAAP;AACD,CAZD;;AAcA;AACA;AACA;AACA;AACA;AACA;;AAEAb,KAAKG,cAAL,GAAsB,UAASW,WAAT,EAAsBC,QAAtB,EAAgC;AACpD,MAAIC,YAAY,KAAK5F,IAArB;AAAA,MAA2B8C,OAAO,KAAKC,SAAL,EAAlC;AAAA,MAAoDoC,IAApD;;AAEA,MAAI,KAAKE,KAAL,EAAJ,EAAkB;AAChBO,gBAAYnO,GAAGqD,IAAf;AACAqK,WAAO,KAAP;AACD;;AAED;AACA;AACA;;AAEA,UAAQS,SAAR;AACA,SAAKnO,GAAGqC,MAAR,CAAgB,KAAKrC,GAAGwC,SAAR;AAAmB,aAAO,KAAK4L,2BAAL,CAAiC/C,IAAjC,EAAuC8C,UAAUjP,OAAjD,CAAP;AACnC,SAAKc,GAAGyC,SAAR;AAAmB,aAAO,KAAK4L,sBAAL,CAA4BhD,IAA5B,CAAP;AACnB,SAAKrL,GAAG2C,GAAR;AAAa,aAAO,KAAK2L,gBAAL,CAAsBjD,IAAtB,CAAP;AACb,SAAKrL,GAAG8C,IAAR;AAAc,aAAO,KAAKyL,iBAAL,CAAuBlD,IAAvB,CAAP;AACd,SAAKrL,GAAG+C,SAAR;AACE,UAAI,CAACkL,WAAD,IAAgB,KAAKlO,OAAL,CAAa2G,WAAb,IAA4B,CAAhD,EAAmD,KAAKyF,UAAL;AACnD,aAAO,KAAKqC,sBAAL,CAA4BnD,IAA5B,CAAP;AACF,SAAKrL,GAAG4D,MAAR;AACE,UAAI,CAACqK,WAAL,EAAkB,KAAK9B,UAAL;AAClB,aAAO,KAAKsC,UAAL,CAAgBpD,IAAhB,EAAsB,IAAtB,CAAP;AACF,SAAKrL,GAAGgD,GAAR;AAAa,aAAO,KAAK0L,gBAAL,CAAsBrD,IAAtB,CAAP;AACb,SAAKrL,GAAGiD,OAAR;AAAiB,aAAO,KAAK0L,oBAAL,CAA0BtD,IAA1B,CAAP;AACjB,SAAKrL,GAAGkD,OAAR;AAAiB,aAAO,KAAK0L,oBAAL,CAA0BvD,IAA1B,CAAP;AACjB,SAAKrL,GAAGmD,MAAR;AAAgB,aAAO,KAAK0L,mBAAL,CAAyBxD,IAAzB,CAAP;AAChB,SAAKrL,GAAGoD,IAAR;AAAc,aAAO,KAAK0L,iBAAL,CAAuBzD,IAAvB,CAAP;AACd,SAAKrL,GAAGsD,MAAR,CAAgB,KAAKtD,GAAGqD,IAAR;AACdqK,aAAOA,QAAQ,KAAKlF,KAApB;AACA,UAAI,CAACyF,WAAD,IAAgBP,QAAQ,KAA5B,EAAmC,KAAKvB,UAAL;AACnC,aAAO,KAAK4C,iBAAL,CAAuB1D,IAAvB,EAA6BqC,IAA7B,CAAP;AACF,SAAK1N,GAAGuD,MAAR;AAAgB,aAAO,KAAKyL,mBAAL,CAAyB3D,IAAzB,CAAP;AAChB,SAAKrL,GAAGwD,KAAR;AAAe,aAAO,KAAKyL,kBAAL,CAAwB5D,IAAxB,CAAP;AACf,SAAKrL,GAAGO,MAAR;AAAgB,aAAO,KAAK2O,UAAL,EAAP;AAChB,SAAKlP,GAAGY,IAAR;AAAc,aAAO,KAAKuO,mBAAL,CAAyB9D,IAAzB,CAAP;AACd,SAAKrL,GAAG8D,OAAR;AACA,SAAK9D,GAAG+D,OAAR;AACE,UAAI,CAAC,KAAKhE,OAAL,CAAaiH,2BAAlB,EAA+C;AAC7C,YAAI,CAACkH,QAAL,EACE,KAAKxB,KAAL,CAAW,KAAK3G,KAAhB,EAAuB,wDAAvB;AACF,YAAI,CAAC,KAAKsE,QAAV,EACE,KAAKqC,KAAL,CAAW,KAAK3G,KAAhB,EAAuB,iEAAvB;AACH;AACD,aAAOoI,cAAcnO,GAAG+D,OAAjB,GAA2B,KAAKqL,WAAL,CAAiB/D,IAAjB,CAA3B,GAAoD,KAAKgE,WAAL,CAAiBhE,IAAjB,CAA3D;;AAEA;AACA;AACA;AACA;AACA;AACF;AACE,UAAIiE,YAAY,KAAK9G,KAArB;AAAA,UAA4B+G,OAAO,KAAKC,eAAL,EAAnC;AACA,UAAIrB,cAAcnO,GAAGL,IAAjB,IAAyB4P,KAAKhH,IAAL,KAAc,YAAvC,IAAuD,KAAKuD,GAAL,CAAS9L,GAAGa,KAAZ,CAA3D,EACE,OAAO,KAAK4O,qBAAL,CAA2BpE,IAA3B,EAAiCiE,SAAjC,EAA4CC,IAA5C,CAAP,CADF,KAEK,OAAO,KAAKG,wBAAL,CAA8BrE,IAA9B,EAAoCkE,IAApC,CAAP;AA3CP;AA6CD,CAzDD;;AA2DApC,KAAKiB,2BAAL,GAAmC,UAAS/C,IAAT,EAAenM,OAAf,EAAwB;AACzD,MAAI+L,SAAS,IAAb;;AAEA,MAAI0E,UAAUzQ,WAAW,OAAzB;AACA,OAAK6M,IAAL;AACA,MAAI,KAAKD,GAAL,CAAS9L,GAAGY,IAAZ,KAAqB,KAAKyL,eAAL,EAAzB,EAAiDhB,KAAKrM,KAAL,GAAa,IAAb,CAAjD,KACK,IAAI,KAAKuJ,IAAL,KAAcvI,GAAGL,IAArB,EAA2B,KAAKwM,UAAL,GAA3B,KACA;AACHd,SAAKrM,KAAL,GAAa,KAAK4Q,UAAL,EAAb;AACA,SAAKtD,SAAL;AACD;;AAED;AACA;AACA,OAAK,IAAI/N,IAAI,CAAb,EAAgBA,IAAI,KAAKkM,MAAL,CAAYjM,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;AAC3C,QAAIsR,MAAM5E,OAAOR,MAAP,CAAclM,CAAd,CAAV;AACA,QAAI8M,KAAKrM,KAAL,IAAc,IAAd,IAAsB6Q,IAAIlQ,IAAJ,KAAa0L,KAAKrM,KAAL,CAAWW,IAAlD,EAAwD;AACtD,UAAIkQ,IAAInC,IAAJ,IAAY,IAAZ,KAAqBiC,WAAWE,IAAInC,IAAJ,KAAa,MAA7C,CAAJ,EAA0D;AAC1D,UAAIrC,KAAKrM,KAAL,IAAc2Q,OAAlB,EAA2B;AAC5B;AACF;AACD,MAAIpR,MAAM,KAAKkM,MAAL,CAAYjM,MAAtB,EAA8B,KAAKkO,KAAL,CAAWrB,KAAKtF,KAAhB,EAAuB,iBAAiB7G,OAAxC;AAC9B,SAAO,KAAKsO,UAAL,CAAgBnC,IAAhB,EAAsBsE,UAAU,gBAAV,GAA6B,mBAAnD,CAAP;AACD,CAvBD;;AAyBAxC,KAAKkB,sBAAL,GAA8B,UAAShD,IAAT,EAAe;AAC3C,OAAKU,IAAL;AACA,OAAKO,SAAL;AACA,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,mBAAtB,CAAP;AACD,CAJD;;AAMA8B,KAAKmB,gBAAL,GAAwB,UAASjD,IAAT,EAAe;AACrC,OAAKU,IAAL;AACA,OAAKtB,MAAL,CAAY1C,IAAZ,CAAiB0F,SAAjB;AACApC,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,KAApB,CAAZ;AACA,OAAK7C,MAAL,CAAYqF,GAAZ;AACA,OAAKrD,MAAL,CAAYzM,GAAGuD,MAAf;AACA8H,OAAK1M,IAAL,GAAY,KAAKoR,oBAAL,EAAZ;AACA,MAAI,KAAKhQ,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EACE,KAAKoF,GAAL,CAAS9L,GAAGY,IAAZ,EADF,KAGE,KAAK0L,SAAL;AACF,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,kBAAtB,CAAP;AACD,CAZD;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA8B,KAAKoB,iBAAL,GAAyB,UAASlD,IAAT,EAAe;AACtC,OAAKU,IAAL;AACA,OAAKtB,MAAL,CAAY1C,IAAZ,CAAiB0F,SAAjB;AACA,OAAKhB,MAAL,CAAYzM,GAAGS,MAAf;AACA,MAAI,KAAK8H,IAAL,KAAcvI,GAAGY,IAArB,EAA2B,OAAO,KAAKoP,QAAL,CAAc3E,IAAd,EAAoB,IAApB,CAAP;AAC3B,MAAIuC,QAAQ,KAAKA,KAAL,EAAZ;AACA,MAAI,KAAKrF,IAAL,KAAcvI,GAAGqD,IAAjB,IAAyB,KAAKkF,IAAL,KAAcvI,GAAGsD,MAA1C,IAAoDsK,KAAxD,EAA+D;AAC7D,QAAIqC,SAAS,KAAK3E,SAAL,EAAb;AAAA,QAA+BoC,OAAOE,QAAQ,KAAR,GAAgB,KAAKpF,KAA3D;AACA,SAAKuD,IAAL;AACA,SAAKmE,QAAL,CAAcD,MAAd,EAAsB,IAAtB,EAA4BvC,IAA5B;AACA,SAAKF,UAAL,CAAgByC,MAAhB,EAAwB,qBAAxB;AACA,QAAI,CAAC,KAAK1H,IAAL,KAAcvI,GAAGmE,GAAjB,IAAyB,KAAKpE,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,KAAKsF,YAAL,CAAkB,IAAlB,CAA3D,KAAwFiE,OAAOE,YAAP,CAAoB3R,MAApB,KAA+B,CAAvH,IACA,EAAEkP,SAAS,KAAT,IAAkBuC,OAAOE,YAAP,CAAoB,CAApB,EAAuBC,IAA3C,CADJ,EAEE,OAAO,KAAKC,UAAL,CAAgBhF,IAAhB,EAAsB4E,MAAtB,CAAP;AACF,WAAO,KAAKD,QAAL,CAAc3E,IAAd,EAAoB4E,MAApB,CAAP;AACD;AACD,MAAIlD,yBAAyB,IAAIJ,mBAAJ,EAA7B;AACA,MAAIyD,OAAO,KAAKZ,eAAL,CAAqB,IAArB,EAA2BzC,sBAA3B,CAAX;AACA,MAAI,KAAKxE,IAAL,KAAcvI,GAAGmE,GAAjB,IAAyB,KAAKpE,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,KAAKsF,YAAL,CAAkB,IAAlB,CAA9D,EAAwF;AACtF,SAAKc,kBAAL,CAAwBC,sBAAxB,EAAgD,IAAhD;AACA,SAAKuD,YAAL,CAAkBF,IAAlB;AACA,SAAKG,SAAL,CAAeH,IAAf;AACA,WAAO,KAAKC,UAAL,CAAgBhF,IAAhB,EAAsB+E,IAAtB,CAAP;AACD,GALD,MAKO;AACL,SAAKlD,qBAAL,CAA2BH,sBAA3B,EAAmD,IAAnD;AACD;AACD,SAAO,KAAKiD,QAAL,CAAc3E,IAAd,EAAoB+E,IAApB,CAAP;AACD,CA3BD;;AA6BAjD,KAAKqB,sBAAL,GAA8B,UAASnD,IAAT,EAAe;AAC3C,OAAKU,IAAL;AACA,SAAO,KAAKyE,aAAL,CAAmBnF,IAAnB,EAAyB,IAAzB,CAAP;AACD,CAHD;;AAKA8B,KAAKuB,gBAAL,GAAwB,UAASrD,IAAT,EAAe;AACrC,OAAKU,IAAL;AACAV,OAAK1M,IAAL,GAAY,KAAKoR,oBAAL,EAAZ;AACA1E,OAAKoF,UAAL,GAAkB,KAAKnD,cAAL,CAAoB,KAApB,CAAlB;AACAjC,OAAKqF,SAAL,GAAiB,KAAK5E,GAAL,CAAS9L,GAAG4C,KAAZ,IAAqB,KAAK0K,cAAL,CAAoB,KAApB,CAArB,GAAkD,IAAnE;AACA,SAAO,KAAKE,UAAL,CAAgBnC,IAAhB,EAAsB,aAAtB,CAAP;AACD,CAND;;AAQA8B,KAAKwB,oBAAL,GAA4B,UAAStD,IAAT,EAAe;AACzC,MAAI,CAAC,KAAKd,UAAN,IAAoB,CAAC,KAAKxK,OAAL,CAAagH,0BAAtC,EACE,KAAK2F,KAAL,CAAW,KAAK3G,KAAhB,EAAuB,8BAAvB;AACF,OAAKgG,IAAL;;AAEA;AACA;AACA;;AAEA,MAAI,KAAKD,GAAL,CAAS9L,GAAGY,IAAZ,KAAqB,KAAKyL,eAAL,EAAzB,EAAiDhB,KAAKsF,QAAL,GAAgB,IAAhB,CAAjD,KACK;AAAEtF,SAAKsF,QAAL,GAAgB,KAAKnB,eAAL,EAAhB,CAAwC,KAAKlD,SAAL;AAAkB;AACjE,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,iBAAtB,CAAP;AACD,CAZD;;AAcA8B,KAAKyB,oBAAL,GAA4B,UAASvD,IAAT,EAAe;AACzC,MAAIJ,SAAS,IAAb;;AAEA,OAAKc,IAAL;AACAV,OAAKuF,YAAL,GAAoB,KAAKb,oBAAL,EAApB;AACA1E,OAAKwF,KAAL,GAAa,EAAb;AACA,OAAKpE,MAAL,CAAYzM,GAAGO,MAAf;AACA,OAAKkK,MAAL,CAAY1C,IAAZ,CAAiB4F,WAAjB;;AAEA;AACA;AACA;;AAEA,OAAK,IAAIvH,GAAJ,EAAS0K,aAAa,KAA3B,EAAkC,KAAKvI,IAAL,IAAavI,GAAGQ,MAAlD,GAA2D;AACzD,QAAIyK,OAAO1C,IAAP,KAAgBvI,GAAGsC,KAAnB,IAA4B2I,OAAO1C,IAAP,KAAgBvI,GAAG0C,QAAnD,EAA6D;AAC3D,UAAIqO,SAAS9F,OAAO1C,IAAP,KAAgBvI,GAAGsC,KAAhC;AACA,UAAI8D,GAAJ,EAAS6E,OAAOuC,UAAP,CAAkBpH,GAAlB,EAAuB,YAAvB;AACTiF,WAAKwF,KAAL,CAAW9I,IAAX,CAAgB3B,MAAM6E,OAAOK,SAAP,EAAtB;AACAlF,UAAIqK,UAAJ,GAAiB,EAAjB;AACAxF,aAAOc,IAAP;AACA,UAAIgF,MAAJ,EAAY;AACV3K,YAAIzH,IAAJ,GAAWsM,OAAOuE,eAAP,EAAX;AACD,OAFD,MAEO;AACL,YAAIsB,UAAJ,EAAgB7F,OAAO+F,gBAAP,CAAwB/F,OAAOjB,YAA/B,EAA6C,0BAA7C;AAChB8G,qBAAa,IAAb;AACA1K,YAAIzH,IAAJ,GAAW,IAAX;AACD;AACDsM,aAAOwB,MAAP,CAAczM,GAAGa,KAAjB;AACD,KAdD,MAcO;AACL,UAAI,CAACuF,GAAL,EAAU6E,OAAOkB,UAAP;AACV/F,UAAIqK,UAAJ,CAAe1I,IAAf,CAAoBkD,OAAOqC,cAAP,CAAsB,IAAtB,CAApB;AACD;AACF;AACD,MAAIlH,GAAJ,EAAS,KAAKoH,UAAL,CAAgBpH,GAAhB,EAAqB,YAArB;AACT,OAAK2F,IAAL,GAlCyC,CAkC7B;AACZ,OAAKtB,MAAL,CAAYqF,GAAZ;AACA,SAAO,KAAKtC,UAAL,CAAgBnC,IAAhB,EAAsB,iBAAtB,CAAP;AACD,CArCD;;AAuCA8B,KAAK0B,mBAAL,GAA2B,UAASxD,IAAT,EAAe;AACxC,OAAKU,IAAL;AACA,MAAIvH,UAAU7F,IAAV,CAAe,KAAKwH,KAAL,CAAWwD,KAAX,CAAiB,KAAKM,UAAtB,EAAkC,KAAKlE,KAAvC,CAAf,CAAJ,EACE,KAAK2G,KAAL,CAAW,KAAKzC,UAAhB,EAA4B,6BAA5B;AACFoB,OAAKsF,QAAL,GAAgB,KAAKnB,eAAL,EAAhB;AACA,OAAKlD,SAAL;AACA,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,gBAAtB,CAAP;AACD,CAPD;;AASA;;AAEA,IAAI4F,QAAQ,EAAZ;;AAEA9D,KAAK2B,iBAAL,GAAyB,UAASzD,IAAT,EAAe;AACtC,OAAKU,IAAL;AACAV,OAAKnD,KAAL,GAAa,KAAKgH,UAAL,EAAb;AACA7D,OAAK6F,OAAL,GAAe,IAAf;AACA,MAAI,KAAK3I,IAAL,KAAcvI,GAAGuC,MAArB,EAA6B;AAC3B,QAAI4O,SAAS,KAAK7F,SAAL,EAAb;AACA,SAAKS,IAAL;AACA,SAAKU,MAAL,CAAYzM,GAAGS,MAAf;AACA0Q,WAAOC,KAAP,GAAe,KAAKC,gBAAL,EAAf;AACA,SAAKd,SAAL,CAAeY,OAAOC,KAAtB,EAA6B,IAA7B;AACA,SAAK3E,MAAL,CAAYzM,GAAGU,MAAf;AACAyQ,WAAO9D,IAAP,GAAc,KAAK6B,UAAL,EAAd;AACA7D,SAAK6F,OAAL,GAAe,KAAK1D,UAAL,CAAgB2D,MAAhB,EAAwB,aAAxB,CAAf;AACD;AACD9F,OAAKiG,SAAL,GAAiB,KAAKxF,GAAL,CAAS9L,GAAG6C,QAAZ,IAAwB,KAAKqM,UAAL,EAAxB,GAA4C,IAA7D;AACA,MAAI,CAAC7D,KAAK6F,OAAN,IAAiB,CAAC7F,KAAKiG,SAA3B,EACE,KAAK5E,KAAL,CAAWrB,KAAKtF,KAAhB,EAAuB,iCAAvB;AACF,SAAO,KAAKyH,UAAL,CAAgBnC,IAAhB,EAAsB,cAAtB,CAAP;AACD,CAlBD;;AAoBA8B,KAAK4B,iBAAL,GAAyB,UAAS1D,IAAT,EAAeqC,IAAf,EAAqB;AAC5C,OAAK3B,IAAL;AACA,OAAKmE,QAAL,CAAc7E,IAAd,EAAoB,KAApB,EAA2BqC,IAA3B;AACA,OAAKpB,SAAL;AACA,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,qBAAtB,CAAP;AACD,CALD;;AAOA8B,KAAK6B,mBAAL,GAA2B,UAAS3D,IAAT,EAAe;AACxC,OAAKU,IAAL;AACAV,OAAK1M,IAAL,GAAY,KAAKoR,oBAAL,EAAZ;AACA,OAAKtF,MAAL,CAAY1C,IAAZ,CAAiB0F,SAAjB;AACApC,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,KAApB,CAAZ;AACA,OAAK7C,MAAL,CAAYqF,GAAZ;AACA,SAAO,KAAKtC,UAAL,CAAgBnC,IAAhB,EAAsB,gBAAtB,CAAP;AACD,CAPD;;AASA8B,KAAK8B,kBAAL,GAA0B,UAAS5D,IAAT,EAAe;AACvC,MAAI,KAAK7N,MAAT,EAAiB,KAAKkP,KAAL,CAAW,KAAK3G,KAAhB,EAAuB,uBAAvB;AACjB,OAAKgG,IAAL;AACAV,OAAKkG,MAAL,GAAc,KAAKxB,oBAAL,EAAd;AACA1E,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,KAApB,CAAZ;AACA,SAAO,KAAKE,UAAL,CAAgBnC,IAAhB,EAAsB,eAAtB,CAAP;AACD,CAND;;AAQA8B,KAAKgC,mBAAL,GAA2B,UAAS9D,IAAT,EAAe;AACxC,OAAKU,IAAL;AACA,SAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB,gBAAtB,CAAP;AACD,CAHD;;AAKA8B,KAAKsC,qBAAL,GAA6B,UAASpE,IAAT,EAAeiE,SAAf,EAA0BC,IAA1B,EAAgC;AAC3D,MAAItE,SAAS,IAAb;;AAEA,OAAK,IAAI1M,IAAI,CAAb,EAAgBA,IAAI,KAAKkM,MAAL,CAAYjM,MAAhC,EAAwC,EAAED,CAA1C;AACE,QAAI0M,OAAOR,MAAP,CAAclM,CAAd,EAAiBoB,IAAjB,KAA0B2P,SAA9B,EAAyCrE,OAAOyB,KAAP,CAAa6C,KAAKxJ,KAAlB,EAAyB,YAAYuJ,SAAZ,GAAwB,uBAAjD;AAD3C,GAEA,IAAI5B,OAAO,KAAKnF,IAAL,CAAUlJ,MAAV,GAAmB,MAAnB,GAA4B,KAAKkJ,IAAL,KAAcvI,GAAGkD,OAAjB,GAA2B,QAA3B,GAAsC,IAA7E;AACA,OAAK,IAAIsO,MAAM,KAAK/G,MAAL,CAAYjM,MAAZ,GAAqB,CAApC,EAAuCgT,OAAO,CAA9C,EAAiDA,KAAjD,EAAwD;AACtD,QAAIxS,QAAQiM,OAAOR,MAAP,CAAc+G,GAAd,CAAZ;AACA,QAAIxS,MAAMyS,cAAN,IAAwBpG,KAAKtF,KAAjC,EAAwC;AACtC/G,YAAMyS,cAAN,GAAuBxG,OAAOlF,KAA9B;AACA/G,YAAM0O,IAAN,GAAaA,IAAb;AACD,KAHD,MAGO;AACR;AACD,OAAKjD,MAAL,CAAY1C,IAAZ,CAAiB,EAACpI,MAAM2P,SAAP,EAAkB5B,MAAMA,IAAxB,EAA8B+D,gBAAgB,KAAK1L,KAAnD,EAAjB;AACAsF,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,IAApB,CAAZ;AACA,OAAK7C,MAAL,CAAYqF,GAAZ;AACAzE,OAAKrM,KAAL,GAAauQ,IAAb;AACA,SAAO,KAAK/B,UAAL,CAAgBnC,IAAhB,EAAsB,kBAAtB,CAAP;AACD,CAlBD;;AAoBA8B,KAAKuC,wBAAL,GAAgC,UAASrE,IAAT,EAAekE,IAAf,EAAqB;AACnDlE,OAAKO,UAAL,GAAkB2D,IAAlB;AACA,OAAKjD,SAAL;AACA,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,qBAAtB,CAAP;AACD,CAJD;;AAMA;AACA;AACA;;AAEA8B,KAAK+B,UAAL,GAAkB,UAASwC,WAAT,EAAsB;AACtC,MAAIzG,SAAS,IAAb;;AAEA,MAAII,OAAO,KAAKC,SAAL,EAAX;AAAA,MAA6B8B,QAAQ,IAArC;AAAA,MAA2CuE,SAA3C;AACAtG,OAAKgC,IAAL,GAAY,EAAZ;AACA,OAAKZ,MAAL,CAAYzM,GAAGO,MAAf;AACA,SAAO,CAAC,KAAKuL,GAAL,CAAS9L,GAAGQ,MAAZ,CAAR,EAA6B;AAC3B,QAAImL,OAAOV,OAAOqC,cAAP,CAAsB,IAAtB,CAAX;AACAjC,SAAKgC,IAAL,CAAUtF,IAAV,CAAe4D,IAAf;AACA,QAAIyB,SAASsE,WAAT,IAAwBzG,OAAOS,WAAP,CAAmBC,IAAnB,CAA5B,EAAsD;AACpDgG,kBAAY1G,OAAOzN,MAAnB;AACAyN,aAAOsC,SAAP,CAAiBtC,OAAOzN,MAAP,GAAgB,IAAjC;AACD;AACD4P,YAAQ,KAAR;AACD;AACD,MAAIuE,cAAc,KAAlB,EAAyB,KAAKpE,SAAL,CAAe,KAAf;AACzB,SAAO,KAAKC,UAAL,CAAgBnC,IAAhB,EAAsB,gBAAtB,CAAP;AACD,CAjBD;;AAmBA;AACA;AACA;;AAEA8B,KAAK6C,QAAL,GAAgB,UAAS3E,IAAT,EAAe+E,IAAf,EAAqB;AACnC/E,OAAK+E,IAAL,GAAYA,IAAZ;AACA,OAAK3D,MAAL,CAAYzM,GAAGY,IAAf;AACAyK,OAAK1M,IAAL,GAAY,KAAK4J,IAAL,KAAcvI,GAAGY,IAAjB,GAAwB,IAAxB,GAA+B,KAAK4O,eAAL,EAA3C;AACA,OAAK/C,MAAL,CAAYzM,GAAGY,IAAf;AACAyK,OAAKuG,MAAL,GAAc,KAAKrJ,IAAL,KAAcvI,GAAGU,MAAjB,GAA0B,IAA1B,GAAiC,KAAK8O,eAAL,EAA/C;AACA,OAAK/C,MAAL,CAAYzM,GAAGU,MAAf;AACA2K,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,KAApB,CAAZ;AACA,OAAK7C,MAAL,CAAYqF,GAAZ;AACA,SAAO,KAAKtC,UAAL,CAAgBnC,IAAhB,EAAsB,cAAtB,CAAP;AACD,CAVD;;AAYA;AACA;;AAEA8B,KAAKkD,UAAL,GAAkB,UAAShF,IAAT,EAAe+E,IAAf,EAAqB;AACrC,MAAI7H,OAAO,KAAKA,IAAL,KAAcvI,GAAGmE,GAAjB,GAAuB,gBAAvB,GAA0C,gBAArD;AACA,OAAK4H,IAAL;AACAV,OAAKwG,IAAL,GAAYzB,IAAZ;AACA/E,OAAKyG,KAAL,GAAa,KAAKtC,eAAL,EAAb;AACA,OAAK/C,MAAL,CAAYzM,GAAGU,MAAf;AACA2K,OAAKgC,IAAL,GAAY,KAAKC,cAAL,CAAoB,KAApB,CAAZ;AACA,OAAK7C,MAAL,CAAYqF,GAAZ;AACA,SAAO,KAAKtC,UAAL,CAAgBnC,IAAhB,EAAsB9C,IAAtB,CAAP;AACD,CATD;;AAWA;;AAEA4E,KAAK+C,QAAL,GAAgB,UAAS7E,IAAT,EAAe0G,KAAf,EAAsBrE,IAAtB,EAA4B;AAC1C,MAAIzC,SAAS,IAAb;;AAEAI,OAAK8E,YAAL,GAAoB,EAApB;AACA9E,OAAKqC,IAAL,GAAYA,IAAZ;AACA,WAAS;AACP,QAAIsE,OAAO/G,OAAOK,SAAP,EAAX;AACAL,WAAOgH,UAAP,CAAkBD,IAAlB;AACA,QAAI/G,OAAOa,GAAP,CAAW9L,GAAGqB,EAAd,CAAJ,EAAuB;AACrB2Q,WAAK5B,IAAL,GAAYnF,OAAOiH,gBAAP,CAAwBH,KAAxB,CAAZ;AACD,KAFD,MAEO,IAAIrE,SAAS,OAAT,IAAoB,EAAEzC,OAAO1C,IAAP,KAAgBvI,GAAGmE,GAAnB,IAA2B8G,OAAOlL,OAAP,CAAe2G,WAAf,IAA8B,CAA9B,IAAmCuE,OAAOe,YAAP,CAAoB,IAApB,CAAhE,CAAxB,EAAqH;AAC1Hf,aAAOkB,UAAP;AACD,KAFM,MAEA,IAAI6F,KAAKG,EAAL,CAAQ5J,IAAR,IAAgB,YAAhB,IAAgC,EAAEwJ,UAAU9G,OAAO1C,IAAP,KAAgBvI,GAAGmE,GAAnB,IAA0B8G,OAAOe,YAAP,CAAoB,IAApB,CAApC,CAAF,CAApC,EAAuG;AAC5Gf,aAAOyB,KAAP,CAAazB,OAAOhB,UAApB,EAAgC,0DAAhC;AACD,KAFM,MAEA;AACL+H,WAAK5B,IAAL,GAAY,IAAZ;AACD;AACD/E,SAAK8E,YAAL,CAAkBpI,IAAlB,CAAuBkD,OAAOuC,UAAP,CAAkBwE,IAAlB,EAAwB,oBAAxB,CAAvB;AACA,QAAI,CAAC/G,OAAOa,GAAP,CAAW9L,GAAGW,KAAd,CAAL,EAA2B;AAC5B;AACD,SAAO0K,IAAP;AACD,CArBD;;AAuBA8B,KAAK8E,UAAL,GAAkB,UAASD,IAAT,EAAe;AAC/BA,OAAKG,EAAL,GAAU,KAAKd,gBAAL,EAAV;AACA,OAAKd,SAAL,CAAeyB,KAAKG,EAApB,EAAwB,IAAxB;AACD,CAHD;;AAKA;AACA;;AAEAhF,KAAKqD,aAAL,GAAqB,UAASnF,IAAT,EAAe+G,WAAf,EAA4BC,mBAA5B,EAAiD;AACpE,OAAKC,YAAL,CAAkBjH,IAAlB;AACA,MAAI,KAAKtL,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EACE2E,KAAKkH,SAAL,GAAiB,KAAKzG,GAAL,CAAS9L,GAAGkC,IAAZ,CAAjB;AACF,MAAIsQ,WAAW,KAAKhI,WAApB;AACA,OAAKA,WAAL,GAAmBa,KAAKkH,SAAxB;AACA,MAAIH,eAAe,KAAK7J,IAAL,KAAcvI,GAAGL,IAApC,EACE0L,KAAK8G,EAAL,GAAU,KAAKvC,UAAL,EAAV;AACF,OAAK6C,mBAAL,CAAyBpH,IAAzB;AACA,OAAKqH,iBAAL,CAAuBrH,IAAvB,EAA6BgH,mBAA7B;AACA,OAAK7H,WAAL,GAAmBgI,QAAnB;AACA,SAAO,KAAKhF,UAAL,CAAgBnC,IAAhB,EAAsB+G,cAAc,qBAAd,GAAsC,oBAA5D,CAAP;AACD,CAZD;;AAcAjF,KAAKsF,mBAAL,GAA2B,UAASpH,IAAT,EAAe;AACxC,OAAKoB,MAAL,CAAYzM,GAAGS,MAAf;AACA4K,OAAKsH,MAAL,GAAc,KAAKC,gBAAL,CAAsB5S,GAAGU,MAAzB,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,IAA/C,CAAd;AACD,CAHD;;AAKA;AACA;;AAEAyM,KAAKsB,UAAL,GAAkB,UAASpD,IAAT,EAAe+G,WAAf,EAA4B;AAC5C,MAAInH,SAAS,IAAb;;AAEA,OAAKc,IAAL;AACA,OAAK8G,YAAL,CAAkBxH,IAAlB,EAAwB+G,WAAxB;AACA,OAAKU,eAAL,CAAqBzH,IAArB;AACA,MAAI0H,YAAY,KAAKzH,SAAL,EAAhB;AACA,MAAI0H,iBAAiB,KAArB;AACAD,YAAU1F,IAAV,GAAiB,EAAjB;AACA,OAAKZ,MAAL,CAAYzM,GAAGO,MAAf;AACA,SAAO,CAAC,KAAKuL,GAAL,CAAS9L,GAAGQ,MAAZ,CAAR,EAA6B;AAC3B,QAAIyK,OAAOa,GAAP,CAAW9L,GAAGY,IAAd,CAAJ,EAAyB;AACzB,QAAIqS,SAAShI,OAAOK,SAAP,EAAb;AACA,QAAI4H,cAAcjI,OAAOa,GAAP,CAAW9L,GAAGkC,IAAd,CAAlB;AACA,QAAIiR,gBAAgBlI,OAAO1C,IAAP,KAAgBvI,GAAGL,IAAnB,IAA2BsL,OAAOzC,KAAP,KAAiB,QAAhE;AACAyC,WAAOmI,iBAAP,CAAyBH,MAAzB;AACAA,WAAOI,MAAP,GAAgBF,iBAAiBlI,OAAO1C,IAAP,KAAgBvI,GAAGS,MAApD;AACA,QAAIwS,OAAOI,MAAX,EAAmB;AACjB,UAAIH,WAAJ,EAAiBjI,OAAOkB,UAAP;AACjB+G,oBAAcjI,OAAOa,GAAP,CAAW9L,GAAGkC,IAAd,CAAd;AACA+I,aAAOmI,iBAAP,CAAyBH,MAAzB;AACD;AACDA,WAAOvF,IAAP,GAAc,QAAd;AACA,QAAI4F,WAAW,KAAf;AACA,QAAI,CAACL,OAAOM,QAAZ,EAAsB;AACpB,UAAIC,MAAMP,OAAOO,GAAjB;AACA,UAAI,CAACN,WAAD,IAAgBM,IAAIjL,IAAJ,KAAa,YAA7B,IAA6C0C,OAAO1C,IAAP,KAAgBvI,GAAGS,MAAhE,KAA2E+S,IAAI7T,IAAJ,KAAa,KAAb,IAAsB6T,IAAI7T,IAAJ,KAAa,KAA9G,CAAJ,EAA0H;AACxH2T,mBAAW,IAAX;AACAL,eAAOvF,IAAP,GAAc8F,IAAI7T,IAAlB;AACA6T,cAAMvI,OAAOmI,iBAAP,CAAyBH,MAAzB,CAAN;AACD;AACD,UAAI,CAACA,OAAOI,MAAR,KAAmBG,IAAIjL,IAAJ,KAAa,YAAb,IAA6BiL,IAAI7T,IAAJ,KAAa,aAA1C,IACnB6T,IAAIjL,IAAJ,KAAa,SAAb,IAA0BiL,IAAIhL,KAAJ,KAAc,aADxC,CAAJ,EAC4D;AAC1D,YAAIwK,cAAJ,EAAoB/H,OAAOyB,KAAP,CAAa8G,IAAIzN,KAAjB,EAAwB,yCAAxB;AACpB,YAAIuN,QAAJ,EAAcrI,OAAOyB,KAAP,CAAa8G,IAAIzN,KAAjB,EAAwB,yCAAxB;AACd,YAAImN,WAAJ,EAAiBjI,OAAOyB,KAAP,CAAa8G,IAAIzN,KAAjB,EAAwB,kCAAxB;AACjBkN,eAAOvF,IAAP,GAAc,aAAd;AACAsF,yBAAiB,IAAjB;AACD;AACF;AACD/H,WAAOwI,gBAAP,CAAwBV,SAAxB,EAAmCE,MAAnC,EAA2CC,WAA3C;AACA,QAAII,QAAJ,EAAc;AACZ,UAAII,aAAaT,OAAOvF,IAAP,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAA7C;AACA,UAAIuF,OAAOzK,KAAP,CAAamK,MAAb,CAAoBnU,MAApB,KAA+BkV,UAAnC,EAA+C;AAC7C,YAAI3N,QAAQkN,OAAOzK,KAAP,CAAazC,KAAzB;AACA,YAAIkN,OAAOvF,IAAP,KAAgB,KAApB,EACEzC,OAAO+F,gBAAP,CAAwBjL,KAAxB,EAA+B,8BAA/B,EADF,KAGEkF,OAAO+F,gBAAP,CAAwBjL,KAAxB,EAA+B,sCAA/B;AACH;AACD,UAAIkN,OAAOvF,IAAP,KAAgB,KAAhB,IAAyBuF,OAAOzK,KAAP,CAAamK,MAAb,CAAoB,CAApB,EAAuBpK,IAAvB,KAAgC,aAA7D,EACE0C,OAAOyB,KAAP,CAAauG,OAAOzK,KAAP,CAAamK,MAAb,CAAoB,CAApB,EAAuB5M,KAApC,EAA2C,+BAA3C;AACH;AACF;AACDsF,OAAKgC,IAAL,GAAY,KAAKG,UAAL,CAAgBuF,SAAhB,EAA2B,WAA3B,CAAZ;AACA,SAAO,KAAKvF,UAAL,CAAgBnC,IAAhB,EAAsB+G,cAAc,kBAAd,GAAmC,iBAAzD,CAAP;AACD,CAxDD;;AA0DAjF,KAAKsG,gBAAL,GAAwB,UAASV,SAAT,EAAoBE,MAApB,EAA4BC,WAA5B,EAAyC;AAC/DD,SAAOzK,KAAP,GAAe,KAAKmL,WAAL,CAAiBT,WAAjB,CAAf;AACAH,YAAU1F,IAAV,CAAetF,IAAf,CAAoB,KAAKyF,UAAL,CAAgByF,MAAhB,EAAwB,kBAAxB,CAApB;AACD,CAHD;;AAKA9F,KAAK0F,YAAL,GAAoB,UAASxH,IAAT,EAAe+G,WAAf,EAA4B;AAC9C/G,OAAK8G,EAAL,GAAU,KAAK5J,IAAL,KAAcvI,GAAGL,IAAjB,GAAwB,KAAKiQ,UAAL,EAAxB,GAA4CwC,cAAc,KAAKjG,UAAL,EAAd,GAAkC,IAAxF;AACD,CAFD;;AAIAgB,KAAK2F,eAAL,GAAuB,UAASzH,IAAT,EAAe;AACpCA,OAAKuI,UAAL,GAAkB,KAAK9H,GAAL,CAAS9L,GAAG6D,QAAZ,IAAwB,KAAKgQ,mBAAL,EAAxB,GAAqD,IAAvE;AACD,CAFD;;AAIA;;AAEA1G,KAAKkC,WAAL,GAAmB,UAAShE,IAAT,EAAe;AAChC,MAAIJ,SAAS,IAAb;;AAEA,OAAKc,IAAL;AACA;AACA,MAAI,KAAKD,GAAL,CAAS9L,GAAGkC,IAAZ,CAAJ,EAAuB;AACrB,SAAKgK,gBAAL,CAAsB,MAAtB;AACAb,SAAK3G,MAAL,GAAc,KAAK6D,IAAL,KAAcvI,GAAGG,MAAjB,GAA0B,KAAK2T,aAAL,EAA1B,GAAiD,KAAK3H,UAAL,EAA/D;AACA,SAAKG,SAAL;AACA,WAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,sBAAtB,CAAP;AACD;AACD,MAAI,KAAKS,GAAL,CAAS9L,GAAG0C,QAAZ,CAAJ,EAA2B;AAAE;AAC3B,QAAIqR,SAAS,KAAKxL,IAAL,IAAavI,GAAGS,MAA7B;AACA,QAAI8O,OAAO,KAAK2C,gBAAL,EAAX;AACA,QAAI8B,YAAY,IAAhB;AACA,QAAI,CAACD,MAAD,KAAYxE,KAAKhH,IAAL,IAAa,oBAAb,IACAgH,KAAKhH,IAAL,IAAa,iBADzB,CAAJ,EACiD;AAC/CyL,kBAAY,KAAZ;AACA,UAAIzE,KAAK4C,EAAT,EAAa;AACX5C,aAAKhH,IAAL,GAAYgH,KAAKhH,IAAL,IAAa,oBAAb,GACR,qBADQ,GAER,kBAFJ;AAGD;AACF;AACD8C,SAAK4C,WAAL,GAAmBsB,IAAnB;AACA,QAAIyE,SAAJ,EAAe,KAAK1H,SAAL;AACf,WAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,0BAAtB,CAAP;AACD;AACD;AACA,MAAI,KAAK4I,0BAAL,EAAJ,EAAuC;AACrC5I,SAAK4C,WAAL,GAAmB,KAAKX,cAAL,CAAoB,IAApB,CAAnB;AACAjC,SAAK6I,UAAL,GAAkB,EAAlB;AACA7I,SAAK3G,MAAL,GAAc,IAAd;AACD,GAJD,MAIO;AAAE;AACP2G,SAAK4C,WAAL,GAAmB,IAAnB;AACA5C,SAAK6I,UAAL,GAAkB,KAAKC,qBAAL,EAAlB;AACA,QAAI,KAAKlI,aAAL,CAAmB,MAAnB,CAAJ,EAAgC;AAC9BZ,WAAK3G,MAAL,GAAc,KAAK6D,IAAL,KAAcvI,GAAGG,MAAjB,GAA0B,KAAK2T,aAAL,EAA1B,GAAiD,KAAK3H,UAAL,EAA/D;AACD,KAFD,MAEO;AACL;AACA,WAAK,IAAI5N,IAAI,CAAb,EAAgBA,IAAI8M,KAAK6I,UAAL,CAAgB1V,MAApC,EAA4CD,GAA5C,EAAiD;AAC/C,YAAI0M,OAAOtN,QAAP,CAAgBgB,IAAhB,CAAqB0M,KAAK6I,UAAL,CAAgB3V,CAAhB,EAAmB6V,KAAnB,CAAyBzU,IAA9C,KAAuDsL,OAAO1N,aAAP,CAAqBoB,IAArB,CAA0B0M,KAAK6I,UAAL,CAAgB3V,CAAhB,EAAmB6V,KAAnB,CAAyBzU,IAAnD,CAA3D,EAAqH;AACnHsL,iBAAOkB,UAAP,CAAkBd,KAAK6I,UAAL,CAAgB3V,CAAhB,EAAmB6V,KAAnB,CAAyBrO,KAA3C;AACD;AACF;;AAEDsF,WAAK3G,MAAL,GAAc,IAAd;AACD;AACD,SAAK4H,SAAL;AACD;AACD,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,wBAAtB,CAAP;AACD,CAnDD;;AAqDA8B,KAAK8G,0BAAL,GAAkC,YAAW;AAC3C,SAAO,KAAK1L,IAAL,CAAUrJ,OAAV,IAAqB,KAAK0O,KAAL,EAA5B;AACD,CAFD;;AAIA;;AAEAT,KAAKgH,qBAAL,GAA6B,YAAW;AACtC,MAAIlJ,SAAS,IAAb;;AAEA,MAAIoJ,QAAQ,EAAZ;AAAA,MAAgBjH,QAAQ,IAAxB;AACA;AACA,OAAKX,MAAL,CAAYzM,GAAGO,MAAf;AACA,SAAO,CAAC,KAAKuL,GAAL,CAAS9L,GAAGQ,MAAZ,CAAR,EAA6B;AAC3B,QAAI,CAAC4M,KAAL,EAAY;AACVnC,aAAOwB,MAAP,CAAczM,GAAGW,KAAjB;AACA,UAAIsK,OAAOsB,kBAAP,CAA0BvM,GAAGQ,MAA7B,CAAJ,EAA0C;AAC3C,KAHD,MAGO4M,QAAQ,KAAR;;AAEP,QAAI/B,OAAOJ,OAAOK,SAAP,EAAX;AACAD,SAAK+I,KAAL,GAAanJ,OAAO2E,UAAP,CAAkB3E,OAAO1C,IAAP,KAAgBvI,GAAG0C,QAArC,CAAb;AACA2I,SAAKiJ,QAAL,GAAgBrJ,OAAOgB,aAAP,CAAqB,IAArB,IAA6BhB,OAAO2E,UAAP,CAAkB,IAAlB,CAA7B,GAAuDvE,KAAK+I,KAA5E;AACAC,UAAMtM,IAAN,CAAWkD,OAAOuC,UAAP,CAAkBnC,IAAlB,EAAwB,iBAAxB,CAAX;AACD;AACD,SAAOgJ,KAAP;AACD,CAlBD;;AAoBA;;AAEAlH,KAAKiC,WAAL,GAAmB,UAAS/D,IAAT,EAAe;AAChC,OAAKU,IAAL;AACA;AACA,MAAI,KAAKxD,IAAL,KAAcvI,GAAGG,MAArB,EAA6B;AAC3BkL,SAAK6I,UAAL,GAAkBjD,KAAlB;AACA5F,SAAK3G,MAAL,GAAc,KAAKoP,aAAL,EAAd;AACD,GAHD,MAGO;AACLzI,SAAK6I,UAAL,GAAkB,KAAKK,qBAAL,EAAlB;AACA,SAAKrI,gBAAL,CAAsB,MAAtB;AACAb,SAAK3G,MAAL,GAAc,KAAK6D,IAAL,KAAcvI,GAAGG,MAAjB,GAA0B,KAAK2T,aAAL,EAA1B,GAAiD,KAAK3H,UAAL,EAA/D;AACD;AACD,OAAKG,SAAL;AACA,SAAO,KAAKkB,UAAL,CAAgBnC,IAAhB,EAAsB,mBAAtB,CAAP;AACD,CAbD;;AAeA;;AAEA8B,KAAKoH,qBAAL,GAA6B,YAAW;AACtC,MAAItJ,SAAS,IAAb;;AAEA,MAAIoJ,QAAQ,EAAZ;AAAA,MAAgBjH,QAAQ,IAAxB;AACA,MAAI,KAAK7E,IAAL,KAAcvI,GAAGL,IAArB,EAA2B;AACzB;AACA,QAAI0L,OAAO,KAAKC,SAAL,EAAX;AACAD,SAAK+I,KAAL,GAAa,KAAKxE,UAAL,EAAb;AACA,SAAKW,SAAL,CAAelF,KAAK+I,KAApB,EAA2B,IAA3B;AACAC,UAAMtM,IAAN,CAAW,KAAKyF,UAAL,CAAgBnC,IAAhB,EAAsB,wBAAtB,CAAX;AACA,QAAI,CAAC,KAAKS,GAAL,CAAS9L,GAAGW,KAAZ,CAAL,EAAyB,OAAO0T,KAAP;AAC1B;AACD,MAAI,KAAK9L,IAAL,KAAcvI,GAAGkC,IAArB,EAA2B;AACzB,QAAIsS,SAAS,KAAKlJ,SAAL,EAAb;AACA,SAAKS,IAAL;AACA,SAAKG,gBAAL,CAAsB,IAAtB;AACAsI,WAAOJ,KAAP,GAAe,KAAKxE,UAAL,EAAf;AACA,SAAKW,SAAL,CAAeiE,OAAOJ,KAAtB,EAA6B,IAA7B;AACAC,UAAMtM,IAAN,CAAW,KAAKyF,UAAL,CAAgBgH,MAAhB,EAAwB,0BAAxB,CAAX;AACA,WAAOH,KAAP;AACD;AACD,OAAK5H,MAAL,CAAYzM,GAAGO,MAAf;AACA,SAAO,CAAC,KAAKuL,GAAL,CAAS9L,GAAGQ,MAAZ,CAAR,EAA6B;AAC3B,QAAI,CAAC4M,KAAL,EAAY;AACVnC,aAAOwB,MAAP,CAAczM,GAAGW,KAAjB;AACA,UAAIsK,OAAOsB,kBAAP,CAA0BvM,GAAGQ,MAA7B,CAAJ,EAA0C;AAC3C,KAHD,MAGO4M,QAAQ,KAAR;;AAEP,QAAIqH,SAASxJ,OAAOK,SAAP,EAAb;AACAmJ,WAAOC,QAAP,GAAkBzJ,OAAO2E,UAAP,CAAkB,IAAlB,CAAlB;AACA,QAAI3E,OAAOgB,aAAP,CAAqB,IAArB,CAAJ,EAAgC;AAC9BwI,aAAOL,KAAP,GAAenJ,OAAO2E,UAAP,EAAf;AACD,KAFD,MAEO;AACL6E,aAAOL,KAAP,GAAeK,OAAOC,QAAtB;AACA,UAAIzJ,OAAON,SAAP,CAAiB8J,OAAOL,KAAP,CAAazU,IAA9B,CAAJ,EAAyCsL,OAAOkB,UAAP,CAAkBsI,OAAOL,KAAP,CAAarO,KAA/B;AACzC,UAAIkF,OAAO/B,mBAAP,CAA2BvK,IAA3B,CAAgC8V,OAAOL,KAAP,CAAazU,IAA7C,CAAJ,EAAwDsL,OAAOyB,KAAP,CAAa+H,OAAOL,KAAP,CAAarO,KAA1B,EAAiC,kBAAkB0O,OAAOL,KAAP,CAAazU,IAA/B,GAAsC,eAAvE;AACzD;AACDsL,WAAOsF,SAAP,CAAiBkE,OAAOL,KAAxB,EAA+B,IAA/B;AACAC,UAAMtM,IAAN,CAAWkD,OAAOuC,UAAP,CAAkBiH,MAAlB,EAA0B,iBAA1B,CAAX;AACD;AACD,SAAOJ,KAAP;AACD,CAzCD;;AA2CA,IAAIM,OAAO7L,OAAO7D,SAAlB;;AAEA;AACA;;AAEA0P,KAAKrE,YAAL,GAAoB,UAASjF,IAAT,EAAeuJ,SAAf,EAA0B;AAC5C,MAAI3J,SAAS,IAAb;;AAEA,MAAI,KAAKlL,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC2E,IAArC,EAA2C;AACzC,YAAQA,KAAK9C,IAAb;AACA,WAAK,YAAL;AACA,WAAK,eAAL;AACA,WAAK,cAAL;AACE;;AAEF,WAAK,kBAAL;AACE8C,aAAK9C,IAAL,GAAY,eAAZ;AACA,aAAK,IAAIhK,IAAI,CAAb,EAAgBA,IAAI8M,KAAKwJ,UAAL,CAAgBrW,MAApC,EAA4CD,GAA5C,EAAiD;AAC/C,cAAIuW,OAAOzJ,KAAKwJ,UAAL,CAAgBtW,CAAhB,CAAX;AACA,cAAIuW,KAAKpH,IAAL,KAAc,MAAlB,EAA0BzC,OAAOyB,KAAP,CAAaoI,KAAKtB,GAAL,CAASzN,KAAtB,EAA6B,+CAA7B;AAC1BkF,iBAAOqF,YAAP,CAAoBwE,KAAKtM,KAAzB,EAAgCoM,SAAhC;AACD;AACD;;AAEF,WAAK,iBAAL;AACEvJ,aAAK9C,IAAL,GAAY,cAAZ;AACA,aAAKwM,gBAAL,CAAsB1J,KAAK2J,QAA3B,EAAqCJ,SAArC;AACA;;AAEF,WAAK,sBAAL;AACE,YAAIvJ,KAAK4J,QAAL,KAAkB,GAAtB,EAA2B;AACzB5J,eAAK9C,IAAL,GAAY,mBAAZ;AACA,iBAAO8C,KAAK4J,QAAZ;AACA;AACD,SAJD,MAIO;AACL,eAAKvI,KAAL,CAAWrB,KAAKwG,IAAL,CAAU7L,GAArB,EAA0B,6DAA1B;AACA;AACD;;AAEH,WAAK,mBAAL;AACE,YAAIqF,KAAKyG,KAAL,CAAWvJ,IAAX,KAAoB,iBAAxB,EACE,KAAKmE,KAAL,CAAWrB,KAAKyG,KAAL,CAAW/L,KAAtB,EAA6B,4CAA7B;AACF;;AAEF,WAAK,yBAAL;AACEsF,aAAKO,UAAL,GAAkB,KAAK0E,YAAL,CAAkBjF,KAAKO,UAAvB,EAAmCgJ,SAAnC,CAAlB;AACA;;AAEF,WAAK,kBAAL;AACE,YAAI,CAACA,SAAL,EAAgB;;AAElB;AACE,aAAKlI,KAAL,CAAWrB,KAAKtF,KAAhB,EAAuB,qBAAvB;AA3CF;AA6CD;AACD,SAAOsF,IAAP;AACD,CAnDD;;AAqDA;;AAEAsJ,KAAKI,gBAAL,GAAwB,UAASG,QAAT,EAAmBN,SAAnB,EAA8B;AACpD,MAAI3J,SAAS,IAAb;;AAEA,MAAIjF,MAAMkP,SAAS1W,MAAnB;AACA,MAAIwH,GAAJ,EAAS;AACP,QAAImP,OAAOD,SAASlP,MAAM,CAAf,CAAX;AACA,QAAImP,QAAQA,KAAK5M,IAAL,IAAa,aAAzB,EAAwC;AACtC,QAAEvC,GAAF;AACD,KAFD,MAEO,IAAImP,QAAQA,KAAK5M,IAAL,IAAa,eAAzB,EAA0C;AAC/C4M,WAAK5M,IAAL,GAAY,aAAZ;AACA,UAAI6M,MAAMD,KAAKxE,QAAf;AACA,WAAKL,YAAL,CAAkB8E,GAAlB,EAAuBR,SAAvB;AACA,UAAIQ,IAAI7M,IAAJ,KAAa,YAAb,IAA6B6M,IAAI7M,IAAJ,KAAa,kBAA1C,IAAgE6M,IAAI7M,IAAJ,KAAa,cAAjF,EACE,KAAK4D,UAAL,CAAgBiJ,IAAIrP,KAApB;AACF,QAAEC,GAAF;AACD;;AAED,QAAI4O,aAAaO,IAAb,IAAqBA,KAAK5M,IAAL,KAAc,aAAnC,IAAoD4M,KAAKxE,QAAL,CAAcpI,IAAd,KAAuB,YAA/E,EACE,KAAK4D,UAAL,CAAgBgJ,KAAKxE,QAAL,CAAc5K,KAA9B;AACH;AACD,OAAK,IAAIxH,IAAI,CAAb,EAAgBA,IAAIyH,GAApB,EAAyBzH,GAAzB,EAA8B;AAC5B,QAAI8W,MAAMH,SAAS3W,CAAT,CAAV;AACA,QAAI8W,GAAJ,EAASpK,OAAOqF,YAAP,CAAoB+E,GAApB,EAAyBT,SAAzB;AACV;AACD,SAAOM,QAAP;AACD,CAzBD;;AA2BA;;AAEAP,KAAKW,WAAL,GAAmB,UAASvI,sBAAT,EAAiC;AAClD,MAAI1B,OAAO,KAAKC,SAAL,EAAX;AACA,OAAKS,IAAL;AACAV,OAAKsF,QAAL,GAAgB,KAAKuB,gBAAL,CAAsB,KAAtB,EAA6BnF,sBAA7B,CAAhB;AACA,SAAO,KAAKS,UAAL,CAAgBnC,IAAhB,EAAsB,eAAtB,CAAP;AACD,CALD;;AAOAsJ,KAAKY,SAAL,GAAiB,UAASC,aAAT,EAAwB;AACvC,MAAInK,OAAO,KAAKC,SAAL,EAAX;AACA,OAAKS,IAAL;;AAEA;AACA,MAAIyJ,aAAJ,EAAmBnK,KAAKsF,QAAL,GAAgB,KAAKpI,IAAL,KAAcvI,GAAGL,IAAjB,GAAwB,KAAKiQ,UAAL,EAAxB,GAA4C,KAAKzD,UAAL,EAA5D,CAAnB,KACKd,KAAKsF,QAAL,GAAgB,KAAKpI,IAAL,KAAcvI,GAAGL,IAAjB,IAAyB,KAAK4I,IAAL,KAAcvI,GAAGK,QAA1C,GAAqD,KAAKgR,gBAAL,EAArD,GAA+E,KAAKlF,UAAL,EAA/F;;AAEL,SAAO,KAAKqB,UAAL,CAAgBnC,IAAhB,EAAsB,aAAtB,CAAP;AACD,CATD;;AAWA;;AAEAsJ,KAAKtD,gBAAL,GAAwB,YAAW;AACjC,MAAI,KAAKtR,OAAL,CAAa2G,WAAb,GAA2B,CAA/B,EAAkC,OAAO,KAAKkJ,UAAL,EAAP;AAClC,UAAQ,KAAKrH,IAAb;AACA,SAAKvI,GAAGL,IAAR;AACE,aAAO,KAAKiQ,UAAL,EAAP;;AAEF,SAAK5P,GAAGK,QAAR;AACE,UAAIgL,OAAO,KAAKC,SAAL,EAAX;AACA,WAAKS,IAAL;AACAV,WAAK2J,QAAL,GAAgB,KAAKpC,gBAAL,CAAsB5S,GAAGM,QAAzB,EAAmC,IAAnC,EAAyC,IAAzC,CAAhB;AACA,aAAO,KAAKkN,UAAL,CAAgBnC,IAAhB,EAAsB,cAAtB,CAAP;;AAEF,SAAKrL,GAAGO,MAAR;AACE,aAAO,KAAKkV,QAAL,CAAc,IAAd,CAAP;;AAEF;AACE,WAAKtJ,UAAL;AAdF;AAgBD,CAlBD;;AAoBAwI,KAAK/B,gBAAL,GAAwB,UAAS8C,KAAT,EAAgBC,UAAhB,EAA4BC,kBAA5B,EAAgDJ,aAAhD,EAA+D;AACrF,MAAIvK,SAAS,IAAb;;AAEA,MAAI4K,OAAO,EAAX;AAAA,MAAezI,QAAQ,IAAvB;AACA,SAAO,CAAC,KAAKtB,GAAL,CAAS4J,KAAT,CAAR,EAAyB;AACvB,QAAItI,KAAJ,EAAWA,QAAQ,KAAR,CAAX,KACKnC,OAAOwB,MAAP,CAAczM,GAAGW,KAAjB;AACL,QAAIgV,cAAc1K,OAAO1C,IAAP,KAAgBvI,GAAGW,KAArC,EAA4C;AAC1CkV,WAAK9N,IAAL,CAAU,IAAV;AACD,KAFD,MAEO,IAAI6N,sBAAsB3K,OAAOsB,kBAAP,CAA0BmJ,KAA1B,CAA1B,EAA4D;AACjE;AACD,KAFM,MAEA,IAAIzK,OAAO1C,IAAP,KAAgBvI,GAAGkB,QAAvB,EAAiC;AACtC,UAAI4U,OAAO7K,OAAOsK,SAAP,CAAiBC,aAAjB,CAAX;AACAvK,aAAO8K,oBAAP,CAA4BD,IAA5B;AACAD,WAAK9N,IAAL,CAAU+N,IAAV;AACA,UAAI7K,OAAO1C,IAAP,KAAgBvI,GAAGW,KAAvB,EAA8BsK,OAAOyB,KAAP,CAAazB,OAAOlF,KAApB,EAA2B,+CAA3B;AAC9BkF,aAAOwB,MAAP,CAAciJ,KAAd;AACA;AACD,KAPM,MAOA;AACL,UAAIM,OAAO/K,OAAOgL,iBAAP,CAAyBhL,OAAOlF,KAAhC,EAAuCkF,OAAO7C,QAA9C,CAAX;AACA6C,aAAO8K,oBAAP,CAA4BC,IAA5B;AACAH,WAAK9N,IAAL,CAAUiO,IAAV;AACD;AACF;AACD,SAAOH,IAAP;AACD,CAzBD;;AA2BAlB,KAAKoB,oBAAL,GAA4B,UAAS3E,KAAT,EAAgB;AAC1C,SAAOA,KAAP;AACD,CAFD;;AAIA;;AAEAuD,KAAKsB,iBAAL,GAAyB,UAASlN,QAAT,EAAmBX,QAAnB,EAA6ByJ,IAA7B,EAAmC;AAC1DA,SAAOA,QAAQ,KAAKR,gBAAL,EAAf;AACA,MAAI,KAAKtR,OAAL,CAAa2G,WAAb,GAA2B,CAA3B,IAAgC,CAAC,KAAKoF,GAAL,CAAS9L,GAAGqB,EAAZ,CAArC,EAAsD,OAAOwQ,IAAP;AACtD,MAAIxG,OAAO,KAAK6K,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAX;AACAiD,OAAKwG,IAAL,GAAYA,IAAZ;AACAxG,OAAKyG,KAAL,GAAa,KAAKI,gBAAL,EAAb;AACA,SAAO,KAAK1E,UAAL,CAAgBnC,IAAhB,EAAsB,mBAAtB,CAAP;AACD,CAPD;;AASA;AACA;;AAEAsJ,KAAKpE,SAAL,GAAiB,UAAShB,IAAT,EAAeqF,SAAf,EAA0BuB,YAA1B,EAAwC;AACvD,MAAIlL,SAAS,IAAb;;AAEA,UAAQsE,KAAKhH,IAAb;AACA,SAAK,YAAL;AACE,UAAI,KAAK/K,MAAL,IAAe,KAAK2L,uBAAL,CAA6BxK,IAA7B,CAAkC4Q,KAAK5P,IAAvC,CAAnB,EACE,KAAKqR,gBAAL,CAAsBzB,KAAKxJ,KAA3B,EAAkC,CAAC6O,YAAY,UAAZ,GAAyB,eAA1B,IAA6CrF,KAAK5P,IAAlD,GAAyD,iBAA3F;AACF,UAAIwW,YAAJ,EAAkB;AAChB,YAAI/Q,IAAI+Q,YAAJ,EAAkB5G,KAAK5P,IAAvB,CAAJ,EACE,KAAKqR,gBAAL,CAAsBzB,KAAKxJ,KAA3B,EAAkC,qBAAlC;AACFoQ,qBAAa5G,KAAK5P,IAAlB,IAA0B,IAA1B;AACD;AACD;;AAEF,SAAK,kBAAL;AACE,UAAIiV,SAAJ,EAAe,KAAK5D,gBAAL,CAAsBzB,KAAKxJ,KAA3B,EAAkC,CAAC6O,YAAY,SAAZ,GAAwB,cAAzB,IAA2C,oBAA7E;AACf;;AAEF,SAAK,eAAL;AACE,WAAK,IAAIrW,IAAI,CAAb,EAAgBA,IAAIgR,KAAKsF,UAAL,CAAgBrW,MAApC,EAA4CD,GAA5C;AACE0M,eAAOsF,SAAP,CAAiBhB,KAAKsF,UAAL,CAAgBtW,CAAhB,EAAmBiK,KAApC,EAA2CoM,SAA3C,EAAsDuB,YAAtD;AADF,OAEA;;AAEF,SAAK,cAAL;AACE,WAAK,IAAI3E,MAAM,CAAf,EAAkBA,MAAMjC,KAAKyF,QAAL,CAAcxW,MAAtC,EAA8CgT,KAA9C,EAAqD;AACnD,YAAIwE,OAAOzG,KAAKyF,QAAL,CAAcxD,GAAd,CAAX;AACA,YAAIwE,IAAJ,EAAU/K,OAAOsF,SAAP,CAAiByF,IAAjB,EAAuBpB,SAAvB,EAAkCuB,YAAlC;AACX;AACD;;AAEF,SAAK,mBAAL;AACE,WAAK5F,SAAL,CAAehB,KAAKsC,IAApB,EAA0B+C,SAA1B,EAAqCuB,YAArC;AACA;;AAEF,SAAK,aAAL;AACE,WAAK5F,SAAL,CAAehB,KAAKoB,QAApB,EAA8BiE,SAA9B,EAAyCuB,YAAzC;AACA;;AAEF,SAAK,yBAAL;AACE,WAAK5F,SAAL,CAAehB,KAAK3D,UAApB,EAAgCgJ,SAAhC,EAA2CuB,YAA3C;AACA;;AAEF;AACE,WAAKzJ,KAAL,CAAW6C,KAAKxJ,KAAhB,EAAuB,CAAC6O,YAAY,SAAZ,GAAwB,cAAzB,IAA2C,SAAlE;AAxCF;AA0CD,CA7CD;;AA+CA,IAAIwB,OAAOtN,OAAO7D,SAAlB;;AAEA;AACA;AACA;AACA;;AAEAmR,KAAKC,cAAL,GAAsB,UAASvB,IAAT,EAAewB,QAAf,EAAyB;AAC7C,MAAI,KAAKvW,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,KAAkCoO,KAAKvB,QAAL,IAAiBuB,KAAK7B,MAAtB,IAAgC6B,KAAKyB,SAAvE,CAAJ,EACE;AACF,MAAI/C,MAAMsB,KAAKtB,GAAf;AACA,MAAI7T,IAAJ;AACA,UAAQ6T,IAAIjL,IAAZ;AACA,SAAK,YAAL;AAAmB5I,aAAO6T,IAAI7T,IAAX,CAAiB;AACpC,SAAK,SAAL;AAAgBA,aAAOf,OAAO4U,IAAIhL,KAAX,CAAP,CAA0B;AAC1C;AAAS;AAHT;AAKA,MAAIkF,OAAOoH,KAAKpH,IAAhB;AACA,MAAI,KAAK3N,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC,QAAI/G,SAAS,WAAT,IAAwB+N,SAAS,MAArC,EAA6C;AAC3C,UAAI4I,SAASE,KAAb,EAAoB,KAAKxF,gBAAL,CAAsBwC,IAAIzN,KAA1B,EAAiC,oCAAjC;AACpBuQ,eAASE,KAAT,GAAiB,IAAjB;AACD;AACD;AACD;AACD7W,SAAO,MAAMA,IAAb;AACA,MAAI8W,QAAQH,SAAS3W,IAAT,CAAZ;AACA,MAAI8W,KAAJ,EAAW;AACT,QAAInD,WAAW5F,SAAS,MAAxB;AACA,QAAI,CAAC,KAAKlQ,MAAL,IAAe8V,QAAhB,KAA6BmD,MAAM/I,IAAN,CAA7B,IAA4C,EAAE4F,WAAWmD,MAAMrG,IAAnB,CAAhD,EACE,KAAKY,gBAAL,CAAsBwC,IAAIzN,KAA1B,EAAiC,0BAAjC;AACH,GAJD,MAIO;AACL0Q,YAAQH,SAAS3W,IAAT,IAAiB;AACvByQ,YAAM,KADiB;AAEvBsG,WAAK,KAFkB;AAGvBrY,WAAK;AAHkB,KAAzB;AAKD;AACDoY,QAAM/I,IAAN,IAAc,IAAd;AACD,CAhCD;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA0I,KAAK5G,eAAL,GAAuB,UAASmH,IAAT,EAAe5J,sBAAf,EAAuC;AAC5D,MAAI9B,SAAS,IAAb;;AAEA,MAAIlC,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACA,MAAImH,OAAO,KAAK2C,gBAAL,CAAsByE,IAAtB,EAA4B5J,sBAA5B,CAAX;AACA,MAAI,KAAKxE,IAAL,KAAcvI,GAAGW,KAArB,EAA4B;AAC1B,QAAI0K,OAAO,KAAK6K,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAX;AACAiD,SAAKuL,WAAL,GAAmB,CAACrH,IAAD,CAAnB;AACA,WAAO,KAAKzD,GAAL,CAAS9L,GAAGW,KAAZ,CAAP;AAA2B0K,WAAKuL,WAAL,CAAiB7O,IAAjB,CAAsBkD,OAAOiH,gBAAP,CAAwByE,IAAxB,EAA8B5J,sBAA9B,CAAtB;AAA3B,KACA,OAAO,KAAKS,UAAL,CAAgBnC,IAAhB,EAAsB,oBAAtB,CAAP;AACD;AACD,SAAOkE,IAAP;AACD,CAZD;;AAcA;AACA;;AAEA6G,KAAKlE,gBAAL,GAAwB,UAASyE,IAAT,EAAe5J,sBAAf,EAAuC8J,cAAvC,EAAuD;AAC7E,MAAI,KAAKrM,WAAL,IAAoB,KAAKwB,YAAL,CAAkB,OAAlB,CAAxB,EAAoD,OAAO,KAAK8K,UAAL,EAAP;;AAEpD,MAAIC,yBAAyB,KAA7B;AACA,MAAI,CAAChK,sBAAL,EAA6B;AAC3BA,6BAAyB,IAAIJ,mBAAJ,EAAzB;AACAoK,6BAAyB,IAAzB;AACD;AACD,MAAIhO,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACA,MAAI,KAAKG,IAAL,IAAavI,GAAGS,MAAhB,IAA0B,KAAK8H,IAAL,IAAavI,GAAGL,IAA9C,EACE,KAAK2K,gBAAL,GAAwB,KAAKvE,KAA7B;AACF,MAAI8L,OAAO,KAAKmF,qBAAL,CAA2BL,IAA3B,EAAiC5J,sBAAjC,CAAX;AACA,MAAI8J,cAAJ,EAAoBhF,OAAOgF,eAAe1R,IAAf,CAAoB,IAApB,EAA0B0M,IAA1B,EAAgC9I,QAAhC,EAA0CX,QAA1C,CAAP;AACpB,MAAI,KAAKG,IAAL,CAAUjJ,QAAd,EAAwB;AACtB,SAAKwN,kBAAL,CAAwBC,sBAAxB,EAAgD,IAAhD;AACA,QAAI,CAACgK,sBAAL,EAA6BpK,oBAAoBxH,IAApB,CAAyB4H,sBAAzB;AAC7B,QAAI1B,OAAO,KAAK6K,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAX;AACAiD,SAAK4J,QAAL,GAAgB,KAAKzM,KAArB;AACA6C,SAAKwG,IAAL,GAAY,KAAKtJ,IAAL,KAAcvI,GAAGqB,EAAjB,GAAsB,KAAKiP,YAAL,CAAkBuB,IAAlB,CAAtB,GAAgDA,IAA5D;AACA9E,2BAAuBH,eAAvB,GAAyC,CAAzC,CANsB,CAMqB;AAC3C,SAAK2D,SAAL,CAAesB,IAAf;AACA,SAAK9F,IAAL;AACAV,SAAKyG,KAAL,GAAa,KAAKI,gBAAL,CAAsByE,IAAtB,CAAb;AACA,WAAO,KAAKnJ,UAAL,CAAgBnC,IAAhB,EAAsB,sBAAtB,CAAP;AACD,GAXD,MAWO;AACL,QAAI0L,sBAAJ,EAA4B,KAAK7J,qBAAL,CAA2BH,sBAA3B,EAAmD,IAAnD;AAC7B;AACD,SAAO8E,IAAP;AACD,CA5BD;;AA8BA;;AAEAuE,KAAKY,qBAAL,GAA6B,UAASL,IAAT,EAAe5J,sBAAf,EAAuC;AAClE,MAAIhE,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACA,MAAImH,OAAO,KAAK0H,YAAL,CAAkBN,IAAlB,EAAwB5J,sBAAxB,CAAX;AACA,MAAI,KAAKG,qBAAL,CAA2BH,sBAA3B,CAAJ,EAAwD,OAAOwC,IAAP;AACxD,MAAI,KAAKzD,GAAL,CAAS9L,GAAGe,QAAZ,CAAJ,EAA2B;AACzB,QAAIsK,OAAO,KAAK6K,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAX;AACAiD,SAAK1M,IAAL,GAAY4Q,IAAZ;AACAlE,SAAKoF,UAAL,GAAkB,KAAKyB,gBAAL,EAAlB;AACA,SAAKzF,MAAL,CAAYzM,GAAGa,KAAf;AACAwK,SAAKqF,SAAL,GAAiB,KAAKwB,gBAAL,CAAsByE,IAAtB,CAAjB;AACA,WAAO,KAAKnJ,UAAL,CAAgBnC,IAAhB,EAAsB,uBAAtB,CAAP;AACD;AACD,SAAOkE,IAAP;AACD,CAbD;;AAeA;;AAEA6G,KAAKa,YAAL,GAAoB,UAASN,IAAT,EAAe5J,sBAAf,EAAuC;AACzD,MAAIhE,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACA,MAAImH,OAAO,KAAK2H,eAAL,CAAqBnK,sBAArB,EAA6C,KAA7C,CAAX;AACA,MAAI,KAAKG,qBAAL,CAA2BH,sBAA3B,CAAJ,EAAwD,OAAOwC,IAAP;AACxD,SAAO,KAAK4H,WAAL,CAAiB5H,IAAjB,EAAuBxG,QAAvB,EAAiCX,QAAjC,EAA2C,CAAC,CAA5C,EAA+CuO,IAA/C,CAAP;AACD,CALD;;AAOA;AACA;AACA;AACA;AACA;;AAEAP,KAAKe,WAAL,GAAmB,UAAStF,IAAT,EAAeuF,YAAf,EAA6BC,YAA7B,EAA2CC,OAA3C,EAAoDX,IAApD,EAA0D;AAC3E,MAAI/W,OAAO,KAAK2I,IAAL,CAAU9I,KAArB;AACA,MAAIG,QAAQ,IAAR,KAAiB,CAAC+W,IAAD,IAAS,KAAKpO,IAAL,KAAcvI,GAAGmE,GAA3C,CAAJ,EAAqD;AACnD,QAAIvE,OAAO0X,OAAX,EAAoB;AAClB,UAAIC,UAAU,KAAKhP,IAAL,KAAcvI,GAAGwB,SAAjB,IAA8B,KAAK+G,IAAL,KAAcvI,GAAGyB,UAA7D;AACA,UAAI+V,KAAK,KAAKhP,KAAd;AACA,WAAKuD,IAAL;AACA,UAAIhD,WAAW,KAAKhD,KAApB;AAAA,UAA2BqC,WAAW,KAAKA,QAA3C;AACA,UAAI0J,QAAQ,KAAKqF,WAAL,CAAiB,KAAKD,eAAL,CAAqB,IAArB,EAA2B,KAA3B,CAAjB,EAAoDnO,QAApD,EAA8DX,QAA9D,EAAwExI,IAAxE,EAA8E+W,IAA9E,CAAZ;AACA,UAAItL,OAAO,KAAKoM,WAAL,CAAiBL,YAAjB,EAA+BC,YAA/B,EAA6CxF,IAA7C,EAAmDC,KAAnD,EAA0D0F,EAA1D,EAA8DD,OAA9D,CAAX;AACA,aAAO,KAAKJ,WAAL,CAAiB9L,IAAjB,EAAuB+L,YAAvB,EAAqCC,YAArC,EAAmDC,OAAnD,EAA4DX,IAA5D,CAAP;AACD;AACF;AACD,SAAO9E,IAAP;AACD,CAdD;;AAgBAuE,KAAKqB,WAAL,GAAmB,UAAS1O,QAAT,EAAmBX,QAAnB,EAA6ByJ,IAA7B,EAAmCC,KAAnC,EAA0C0F,EAA1C,EAA8CD,OAA9C,EAAuD;AACxE,MAAIlM,OAAO,KAAK6K,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAX;AACAiD,OAAKwG,IAAL,GAAYA,IAAZ;AACAxG,OAAK4J,QAAL,GAAgBuC,EAAhB;AACAnM,OAAKyG,KAAL,GAAaA,KAAb;AACA,SAAO,KAAKtE,UAAL,CAAgBnC,IAAhB,EAAsBkM,UAAU,mBAAV,GAAgC,kBAAtD,CAAP;AACD,CAND;;AAQA;;AAEAnB,KAAKc,eAAL,GAAuB,UAASnK,sBAAT,EAAiC2K,QAAjC,EAA2C;AAChE,MAAIzM,SAAS,IAAb;;AAEA,MAAIlC,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AAAA,MAAqDmH,IAArD;AACA,MAAI,KAAKhH,IAAL,CAAUhJ,MAAd,EAAsB;AACpB,QAAI8L,OAAO,KAAKC,SAAL,EAAX;AAAA,QAA6BsG,SAAS,KAAKrJ,IAAL,KAAcvI,GAAGuB,MAAvD;AACA8J,SAAK4J,QAAL,GAAgB,KAAKzM,KAArB;AACA6C,SAAK9L,MAAL,GAAc,IAAd;AACA,SAAKwM,IAAL;AACAV,SAAKsF,QAAL,GAAgB,KAAKuG,eAAL,CAAqB,IAArB,EAA2B,IAA3B,CAAhB;AACA,SAAKhK,qBAAL,CAA2BH,sBAA3B,EAAmD,IAAnD;AACA,QAAI6E,MAAJ,EAAY,KAAKrB,SAAL,CAAelF,KAAKsF,QAApB,EAAZ,KACK,IAAI,KAAKnT,MAAL,IAAe6N,KAAK4J,QAAL,KAAkB,QAAjC,IACA5J,KAAKsF,QAAL,CAAcpI,IAAd,KAAuB,YAD3B,EAEH,KAAKyI,gBAAL,CAAsB3F,KAAKtF,KAA3B,EAAkC,wCAAlC,EAFG,KAGA2R,WAAW,IAAX;AACLnI,WAAO,KAAK/B,UAAL,CAAgBnC,IAAhB,EAAsBuG,SAAS,kBAAT,GAA8B,iBAApD,CAAP;AACD,GAbD,MAaO;AACLrC,WAAO,KAAKsE,mBAAL,CAAyB9G,sBAAzB,CAAP;AACA,QAAI,KAAKG,qBAAL,CAA2BH,sBAA3B,CAAJ,EAAwD,OAAOwC,IAAP;AACxD,WAAO,KAAKhH,IAAL,CAAU/I,OAAV,IAAqB,CAAC,KAAK4M,kBAAL,EAA7B,EAAwD;AACtD,UAAIoI,SAASvJ,OAAOiL,WAAP,CAAmBnN,QAAnB,EAA6BX,QAA7B,CAAb;AACAoM,aAAOS,QAAP,GAAkBhK,OAAOzC,KAAzB;AACAgM,aAAOjV,MAAP,GAAgB,KAAhB;AACAiV,aAAO7D,QAAP,GAAkBpB,IAAlB;AACAtE,aAAOsF,SAAP,CAAiBhB,IAAjB;AACAtE,aAAOc,IAAP;AACAwD,aAAOtE,OAAOuC,UAAP,CAAkBgH,MAAlB,EAA0B,kBAA1B,CAAP;AACD;AACF;;AAED,MAAI,CAACkD,QAAD,IAAa,KAAK5L,GAAL,CAAS9L,GAAGoC,QAAZ,CAAjB,EACE,OAAO,KAAKqV,WAAL,CAAiB1O,QAAjB,EAA2BX,QAA3B,EAAqCmH,IAArC,EAA2C,KAAK2H,eAAL,CAAqB,IAArB,EAA2B,KAA3B,CAA3C,EAA8E,IAA9E,EAAoF,KAApF,CAAP,CADF,KAGE,OAAO3H,IAAP;AACH,CAnCD;;AAqCA;;AAEA6G,KAAKvC,mBAAL,GAA2B,UAAS9G,sBAAT,EAAiC;AAC1D,MAAIhE,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACA,MAAImH,OAAO,KAAKuE,aAAL,CAAmB/G,sBAAnB,CAAX;AACA,MAAI4K,sBAAsBpI,KAAKhH,IAAL,KAAc,yBAAd,IAA2C,KAAKpC,KAAL,CAAWwD,KAAX,CAAiB,KAAKK,YAAtB,EAAoC,KAAKC,UAAzC,MAAyD,GAA9H;AACA,MAAI,KAAKiD,qBAAL,CAA2BH,sBAA3B,KAAsD4K,mBAA1D,EAA+E,OAAOpI,IAAP;AAC/E,SAAO,KAAKqI,eAAL,CAAqBrI,IAArB,EAA2BxG,QAA3B,EAAqCX,QAArC,CAAP;AACD,CAND;;AAQAgO,KAAKwB,eAAL,GAAuB,UAASC,IAAT,EAAe9O,QAAf,EAAyBX,QAAzB,EAAmC0P,OAAnC,EAA4C;AACjE,MAAI7M,SAAS,IAAb;;AAEA,WAAS;AACP,QAAIA,OAAOa,GAAP,CAAW9L,GAAGc,GAAd,CAAJ,EAAwB;AACtB,UAAIuK,OAAOJ,OAAOiL,WAAP,CAAmBnN,QAAnB,EAA6BX,QAA7B,CAAX;AACAiD,WAAKkG,MAAL,GAAcsG,IAAd;AACAxM,WAAK0M,QAAL,GAAgB9M,OAAO2E,UAAP,CAAkB,IAAlB,CAAhB;AACAvE,WAAKkI,QAAL,GAAgB,KAAhB;AACAsE,aAAO5M,OAAOuC,UAAP,CAAkBnC,IAAlB,EAAwB,kBAAxB,CAAP;AACD,KAND,MAMO,IAAIJ,OAAOa,GAAP,CAAW9L,GAAGK,QAAd,CAAJ,EAA6B;AAClC,UAAImU,SAASvJ,OAAOiL,WAAP,CAAmBnN,QAAnB,EAA6BX,QAA7B,CAAb;AACAoM,aAAOjD,MAAP,GAAgBsG,IAAhB;AACArD,aAAOuD,QAAP,GAAkB9M,OAAOuE,eAAP,EAAlB;AACAgF,aAAOjB,QAAP,GAAkB,IAAlB;AACAtI,aAAOwB,MAAP,CAAczM,GAAGM,QAAjB;AACAuX,aAAO5M,OAAOuC,UAAP,CAAkBgH,MAAlB,EAA0B,kBAA1B,CAAP;AACD,KAPM,MAOA,IAAI,CAACsD,OAAD,IAAY7M,OAAOa,GAAP,CAAW9L,GAAGS,MAAd,CAAhB,EAAuC;AAC5C,UAAIgU,SAASxJ,OAAOiL,WAAP,CAAmBnN,QAAnB,EAA6BX,QAA7B,CAAb;AACAqM,aAAOuD,MAAP,GAAgBH,IAAhB;AACApD,aAAOwD,SAAP,GAAmBhN,OAAOiN,aAAP,CAAqBlY,GAAGU,MAAxB,EAAgC,KAAhC,CAAnB;AACAmX,aAAO5M,OAAOuC,UAAP,CAAkBiH,MAAlB,EAA0B,gBAA1B,CAAP;AACD,KALM,MAKA,IAAIxJ,OAAO1C,IAAP,KAAgBvI,GAAGmB,SAAvB,EAAkC;AACvC,UAAIgX,SAASlN,OAAOiL,WAAP,CAAmBnN,QAAnB,EAA6BX,QAA7B,CAAb;AACA+P,aAAOC,GAAP,GAAaP,IAAb;AACAM,aAAOE,KAAP,GAAepN,OAAOqN,aAAP,EAAf;AACAT,aAAO5M,OAAOuC,UAAP,CAAkB2K,MAAlB,EAA0B,0BAA1B,CAAP;AACD,KALM,MAKA;AACL,aAAON,IAAP;AACD;AACF;AACF,CA/BD;;AAiCA;AACA;AACA;AACA;;AAEAzB,KAAKtC,aAAL,GAAqB,UAAS/G,sBAAT,EAAiC;AACpD,MAAI1B,IAAJ;AAAA,MAAUkN,aAAa,KAAKjO,gBAAL,IAAyB,KAAKvE,KAArD;AACA,UAAQ,KAAKwC,IAAb;AACA,SAAKvI,GAAG2D,MAAR;AACE,UAAI,CAAC,KAAK4G,UAAV,EACE,KAAKmC,KAAL,CAAW,KAAK3G,KAAhB,EAAuB,sCAAvB;;AAEJ,SAAK/F,GAAG0D,KAAR;AACE,UAAI6E,OAAO,KAAKA,IAAL,KAAcvI,GAAG0D,KAAjB,GAAyB,gBAAzB,GAA4C,OAAvD;AACA2H,aAAO,KAAKC,SAAL,EAAP;AACA,WAAKS,IAAL;AACA,aAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB9C,IAAtB,CAAP;;AAEF,SAAKvI,GAAGL,IAAR;AACE,UAAIoJ,WAAW,KAAKhD,KAApB;AAAA,UAA2BqC,WAAW,KAAKA,QAA3C;AACA,UAAI+J,KAAK,KAAKvC,UAAL,CAAgB,KAAKrH,IAAL,KAAcvI,GAAGL,IAAjC,CAAT;AACA,UAAI4Y,cAAc,CAAC,KAAKnM,kBAAL,EAAf,IAA4C,KAAKN,GAAL,CAAS9L,GAAGgB,KAAZ,CAAhD,EACE,OAAO,KAAKwX,oBAAL,CAA0B,KAAKtC,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAA1B,EAAgE,CAAC+J,EAAD,CAAhE,CAAP;AACF,aAAOA,EAAP;;AAEF,SAAKnS,GAAGE,MAAR;AACE,UAAIsI,QAAQ,KAAKA,KAAjB;AACA6C,aAAO,KAAKoN,YAAL,CAAkBjQ,MAAMA,KAAxB,CAAP;AACA6C,WAAKqN,KAAL,GAAa,EAACC,SAASnQ,MAAMmQ,OAAhB,EAAyBC,OAAOpQ,MAAMoQ,KAAtC,EAAb;AACA,aAAOvN,IAAP;;AAEF,SAAKrL,GAAGC,GAAR,CAAa,KAAKD,GAAGG,MAAR;AACX,aAAO,KAAKsY,YAAL,CAAkB,KAAKjQ,KAAvB,CAAP;;AAEF,SAAKxI,GAAGgE,KAAR,CAAe,KAAKhE,GAAGiE,KAAR,CAAe,KAAKjE,GAAGkE,MAAR;AAC5BmH,aAAO,KAAKC,SAAL,EAAP;AACAD,WAAK7C,KAAL,GAAa,KAAKD,IAAL,KAAcvI,GAAGgE,KAAjB,GAAyB,IAAzB,GAAgC,KAAKuE,IAAL,KAAcvI,GAAGiE,KAA9D;AACAoH,WAAKQ,GAAL,GAAW,KAAKtD,IAAL,CAAUrJ,OAArB;AACA,WAAK6M,IAAL;AACA,aAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB,SAAtB,CAAP;;AAEF,SAAKrL,GAAGS,MAAR;AACE,aAAO,KAAKoY,kCAAL,CAAwCN,UAAxC,CAAP;;AAEF,SAAKvY,GAAGK,QAAR;AACEgL,aAAO,KAAKC,SAAL,EAAP;AACA,WAAKS,IAAL;AACAV,WAAK2J,QAAL,GAAgB,KAAKkD,aAAL,CAAmBlY,GAAGM,QAAtB,EAAgC,IAAhC,EAAsC,IAAtC,EAA4CyM,sBAA5C,CAAhB;AACA,aAAO,KAAKS,UAAL,CAAgBnC,IAAhB,EAAsB,iBAAtB,CAAP;;AAEF,SAAKrL,GAAGO,MAAR;AACE,aAAO,KAAKkV,QAAL,CAAc,KAAd,EAAqB1I,sBAArB,CAAP;;AAEF,SAAK/M,GAAG+C,SAAR;AACEsI,aAAO,KAAKC,SAAL,EAAP;AACA,WAAKS,IAAL;AACA,aAAO,KAAKyE,aAAL,CAAmBnF,IAAnB,EAAyB,KAAzB,CAAP;;AAEF,SAAKrL,GAAG4D,MAAR;AACE,aAAO,KAAK6K,UAAL,CAAgB,KAAKnD,SAAL,EAAhB,EAAkC,KAAlC,CAAP;;AAEF,SAAKtL,GAAGyD,IAAR;AACE,aAAO,KAAKqV,QAAL,EAAP;;AAEF,SAAK9Y,GAAGmB,SAAR;AACE,aAAO,KAAKmX,aAAL,EAAP;;AAEF;AACE,WAAKnM,UAAL;AA7DF;AA+DD,CAjED;;AAmEAiK,KAAKqC,YAAL,GAAoB,UAASjQ,KAAT,EAAgB;AAClC,MAAI6C,OAAO,KAAKC,SAAL,EAAX;AACAD,OAAK7C,KAAL,GAAaA,KAAb;AACA6C,OAAKQ,GAAL,GAAW,KAAK1F,KAAL,CAAWwD,KAAX,CAAiB,KAAK5D,KAAtB,EAA6B,KAAKC,GAAlC,CAAX;AACA,OAAK+F,IAAL;AACA,SAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB,SAAtB,CAAP;AACD,CAND;;AAQA+K,KAAKrG,oBAAL,GAA4B,YAAW;AACrC,OAAKtD,MAAL,CAAYzM,GAAGS,MAAf;AACA,MAAIsY,MAAM,KAAKvJ,eAAL,EAAV;AACA,OAAK/C,MAAL,CAAYzM,GAAGU,MAAf;AACA,SAAOqY,GAAP;AACD,CALD;;AAOA3C,KAAKyC,kCAAL,GAA0C,UAASN,UAAT,EAAqB;AAC7D,MAAItN,SAAS,IAAb;;AAEA,MAAIlC,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AAAA,MAAqD2Q,GAArD;AACA,MAAI,KAAKhZ,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC,SAAKqF,IAAL;;AAEA,QAAIiN,gBAAgB,KAAKjT,KAAzB;AAAA,QAAgCkT,gBAAgB,KAAK7Q,QAArD;AACA,QAAI8M,WAAW,EAAf;AAAA,QAAmB9H,QAAQ,IAA3B;AACA,QAAIL,yBAAyB,IAAIJ,mBAAJ,EAA7B;AAAA,QAAsDuM,WAAtD;AAAA,QAAmEC,eAAnE;AACA,WAAO,KAAK5Q,IAAL,KAAcvI,GAAGU,MAAxB,EAAgC;AAC9B0M,cAAQA,QAAQ,KAAhB,GAAwBnC,OAAOwB,MAAP,CAAczM,GAAGW,KAAjB,CAAxB;AACA,UAAIsK,OAAO1C,IAAP,KAAgBvI,GAAGkB,QAAvB,EAAiC;AAC/BgY,sBAAcjO,OAAOlF,KAArB;AACAmP,iBAASnN,IAAT,CAAckD,OAAOmO,cAAP,CAAsBnO,OAAOsK,SAAP,EAAtB,CAAd;AACA;AACD,OAJD,MAIO;AACL,YAAItK,OAAO1C,IAAP,KAAgBvI,GAAGS,MAAnB,IAA6B,CAAC0Y,eAAlC,EAAmD;AACjDA,4BAAkBlO,OAAOlF,KAAzB;AACD;AACDmP,iBAASnN,IAAT,CAAckD,OAAOiH,gBAAP,CAAwB,KAAxB,EAA+BnF,sBAA/B,EAAuD9B,OAAOmO,cAA9D,CAAd;AACD;AACF;AACD,QAAIC,cAAc,KAAKtT,KAAvB;AAAA,QAA8BuT,cAAc,KAAKlR,QAAjD;AACA,SAAKqE,MAAL,CAAYzM,GAAGU,MAAf;;AAEA,QAAI6X,cAAc,CAAC,KAAKnM,kBAAL,EAAf,IAA4C,KAAKN,GAAL,CAAS9L,GAAGgB,KAAZ,CAAhD,EAAoE;AAClE,WAAK8L,kBAAL,CAAwBC,sBAAxB,EAAgD,IAAhD;AACA,UAAIoM,eAAJ,EAAqB,KAAKhN,UAAL,CAAgBgN,eAAhB;AACrB,aAAO,KAAKI,mBAAL,CAAyBxQ,QAAzB,EAAmCX,QAAnC,EAA6C8M,QAA7C,CAAP;AACD;;AAED,QAAI,CAACA,SAAS1W,MAAd,EAAsB,KAAK2N,UAAL,CAAgB,KAAKnC,YAArB;AACtB,QAAIkP,WAAJ,EAAiB,KAAK/M,UAAL,CAAgB+M,WAAhB;AACjB,SAAKhM,qBAAL,CAA2BH,sBAA3B,EAAmD,IAAnD;;AAEA,QAAImI,SAAS1W,MAAT,GAAkB,CAAtB,EAAyB;AACvBua,YAAM,KAAK7C,WAAL,CAAiB8C,aAAjB,EAAgCC,aAAhC,CAAN;AACAF,UAAInC,WAAJ,GAAkB1B,QAAlB;AACA,WAAKsE,YAAL,CAAkBT,GAAlB,EAAuB,oBAAvB,EAA6CM,WAA7C,EAA0DC,WAA1D;AACD,KAJD,MAIO;AACLP,YAAM7D,SAAS,CAAT,CAAN;AACD;AACF,GAvCD,MAuCO;AACL6D,UAAM,KAAKhJ,oBAAL,EAAN;AACD;;AAED,MAAI,KAAKhQ,OAAL,CAAayH,cAAjB,EAAiC;AAC/B,QAAIiS,MAAM,KAAKvD,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAAV;AACAqR,QAAI7N,UAAJ,GAAiBmN,GAAjB;AACA,WAAO,KAAKvL,UAAL,CAAgBiM,GAAhB,EAAqB,yBAArB,CAAP;AACD,GAJD,MAIO;AACL,WAAOV,GAAP;AACD;AACF,CAtDD;;AAwDA3C,KAAKgD,cAAL,GAAsB,UAASM,IAAT,EAAe;AACnC,SAAOA,IAAP;AACD,CAFD;;AAIAtD,KAAKmD,mBAAL,GAA2B,UAASxQ,QAAT,EAAmBX,QAAnB,EAA6B8M,QAA7B,EAAuC;AAChE,SAAO,KAAKsD,oBAAL,CAA0B,KAAKtC,WAAL,CAAiBnN,QAAjB,EAA2BX,QAA3B,CAA1B,EAAgE8M,QAAhE,CAAP;AACD,CAFD;;AAIA;AACA;AACA;AACA;AACA;;AAEA,IAAIyE,UAAU,EAAd;;AAEAvD,KAAK0C,QAAL,GAAgB,YAAW;AACzB,MAAIzN,OAAO,KAAKC,SAAL,EAAX;AACA,MAAIsO,OAAO,KAAKhK,UAAL,CAAgB,IAAhB,CAAX;AACA,MAAI,KAAK7P,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,KAAKoF,GAAL,CAAS9L,GAAGc,GAAZ,CAArC,EAAuD;AACrDuK,SAAKuO,IAAL,GAAYA,IAAZ;AACAvO,SAAK0M,QAAL,GAAgB,KAAKnI,UAAL,CAAgB,IAAhB,CAAhB;AACA,QAAIvE,KAAK0M,QAAL,CAAcpY,IAAd,KAAuB,QAA3B,EACE,KAAKqR,gBAAL,CAAsB3F,KAAK0M,QAAL,CAAchS,KAApC,EAA2C,oDAA3C;AACF,QAAI,CAAC,KAAKwE,UAAV,EACE,KAAKyG,gBAAL,CAAsB3F,KAAKtF,KAA3B,EAAkC,0CAAlC;AACF,WAAO,KAAKyH,UAAL,CAAgBnC,IAAhB,EAAsB,cAAtB,CAAP;AACD;AACD,MAAItC,WAAW,KAAKhD,KAApB;AAAA,MAA2BqC,WAAW,KAAKA,QAA3C;AACAiD,OAAK2M,MAAL,GAAc,KAAKJ,eAAL,CAAqB,KAAK9D,aAAL,EAArB,EAA2C/K,QAA3C,EAAqDX,QAArD,EAA+D,IAA/D,CAAd;AACA,MAAI,KAAK0D,GAAL,CAAS9L,GAAGS,MAAZ,CAAJ,EAAyB4K,KAAK4M,SAAL,GAAiB,KAAKC,aAAL,CAAmBlY,GAAGU,MAAtB,EAA8B,KAA9B,CAAjB,CAAzB,KACK2K,KAAK4M,SAAL,GAAiB0B,OAAjB;AACL,SAAO,KAAKnM,UAAL,CAAgBnC,IAAhB,EAAsB,eAAtB,CAAP;AACD,CAjBD;;AAmBA;;AAEA+K,KAAKyD,oBAAL,GAA4B,YAAW;AACrC,MAAI7D,OAAO,KAAK1K,SAAL,EAAX;AACA0K,OAAKxN,KAAL,GAAa;AACXqD,SAAK,KAAK1F,KAAL,CAAWwD,KAAX,CAAiB,KAAK5D,KAAtB,EAA6B,KAAKC,GAAlC,EAAuC6C,OAAvC,CAA+C,QAA/C,EAAyD,IAAzD,CADM;AAEXiR,YAAQ,KAAKtR;AAFF,GAAb;AAIA,OAAKuD,IAAL;AACAiK,OAAK+D,IAAL,GAAY,KAAKxR,IAAL,KAAcvI,GAAGmB,SAA7B;AACA,SAAO,KAAKqM,UAAL,CAAgBwI,IAAhB,EAAsB,iBAAtB,CAAP;AACD,CATD;;AAWAI,KAAKkC,aAAL,GAAqB,YAAW;AAC9B,MAAIrN,SAAS,IAAb;;AAEA,MAAII,OAAO,KAAKC,SAAL,EAAX;AACA,OAAKS,IAAL;AACAV,OAAKuL,WAAL,GAAmB,EAAnB;AACA,MAAIoD,SAAS,KAAKH,oBAAL,EAAb;AACAxO,OAAK4O,MAAL,GAAc,CAACD,MAAD,CAAd;AACA,SAAO,CAACA,OAAOD,IAAf,EAAqB;AACnB9O,WAAOwB,MAAP,CAAczM,GAAGoB,YAAjB;AACAiK,SAAKuL,WAAL,CAAiB7O,IAAjB,CAAsBkD,OAAOuE,eAAP,EAAtB;AACAvE,WAAOwB,MAAP,CAAczM,GAAGQ,MAAjB;AACA6K,SAAK4O,MAAL,CAAYlS,IAAZ,CAAiBiS,SAAS/O,OAAO4O,oBAAP,EAA1B;AACD;AACD,OAAK9N,IAAL;AACA,SAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB,iBAAtB,CAAP;AACD,CAhBD;;AAkBA;;AAEA+K,KAAKX,QAAL,GAAgB,UAASyE,SAAT,EAAoBnN,sBAApB,EAA4C;AAC1D,MAAI9B,SAAS,IAAb;;AAEA,MAAII,OAAO,KAAKC,SAAL,EAAX;AAAA,MAA6B8B,QAAQ,IAArC;AAAA,MAA2CkJ,WAAW,EAAtD;AACAjL,OAAKwJ,UAAL,GAAkB,EAAlB;AACA,OAAK9I,IAAL;AACA,SAAO,CAAC,KAAKD,GAAL,CAAS9L,GAAGQ,MAAZ,CAAR,EAA6B;AAC3B,QAAI,CAAC4M,KAAL,EAAY;AACVnC,aAAOwB,MAAP,CAAczM,GAAGW,KAAjB;AACA,UAAIsK,OAAOsB,kBAAP,CAA0BvM,GAAGQ,MAA7B,CAAJ,EAA0C;AAC3C,KAHD,MAGO4M,QAAQ,KAAR;;AAEP,QAAI0H,OAAO7J,OAAOK,SAAP,EAAX;AAAA,QAA+B4H,WAA/B;AAAA,QAA4CnK,QAA5C;AAAA,QAAsDX,QAAtD;AACA,QAAI6C,OAAOlL,OAAP,CAAe2G,WAAf,IAA8B,CAAlC,EAAqC;AACnCoO,WAAK7B,MAAL,GAAc,KAAd;AACA6B,WAAKyB,SAAL,GAAiB,KAAjB;AACA,UAAI2D,aAAanN,sBAAjB,EAAyC;AACvChE,mBAAWkC,OAAOlF,KAAlB;AACAqC,mBAAW6C,OAAO7C,QAAlB;AACD;AACD,UAAI,CAAC8R,SAAL,EACEhH,cAAcjI,OAAOa,GAAP,CAAW9L,GAAGkC,IAAd,CAAd;AACH;AACD+I,WAAOmI,iBAAP,CAAyB0B,IAAzB;AACA7J,WAAOkP,kBAAP,CAA0BrF,IAA1B,EAAgCoF,SAAhC,EAA2ChH,WAA3C,EAAwDnK,QAAxD,EAAkEX,QAAlE,EAA4E2E,sBAA5E;AACA9B,WAAOoL,cAAP,CAAsBvB,IAAtB,EAA4BwB,QAA5B;AACAjL,SAAKwJ,UAAL,CAAgB9M,IAAhB,CAAqBkD,OAAOuC,UAAP,CAAkBsH,IAAlB,EAAwB,UAAxB,CAArB;AACD;AACD,SAAO,KAAKtH,UAAL,CAAgBnC,IAAhB,EAAsB6O,YAAY,eAAZ,GAA8B,kBAApD,CAAP;AACD,CA7BD;;AA+BA9D,KAAK+D,kBAAL,GAA0B,UAASrF,IAAT,EAAeoF,SAAf,EAA0BhH,WAA1B,EAAuCnK,QAAvC,EAAiDX,QAAjD,EAA2D2E,sBAA3D,EAAmF;AAC3G,MAAI,KAAKjB,GAAL,CAAS9L,GAAGa,KAAZ,CAAJ,EAAwB;AACtBiU,SAAKtM,KAAL,GAAa0R,YAAY,KAAKjE,iBAAL,CAAuB,KAAKlQ,KAA5B,EAAmC,KAAKqC,QAAxC,CAAZ,GAAgE,KAAK8J,gBAAL,CAAsB,KAAtB,EAA6BnF,sBAA7B,CAA7E;AACA+H,SAAKpH,IAAL,GAAY,MAAZ;AACD,GAHD,MAGO,IAAI,KAAK3N,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,KAAK6B,IAAL,KAAcvI,GAAGS,MAAtD,EAA8D;AACnE,QAAIyZ,SAAJ,EAAe,KAAK/N,UAAL;AACf2I,SAAKpH,IAAL,GAAY,MAAZ;AACAoH,SAAK7B,MAAL,GAAc,IAAd;AACA6B,SAAKtM,KAAL,GAAa,KAAKmL,WAAL,CAAiBT,WAAjB,CAAb;AACD,GALM,MAKA,IAAI,KAAKnT,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,CAACoO,KAAKvB,QAAvC,IAAmDuB,KAAKtB,GAAL,CAASjL,IAAT,KAAkB,YAArE,KACCuM,KAAKtB,GAAL,CAAS7T,IAAT,KAAkB,KAAlB,IAA2BmV,KAAKtB,GAAL,CAAS7T,IAAT,KAAkB,KAD9C,KAEC,KAAK4I,IAAL,IAAavI,GAAGW,KAAhB,IAAyB,KAAK4H,IAAL,IAAavI,GAAGQ,MAF9C,EAEuD;AAC5D,QAAI0S,eAAegH,SAAnB,EAA8B,KAAK/N,UAAL;AAC9B2I,SAAKpH,IAAL,GAAYoH,KAAKtB,GAAL,CAAS7T,IAArB;AACA,SAAKyT,iBAAL,CAAuB0B,IAAvB;AACAA,SAAKtM,KAAL,GAAa,KAAKmL,WAAL,CAAiB,KAAjB,CAAb;AACA,QAAID,aAAaoB,KAAKpH,IAAL,KAAc,KAAd,GAAsB,CAAtB,GAA0B,CAA3C;AACA,QAAIoH,KAAKtM,KAAL,CAAWmK,MAAX,CAAkBnU,MAAlB,KAA6BkV,UAAjC,EAA6C;AAC3C,UAAI3N,QAAQ+O,KAAKtM,KAAL,CAAWzC,KAAvB;AACA,UAAI+O,KAAKpH,IAAL,KAAc,KAAlB,EACE,KAAKsD,gBAAL,CAAsBjL,KAAtB,EAA6B,8BAA7B,EADF,KAGE,KAAKiL,gBAAL,CAAsBjL,KAAtB,EAA6B,sCAA7B;AACH;AACD,QAAI+O,KAAKpH,IAAL,KAAc,KAAd,IAAuBoH,KAAKtM,KAAL,CAAWmK,MAAX,CAAkB,CAAlB,EAAqBpK,IAArB,KAA8B,aAAzD,EACE,KAAKyI,gBAAL,CAAsB8D,KAAKtM,KAAL,CAAWmK,MAAX,CAAkB,CAAlB,EAAqB5M,KAA3C,EAAkD,+BAAlD;AACH,GAjBM,MAiBA,IAAI,KAAKhG,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,CAACoO,KAAKvB,QAAvC,IAAmDuB,KAAKtB,GAAL,CAASjL,IAAT,KAAkB,YAAzE,EAAuF;AAC5F,QAAI,KAAK5K,QAAL,CAAcgB,IAAd,CAAmBmW,KAAKtB,GAAL,CAAS7T,IAA5B,KACA,CAAC,KAAKnC,MAAL,GAAc,KAAK2L,uBAAnB,GAA6C,KAAK5L,aAAnD,EAAkEoB,IAAlE,CAAuEmW,KAAKtB,GAAL,CAAS7T,IAAhF,CADA,IAEC,KAAK6K,WAAL,IAAoBsK,KAAKtB,GAAL,CAAS7T,IAAT,IAAiB,OAF1C,EAGE,KAAKqR,gBAAL,CAAsB8D,KAAKtB,GAAL,CAASzN,KAA/B,EAAsC,MAAM+O,KAAKtB,GAAL,CAAS7T,IAAf,GAAsB,yCAA5D;AACFmV,SAAKpH,IAAL,GAAY,MAAZ;AACA,QAAIwM,SAAJ,EAAe;AACbpF,WAAKtM,KAAL,GAAa,KAAKyN,iBAAL,CAAuBlN,QAAvB,EAAiCX,QAAjC,EAA2C0M,KAAKtB,GAAhD,CAAb;AACD,KAFD,MAEO,IAAI,KAAKjL,IAAL,KAAcvI,GAAGqB,EAAjB,IAAuB0L,sBAA3B,EAAmD;AACxD,UAAI,CAACA,uBAAuBH,eAA5B,EACEG,uBAAuBH,eAAvB,GAAyC,KAAK7G,KAA9C;AACF+O,WAAKtM,KAAL,GAAa,KAAKyN,iBAAL,CAAuBlN,QAAvB,EAAiCX,QAAjC,EAA2C0M,KAAKtB,GAAhD,CAAb;AACD,KAJM,MAIA;AACLsB,WAAKtM,KAAL,GAAasM,KAAKtB,GAAlB;AACD;AACDsB,SAAKyB,SAAL,GAAiB,IAAjB;AACD,GAhBM,MAgBA,KAAKpK,UAAL;AACR,CA3CD;;AA6CAiK,KAAKhD,iBAAL,GAAyB,UAAS0B,IAAT,EAAe;AACtC,MAAI,KAAK/U,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC,QAAI,KAAKoF,GAAL,CAAS9L,GAAGK,QAAZ,CAAJ,EAA2B;AACzByU,WAAKvB,QAAL,GAAgB,IAAhB;AACAuB,WAAKtB,GAAL,GAAW,KAAKtB,gBAAL,EAAX;AACA,WAAKzF,MAAL,CAAYzM,GAAGM,QAAf;AACA,aAAOwU,KAAKtB,GAAZ;AACD,KALD,MAKO;AACLsB,WAAKvB,QAAL,GAAgB,KAAhB;AACD;AACF;AACD,SAAOuB,KAAKtB,GAAL,GAAW,KAAKjL,IAAL,KAAcvI,GAAGC,GAAjB,IAAwB,KAAKsI,IAAL,KAAcvI,GAAGG,MAAzC,GAAkD,KAAK2T,aAAL,EAAlD,GAAyE,KAAKlE,UAAL,CAAgB,IAAhB,CAA3F;AACD,CAZD;;AAcA;;AAEAwG,KAAK9D,YAAL,GAAoB,UAASjH,IAAT,EAAe;AACjCA,OAAK8G,EAAL,GAAU,IAAV;AACA,MAAI,KAAKpS,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC2E,SAAKkH,SAAL,GAAiB,KAAjB;AACAlH,SAAKO,UAAL,GAAkB,KAAlB;AACD;AACF,CAND;;AAQA;;AAEAwK,KAAKzC,WAAL,GAAmB,UAAST,WAAT,EAAsB;AACvC,MAAI7H,OAAO,KAAKC,SAAL,EAAX;AAAA,MAA6BkH,WAAW,KAAKhI,WAA7C;AACA,OAAKA,WAAL,GAAmB0I,WAAnB;AACA,OAAKZ,YAAL,CAAkBjH,IAAlB;AACA,OAAKoB,MAAL,CAAYzM,GAAGS,MAAf;AACA4K,OAAKsH,MAAL,GAAc,KAAKC,gBAAL,CAAsB5S,GAAGU,MAAzB,EAAiC,KAAjC,EAAwC,KAAxC,CAAd;AACA,MAAI,KAAKX,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EACE2E,KAAKkH,SAAL,GAAiBW,WAAjB;AACF,OAAKR,iBAAL,CAAuBrH,IAAvB,EAA6B,KAA7B;AACA,OAAKb,WAAL,GAAmBgI,QAAnB;AACA,SAAO,KAAKhF,UAAL,CAAgBnC,IAAhB,EAAsB,oBAAtB,CAAP;AACD,CAXD;;AAaA;;AAEA+K,KAAKoC,oBAAL,GAA4B,UAASnN,IAAT,EAAesH,MAAf,EAAuB;AACjD,MAAIH,WAAW,KAAKhI,WAApB;AACA,OAAKA,WAAL,GAAmB,KAAnB;AACA,OAAK8H,YAAL,CAAkBjH,IAAlB;AACAA,OAAKsH,MAAL,GAAc,KAAKoC,gBAAL,CAAsBpC,MAAtB,EAA8B,IAA9B,CAAd;AACA,OAAKD,iBAAL,CAAuBrH,IAAvB,EAA6B,IAA7B;AACA,OAAKb,WAAL,GAAmBgI,QAAnB;AACA,SAAO,KAAKhF,UAAL,CAAgBnC,IAAhB,EAAsB,yBAAtB,CAAP;AACD,CARD;;AAUA;;AAEA+K,KAAK1D,iBAAL,GAAyB,UAASrH,IAAT,EAAe+O,eAAf,EAAgC;AACvD,MAAIC,eAAeD,mBAAmB,KAAK7R,IAAL,KAAcvI,GAAGO,MAAvD;;AAEA,MAAI8Z,YAAJ,EAAkB;AAChBhP,SAAKgC,IAAL,GAAY,KAAK6E,gBAAL,EAAZ;AACA7G,SAAKO,UAAL,GAAkB,IAAlB;AACD,GAHD,MAGO;AACL;AACA;AACA,QAAI0O,YAAY,KAAK/P,UAArB;AAAA,QAAiCgQ,YAAY,KAAK9P,MAAlD;AACA,SAAKF,UAAL,GAAkB,IAAlB,CAAwB,KAAKE,MAAL,GAAc,EAAd;AACxBY,SAAKgC,IAAL,GAAY,KAAK6B,UAAL,CAAgB,IAAhB,CAAZ;AACA7D,SAAKO,UAAL,GAAkB,KAAlB;AACA,SAAKrB,UAAL,GAAkB+P,SAAlB,CAA6B,KAAK7P,MAAL,GAAc8P,SAAd;AAC9B;;AAED;AACA;AACA;AACA,MAAIC,YAAa,CAACH,YAAD,IAAiBhP,KAAKgC,IAAL,CAAUA,IAAV,CAAe7O,MAAhC,IAA0C,KAAKkN,WAAL,CAAiBL,KAAKgC,IAAL,CAAUA,IAAV,CAAe,CAAf,CAAjB,CAA3C,GAAkFhC,KAAKgC,IAAL,CAAUA,IAAV,CAAe,CAAf,CAAlF,GAAsG,IAAtH;AACA,MAAI,KAAK7P,MAAL,IAAegd,SAAnB,EAA8B;AAC5B,QAAI7I,YAAY,KAAKnU,MAArB;AACA,SAAKA,MAAL,GAAc,IAAd;AACA,QAAI6N,KAAK8G,EAAT,EACE,KAAK5B,SAAL,CAAelF,KAAK8G,EAApB,EAAwB,IAAxB;AACF,SAAKsI,WAAL,CAAiBpP,IAAjB,EAAuBmP,SAAvB;AACA,SAAKhd,MAAL,GAAcmU,SAAd;AACD,GAPD,MAOO,IAAIyI,eAAJ,EAAqB;AAC1B,SAAKK,WAAL,CAAiBpP,IAAjB,EAAuBmP,SAAvB;AACD;AACF,CA9BD;;AAgCA;AACA;;AAEApE,KAAKqE,WAAL,GAAmB,UAASpP,IAAT,EAAemP,SAAf,EAA0B;AACzC,MAAIvP,SAAS,IAAb;;AAEA,MAAIyP,WAAW,EAAf;AACA,OAAK,IAAInc,IAAI,CAAb,EAAgBA,IAAI8M,KAAKsH,MAAL,CAAYnU,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3C,QAAIic,aAAavP,OAAOlL,OAAP,CAAe2G,WAAf,IAA8B,CAA3C,IAAgD2E,KAAKsH,MAAL,CAAYpU,CAAZ,EAAegK,IAAf,KAAwB,YAA5E,EACE0C,OAAO+F,gBAAP,CAAwBwJ,UAAUzU,KAAlC,EAAyC,2EAAzC;AACFkF,WAAOsF,SAAP,CAAiBlF,KAAKsH,MAAL,CAAYpU,CAAZ,CAAjB,EAAiC,IAAjC,EAAuCmc,QAAvC;AACD;AACJ,CATD;;AAWA;AACA;AACA;AACA;AACA;;AAEAtE,KAAK8B,aAAL,GAAqB,UAASxC,KAAT,EAAgBE,kBAAhB,EAAoCD,UAApC,EAAgD5I,sBAAhD,EAAwE;AAC3F,MAAI9B,SAAS,IAAb;;AAEA,MAAI4K,OAAO,EAAX;AAAA,MAAezI,QAAQ,IAAvB;AACA,SAAO,CAAC,KAAKtB,GAAL,CAAS4J,KAAT,CAAR,EAAyB;AACvB,QAAI,CAACtI,KAAL,EAAY;AACVnC,aAAOwB,MAAP,CAAczM,GAAGW,KAAjB;AACA,UAAIiV,sBAAsB3K,OAAOsB,kBAAP,CAA0BmJ,KAA1B,CAA1B,EAA4D;AAC7D,KAHD,MAGOtI,QAAQ,KAAR;;AAEP,QAAIiI,GAAJ;AACA,QAAIM,cAAc1K,OAAO1C,IAAP,KAAgBvI,GAAGW,KAArC,EACE0U,MAAM,IAAN,CADF,KAEK,IAAIpK,OAAO1C,IAAP,KAAgBvI,GAAGkB,QAAvB,EAAiC;AACpCmU,YAAMpK,OAAOqK,WAAP,CAAmBvI,sBAAnB,CAAN;AACA,UAAI9B,OAAO1C,IAAP,KAAgBvI,GAAGW,KAAnB,IAA4BoM,sBAA5B,IAAsD,CAACA,uBAAuBF,aAAlF,EAAiG;AAC/FE,+BAAuBF,aAAvB,GAAuC5B,OAAOjB,YAA9C;AACD;AACF,KALI,MAMHqL,MAAMpK,OAAOiH,gBAAP,CAAwB,KAAxB,EAA+BnF,sBAA/B,CAAN;AACF8I,SAAK9N,IAAL,CAAUsN,GAAV;AACD;AACD,SAAOQ,IAAP;AACD,CAvBD;;AAyBA;AACA;AACA;;AAEAO,KAAKxG,UAAL,GAAkB,UAAS+K,OAAT,EAAkB;AAClC,MAAItP,OAAO,KAAKC,SAAL,EAAX;AACA,MAAIqP,WAAW,KAAK5a,OAAL,CAAa+G,aAAb,IAA8B,OAA7C,EAAsD6T,UAAU,KAAV;AACtD,MAAI,KAAKpS,IAAL,KAAcvI,GAAGL,IAArB,EAA2B;AACzB,QAAI,CAACgb,OAAD,IAAY,CAAC,KAAKnd,MAAL,GAAc,KAAK0L,mBAAnB,GAAyC,KAAK3L,aAA/C,EAA8DoB,IAA9D,CAAmE,KAAK6J,KAAxE,CAAZ,KACC,KAAKzI,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IACA,KAAKP,KAAL,CAAWwD,KAAX,CAAiB,KAAK5D,KAAtB,EAA6B,KAAKC,GAAlC,EAAuC4U,OAAvC,CAA+C,IAA/C,KAAwD,CAAC,CAF1D,CAAJ,EAGE,KAAK5J,gBAAL,CAAsB,KAAKjL,KAA3B,EAAkC,kBAAkB,KAAKyC,KAAvB,GAA+B,eAAjE;AACF,QAAI,CAACmS,OAAD,IAAY,KAAKnQ,WAAjB,IAAgC,KAAKhC,KAAL,KAAe,OAAnD,EACE,KAAKwI,gBAAL,CAAsB,KAAKjL,KAA3B,EAAkC,sDAAlC;AACFsF,SAAK1L,IAAL,GAAY,KAAK6I,KAAjB;AACD,GARD,MAQO,IAAImS,WAAW,KAAKpS,IAAL,CAAUrJ,OAAzB,EAAkC;AACvCmM,SAAK1L,IAAL,GAAY,KAAK4I,IAAL,CAAUrJ,OAAtB;AACD,GAFM,MAEA;AACL,SAAKiN,UAAL;AACD;AACD,OAAKJ,IAAL;AACA,SAAO,KAAKyB,UAAL,CAAgBnC,IAAhB,EAAsB,YAAtB,CAAP;AACD,CAlBD;;AAoBA;;AAEA+K,KAAKU,UAAL,GAAkB,YAAW;AAC3B,MAAIzL,OAAO,KAAKC,SAAL,EAAX;AACA,OAAKS,IAAL;AACA,MAAI,KAAKxD,IAAL,IAAavI,GAAGY,IAAhB,IAAwB,KAAKwL,kBAAL,EAAxB,IAAsD,KAAK7D,IAAL,IAAavI,GAAGkC,IAAhB,IAAwB,CAAC,KAAKqG,IAAL,CAAUnJ,UAA7F,EAA0G;AACxGiM,SAAKwP,QAAL,GAAgB,KAAhB;AACAxP,SAAKsF,QAAL,GAAgB,IAAhB;AACD,GAHD,MAGO;AACLtF,SAAKwP,QAAL,GAAgB,KAAK/O,GAAL,CAAS9L,GAAGkC,IAAZ,CAAhB;AACAmJ,SAAKsF,QAAL,GAAgB,KAAKuB,gBAAL,EAAhB;AACD;AACD,SAAO,KAAK1E,UAAL,CAAgBnC,IAAhB,EAAsB,iBAAtB,CAAP;AACD,CAXD;;AAaA,IAAIyP,OAAOhS,OAAO7D,SAAlB;;AAEA;AACA;AACA;AACA;AACA;;AAEA6V,KAAKpO,KAAL,GAAa,UAASpO,GAAT,EAAcyc,OAAd,EAAuB;AAClC,MAAItS,MAAMvC,YAAY,KAAKC,KAAjB,EAAwB7H,GAAxB,CAAV;AACAyc,aAAW,OAAOtS,IAAIjD,IAAX,GAAkB,GAAlB,GAAwBiD,IAAI/C,MAA5B,GAAqC,GAAhD;AACA,MAAIsV,MAAM,IAAIC,WAAJ,CAAgBF,OAAhB,CAAV;AACAC,MAAI1c,GAAJ,GAAUA,GAAV,CAAe0c,IAAIvS,GAAJ,GAAUA,GAAV,CAAeuS,IAAIE,QAAJ,GAAe,KAAK5c,GAApB;AAC9B,QAAM0c,GAAN;AACD,CAND;;AAQAF,KAAK9J,gBAAL,GAAwB8J,KAAKpO,KAA7B;;AAEAoO,KAAKjR,WAAL,GAAmB,YAAW;AAC5B,MAAI,KAAK9J,OAAL,CAAamH,SAAjB,EAA4B;AAC1B,WAAO,IAAI3B,QAAJ,CAAa,KAAKmE,OAAlB,EAA2B,KAAKpL,GAAL,GAAW,KAAKgL,SAA3C,CAAP;AACD;AACF,CAJD;;AAMA,IAAI6R,OAAO,SAASA,IAAT,CAAcC,MAAd,EAAsB9c,GAAtB,EAA2BmK,GAA3B,EAAgC;AACzC,OAAKF,IAAL,GAAY,EAAZ;AACA,OAAKxC,KAAL,GAAazH,GAAb;AACA,OAAK0H,GAAL,GAAW,CAAX;AACA,MAAIoV,OAAOrb,OAAP,CAAemH,SAAnB,EACE,KAAKuB,GAAL,GAAW,IAAI5C,cAAJ,CAAmBuV,MAAnB,EAA2B3S,GAA3B,CAAX;AACF,MAAI2S,OAAOrb,OAAP,CAAewH,gBAAnB,EACE,KAAKtB,UAAL,GAAkBmV,OAAOrb,OAAP,CAAewH,gBAAjC;AACF,MAAI6T,OAAOrb,OAAP,CAAesH,MAAnB,EACE,KAAKqB,KAAL,GAAa,CAACpK,GAAD,EAAM,CAAN,CAAb;AACH,CAVD;;AAYA;;AAEA,IAAI+c,OAAOvS,OAAO7D,SAAlB;;AAEAoW,KAAK/P,SAAL,GAAiB,YAAW;AAC1B,SAAO,IAAI6P,IAAJ,CAAS,IAAT,EAAe,KAAKpV,KAApB,EAA2B,KAAKqC,QAAhC,CAAP;AACD,CAFD;;AAIAiT,KAAKnF,WAAL,GAAmB,UAAS5X,GAAT,EAAcmK,GAAd,EAAmB;AACpC,SAAO,IAAI0S,IAAJ,CAAS,IAAT,EAAe7c,GAAf,EAAoBmK,GAApB,CAAP;AACD,CAFD;;AAIA;;AAEA,SAAS+Q,YAAT,CAAsBnO,IAAtB,EAA4B9C,IAA5B,EAAkCjK,GAAlC,EAAuCmK,GAAvC,EAA4C;AAC1C4C,OAAK9C,IAAL,GAAYA,IAAZ;AACA8C,OAAKrF,GAAL,GAAW1H,GAAX;AACA,MAAI,KAAKyB,OAAL,CAAamH,SAAjB,EACEmE,KAAK5C,GAAL,CAASzC,GAAT,GAAeyC,GAAf;AACF,MAAI,KAAK1I,OAAL,CAAasH,MAAjB,EACEgE,KAAK3C,KAAL,CAAW,CAAX,IAAgBpK,GAAhB;AACF,SAAO+M,IAAP;AACD;;AAEDgQ,KAAK7N,UAAL,GAAkB,UAASnC,IAAT,EAAe9C,IAAf,EAAqB;AACrC,SAAOiR,aAAarU,IAAb,CAAkB,IAAlB,EAAwBkG,IAAxB,EAA8B9C,IAA9B,EAAoC,KAAK0B,UAAzC,EAAqD,KAAKH,aAA1D,CAAP;AACD,CAFD;;AAIA;;AAEAuR,KAAK7B,YAAL,GAAoB,UAASnO,IAAT,EAAe9C,IAAf,EAAqBjK,GAArB,EAA0BmK,GAA1B,EAA+B;AACjD,SAAO+Q,aAAarU,IAAb,CAAkB,IAAlB,EAAwBkG,IAAxB,EAA8B9C,IAA9B,EAAoCjK,GAApC,EAAyCmK,GAAzC,CAAP;AACD,CAFD;;AAIA,IAAI6S,aAAa,SAASA,UAAT,CAAoBxT,KAApB,EAA2ByT,MAA3B,EAAmCC,aAAnC,EAAkDC,QAAlD,EAA4D;AAC3E,OAAK3T,KAAL,GAAaA,KAAb;AACA,OAAKyT,MAAL,GAAc,CAAC,CAACA,MAAhB;AACA,OAAKC,aAAL,GAAqB,CAAC,CAACA,aAAvB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACD,CALD;;AAOA,IAAIC,QAAQ;AACVC,UAAQ,IAAIL,UAAJ,CAAe,GAAf,EAAoB,KAApB,CADE;AAEVM,UAAQ,IAAIN,UAAJ,CAAe,GAAf,EAAoB,IAApB,CAFE;AAGVO,UAAQ,IAAIP,UAAJ,CAAe,IAAf,EAAqB,IAArB,CAHE;AAIVQ,UAAQ,IAAIR,UAAJ,CAAe,GAAf,EAAoB,KAApB,CAJE;AAKVS,UAAQ,IAAIT,UAAJ,CAAe,GAAf,EAAoB,IAApB,CALE;AAMVU,UAAQ,IAAIV,UAAJ,CAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,UAAUxV,CAAV,EAAa;AAAE,WAAOA,EAAEmW,aAAF,EAAP;AAA2B,GAA1E,CANE;AAOVC,UAAQ,IAAIZ,UAAJ,CAAe,UAAf,EAA2B,IAA3B;AAPE,CAAZ;;AAUA,IAAIa,OAAOrT,OAAO7D,SAAlB;;AAEAkX,KAAKhS,cAAL,GAAsB,YAAW;AAC/B,SAAO,CAACuR,MAAMC,MAAP,CAAP;AACD,CAFD;;AAIAQ,KAAKC,YAAL,GAAoB,UAASC,QAAT,EAAmB;AACrC,MAAIA,aAAarc,GAAGa,KAApB,EAA2B;AACzB,QAAIyb,SAAS,KAAKC,UAAL,EAAb;AACA,QAAID,WAAWZ,MAAMC,MAAjB,IAA2BW,WAAWZ,MAAME,MAAhD,EACE,OAAO,CAACU,OAAOf,MAAf;AACH;AACD,MAAIc,aAAarc,GAAGiD,OAApB,EACE,OAAOuB,UAAU7F,IAAV,CAAe,KAAKwH,KAAL,CAAWwD,KAAX,CAAiB,KAAKM,UAAtB,EAAkC,KAAKlE,KAAvC,CAAf,CAAP;AACF,MAAIsW,aAAarc,GAAG4C,KAAhB,IAAyByZ,aAAarc,GAAGY,IAAzC,IAAiDyb,aAAarc,GAAGI,GAAjE,IAAwEic,aAAarc,GAAGU,MAA5F,EACE,OAAO,IAAP;AACF,MAAI2b,YAAYrc,GAAGO,MAAnB,EACE,OAAO,KAAKgc,UAAL,OAAsBb,MAAMC,MAAnC;AACF,SAAO,CAAC,KAAKvR,WAAb;AACD,CAbD;;AAeA+R,KAAKzc,aAAL,GAAqB,UAAS2c,QAAT,EAAmB;AACtC,MAAIzK,MAAJ;AAAA,MAAYrJ,OAAO,KAAKA,IAAxB;AACA,MAAIA,KAAKrJ,OAAL,IAAgBmd,YAAYrc,GAAGc,GAAnC,EACE,KAAKsJ,WAAL,GAAmB,KAAnB,CADF,KAEK,IAAIwH,SAASrJ,KAAK7I,aAAlB,EACHkS,OAAOzM,IAAP,CAAY,IAAZ,EAAkBkX,QAAlB,EADG,KAGH,KAAKjS,WAAL,GAAmB7B,KAAKpJ,UAAxB;AACH,CARD;;AAUA;;AAEAa,GAAGU,MAAH,CAAUhB,aAAV,GAA0BM,GAAGQ,MAAH,CAAUd,aAAV,GAA0B,YAAW;AAC7D,MAAI,KAAKwK,OAAL,CAAa1L,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,SAAK4L,WAAL,GAAmB,IAAnB;AACA;AACD;AACD,MAAIoS,MAAM,KAAKtS,OAAL,CAAa4F,GAAb,EAAV;AACA,MAAI0M,QAAQd,MAAMC,MAAd,IAAwB,KAAKY,UAAL,OAAsBb,MAAMQ,MAAxD,EAAgE;AAC9D,SAAKhS,OAAL,CAAa4F,GAAb;AACA,SAAK1F,WAAL,GAAmB,KAAnB;AACD,GAHD,MAGO,IAAIoS,QAAQd,MAAMG,MAAlB,EAA0B;AAC/B,SAAKzR,WAAL,GAAmB,IAAnB;AACD,GAFM,MAEA;AACL,SAAKA,WAAL,GAAmB,CAACoS,IAAIjB,MAAxB;AACD;AACF,CAdD;;AAgBAvb,GAAGO,MAAH,CAAUb,aAAV,GAA0B,UAAS2c,QAAT,EAAmB;AAC3C,OAAKnS,OAAL,CAAanC,IAAb,CAAkB,KAAKqU,YAAL,CAAkBC,QAAlB,IAA8BX,MAAMC,MAApC,GAA6CD,MAAME,MAArE;AACA,OAAKxR,WAAL,GAAmB,IAAnB;AACD,CAHD;;AAKApK,GAAGoB,YAAH,CAAgB1B,aAAhB,GAAgC,YAAW;AACzC,OAAKwK,OAAL,CAAanC,IAAb,CAAkB2T,MAAMG,MAAxB;AACA,OAAKzR,WAAL,GAAmB,IAAnB;AACD,CAHD;;AAKApK,GAAGS,MAAH,CAAUf,aAAV,GAA0B,UAAS2c,QAAT,EAAmB;AAC3C,MAAII,kBAAkBJ,aAAarc,GAAGgD,GAAhB,IAAuBqZ,aAAarc,GAAG8C,IAAvC,IAA+CuZ,aAAarc,GAAGwD,KAA/D,IAAwE6Y,aAAarc,GAAGuD,MAA9G;AACA,OAAK2G,OAAL,CAAanC,IAAb,CAAkB0U,kBAAkBf,MAAMI,MAAxB,GAAiCJ,MAAMK,MAAzD;AACA,OAAK3R,WAAL,GAAmB,IAAnB;AACD,CAJD;;AAMApK,GAAGuB,MAAH,CAAU7B,aAAV,GAA0B,YAAW;AACnC;AACD,CAFD;;AAIAM,GAAG+C,SAAH,CAAarD,aAAb,GAA6B,UAAS2c,QAAT,EAAmB;AAC9C,MAAIA,SAASld,UAAT,IAAuBkd,aAAarc,GAAGY,IAAvC,IAA+Cyb,aAAarc,GAAG4C,KAA/D,IACA,EAAE,CAACyZ,aAAarc,GAAGa,KAAhB,IAAyBwb,aAAarc,GAAGO,MAA1C,KAAqD,KAAKgc,UAAL,OAAsBb,MAAMC,MAAnF,CADJ,EAEE,KAAKzR,OAAL,CAAanC,IAAb,CAAkB2T,MAAMQ,MAAxB;AACF,OAAK9R,WAAL,GAAmB,KAAnB;AACD,CALD;;AAOApK,GAAGmB,SAAH,CAAazB,aAAb,GAA6B,YAAW;AACtC,MAAI,KAAK6c,UAAL,OAAsBb,MAAMM,MAAhC,EACE,KAAK9R,OAAL,CAAa4F,GAAb,GADF,KAGE,KAAK5F,OAAL,CAAanC,IAAb,CAAkB2T,MAAMM,MAAxB;AACF,OAAK5R,WAAL,GAAmB,KAAnB;AACD,CAND;;AAQA;AACA;AACA;;AAEA,IAAIsS,QAAQ,SAASA,KAAT,CAAe5W,CAAf,EAAkB;AAC5B,OAAKyC,IAAL,GAAYzC,EAAEyC,IAAd;AACA,OAAKC,KAAL,GAAa1C,EAAE0C,KAAf;AACA,OAAKzC,KAAL,GAAaD,EAAEC,KAAf;AACA,OAAKC,GAAL,GAAWF,EAAEE,GAAb;AACA,MAAIF,EAAE/F,OAAF,CAAUmH,SAAd,EACE,KAAKuB,GAAL,GAAW,IAAI5C,cAAJ,CAAmBC,CAAnB,EAAsBA,EAAEsC,QAAxB,EAAkCtC,EAAEuC,MAApC,CAAX;AACF,MAAIvC,EAAE/F,OAAF,CAAUsH,MAAd,EACE,KAAKqB,KAAL,GAAa,CAAC5C,EAAEC,KAAH,EAAUD,EAAEE,GAAZ,CAAb;AACH,CATD;;AAWA;;AAEA,IAAI2W,OAAO7T,OAAO7D,SAAlB;;AAEA;AACA,IAAI2X,UAAU,QAAOC,QAAP,yCAAOA,QAAP,MAAmB,QAAnB,IAA+B7X,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B0X,QAA/B,KAA4C,sBAAzF;;AAEA;;AAEAF,KAAK5Q,IAAL,GAAY,YAAW;AACrB,MAAI,KAAKhM,OAAL,CAAaoH,OAAjB,EACE,KAAKpH,OAAL,CAAaoH,OAAb,CAAqB,IAAIuV,KAAJ,CAAU,IAAV,CAArB;;AAEF,OAAKzS,UAAL,GAAkB,KAAKjE,GAAvB;AACA,OAAKgE,YAAL,GAAoB,KAAKjE,KAAzB;AACA,OAAK+D,aAAL,GAAqB,KAAKzB,MAA1B;AACA,OAAK0B,eAAL,GAAuB,KAAK3B,QAA5B;AACA,OAAKmD,SAAL;AACD,CATD;;AAWAoR,KAAKG,QAAL,GAAgB,YAAW;AACzB,OAAK/Q,IAAL;AACA,SAAO,IAAI2Q,KAAJ,CAAU,IAAV,CAAP;AACD,CAHD;;AAKA;AACA,IAAI,OAAOK,MAAP,KAAkB,WAAtB,EACEJ,KAAKI,OAAOC,QAAZ,IAAwB,YAAY;AAClC,MAAIC,OAAO,IAAX;AACA,SAAO,EAAClR,MAAM,gBAAY;AACxB,UAAIjE,QAAQmV,KAAKH,QAAL,EAAZ;AACA,aAAO;AACLI,cAAMpV,MAAMS,IAAN,KAAevI,GAAGI,GADnB;AAELoI,eAAOV;AAFF,OAAP;AAID,KANM,EAAP;AAOD,CATD;;AAWF;AACA;;AAEA6U,KAAKpP,SAAL,GAAiB,UAAS/P,MAAT,EAAiB;AAChC,MAAIyN,SAAS,IAAb;;AAEA,OAAKzN,MAAL,GAAcA,MAAd;AACA,MAAI,KAAK+K,IAAL,KAAcvI,GAAGC,GAAjB,IAAwB,KAAKsI,IAAL,KAAcvI,GAAGG,MAA7C,EAAqD;AACrD,OAAK7B,GAAL,GAAW,KAAKyH,KAAhB;AACA,MAAI,KAAKhG,OAAL,CAAamH,SAAjB,EAA4B;AAC1B,WAAO,KAAK5I,GAAL,GAAW,KAAKgL,SAAvB,EAAkC;AAChC2B,aAAO3B,SAAP,GAAmB2B,OAAO9E,KAAP,CAAasD,WAAb,CAAyB,IAAzB,EAA+BwB,OAAO3B,SAAP,GAAmB,CAAlD,IAAuD,CAA1E;AACA,QAAE2B,OAAOvB,OAAT;AACD;AACF;AACD,OAAK6B,SAAL;AACD,CAbD;;AAeAoR,KAAKJ,UAAL,GAAkB,YAAW;AAC3B,SAAO,KAAKrS,OAAL,CAAa,KAAKA,OAAL,CAAa1L,MAAb,GAAsB,CAAnC,CAAP;AACD,CAFD;;AAIA;AACA;;AAEAme,KAAKpR,SAAL,GAAiB,YAAW;AAC1B,MAAIgR,aAAa,KAAKA,UAAL,EAAjB;AACA,MAAI,CAACA,UAAD,IAAe,CAACA,WAAWf,aAA/B,EAA8C,KAAK2B,SAAL;;AAE9C,OAAKpX,KAAL,GAAa,KAAKzH,GAAlB;AACA,MAAI,KAAKyB,OAAL,CAAamH,SAAjB,EAA4B,KAAKkB,QAAL,GAAgB,KAAKyB,WAAL,EAAhB;AAC5B,MAAI,KAAKvL,GAAL,IAAY,KAAK6H,KAAL,CAAW3H,MAA3B,EAAmC,OAAO,KAAK4e,WAAL,CAAiBpd,GAAGI,GAApB,CAAP;;AAEnC,MAAImc,WAAWd,QAAf,EAAyB,OAAOc,WAAWd,QAAX,CAAoB,IAApB,CAAP,CAAzB,KACK,KAAK4B,SAAL,CAAe,KAAKC,iBAAL,EAAf;AACN,CAVD;;AAYAX,KAAKU,SAAL,GAAiB,UAASjf,IAAT,EAAe;AAC9B;AACA;AACA,MAAIK,kBAAkBL,IAAlB,EAAwB,KAAK2B,OAAL,CAAa2G,WAAb,IAA4B,CAApD,KAA0DtI,SAAS,EAAvE,CAA0E,SAA1E,EACE,OAAO,KAAKmf,QAAL,EAAP;;AAEF,SAAO,KAAKC,gBAAL,CAAsBpf,IAAtB,CAAP;AACD,CAPD;;AASAue,KAAKW,iBAAL,GAAyB,YAAW;AAClC,MAAIlf,OAAO,KAAK+H,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,CAAX;AACA,MAAIF,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC,OAAOA,IAAP;AACtC,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,SAAO,CAACF,QAAQ,EAAT,IAAe2N,IAAf,GAAsB,SAA7B;AACD,CALD;;AAOA4Q,KAAKc,gBAAL,GAAwB,YAAW;AACjC,MAAIxS,SAAS,IAAb;;AAEA,MAAI7C,WAAW,KAAKrI,OAAL,CAAaqH,SAAb,IAA0B,KAAKyC,WAAL,EAAzC;AACA,MAAI9D,QAAQ,KAAKzH,GAAjB;AAAA,MAAsB0H,MAAM,KAAKG,KAAL,CAAWyU,OAAX,CAAmB,IAAnB,EAAyB,KAAKtc,GAAL,IAAY,CAArC,CAA5B;AACA,MAAI0H,QAAQ,CAAC,CAAb,EAAgB,KAAK0G,KAAL,CAAW,KAAKpO,GAAL,GAAW,CAAtB,EAAyB,sBAAzB;AAChB,OAAKA,GAAL,GAAW0H,MAAM,CAAjB;AACA,MAAI,KAAKjG,OAAL,CAAamH,SAAjB,EAA4B;AAC1BzC,eAAW4B,SAAX,GAAuBN,KAAvB;AACA,QAAIO,KAAJ;AACA,WAAO,CAACA,QAAQ7B,WAAW8B,IAAX,CAAgB,KAAKJ,KAArB,CAAT,KAAyCG,MAAME,KAAN,GAAc,KAAKlI,GAAnE,EAAwE;AACtE,QAAE2M,OAAOvB,OAAT;AACAuB,aAAO3B,SAAP,GAAmBhD,MAAME,KAAN,GAAcF,MAAM,CAAN,EAAS9H,MAA1C;AACD;AACF;AACD,MAAI,KAAKuB,OAAL,CAAaqH,SAAjB,EACE,KAAKrH,OAAL,CAAaqH,SAAb,CAAuB,IAAvB,EAA6B,KAAKjB,KAAL,CAAWwD,KAAX,CAAiB5D,QAAQ,CAAzB,EAA4BC,GAA5B,CAA7B,EAA+DD,KAA/D,EAAsE,KAAKzH,GAA3E,EACuB8J,QADvB,EACiC,KAAKyB,WAAL,EADjC;AAEH,CAlBD;;AAoBA8S,KAAKjS,eAAL,GAAuB,UAASgT,SAAT,EAAoB;AACzC,MAAIzS,SAAS,IAAb;;AAEA,MAAIlF,QAAQ,KAAKzH,GAAjB;AACA,MAAI8J,WAAW,KAAKrI,OAAL,CAAaqH,SAAb,IAA0B,KAAKyC,WAAL,EAAzC;AACA,MAAI8T,KAAK,KAAKxX,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,IAAUof,SAAhC,CAAT;AACA,SAAO,KAAKpf,GAAL,GAAW,KAAK6H,KAAL,CAAW3H,MAAtB,IAAgCmf,OAAO,EAAvC,IAA6CA,OAAO,EAApD,IAA0DA,OAAO,IAAjE,IAAyEA,OAAO,IAAvF,EAA6F;AAC3F,MAAE1S,OAAO3M,GAAT;AACAqf,SAAK1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,CAAL;AACD;AACD,MAAI,KAAKyB,OAAL,CAAaqH,SAAjB,EACE,KAAKrH,OAAL,CAAaqH,SAAb,CAAuB,KAAvB,EAA8B,KAAKjB,KAAL,CAAWwD,KAAX,CAAiB5D,QAAQ2X,SAAzB,EAAoC,KAAKpf,GAAzC,CAA9B,EAA6EyH,KAA7E,EAAoF,KAAKzH,GAAzF,EACuB8J,QADvB,EACiC,KAAKyB,WAAL,EADjC;AAEH,CAbD;;AAeA;AACA;;AAEA8S,KAAKQ,SAAL,GAAiB,YAAW;AAC1B,MAAIlS,SAAS,IAAb;;AAEA2S,QAAM,OAAO,KAAKtf,GAAL,GAAW,KAAK6H,KAAL,CAAW3H,MAA7B,EAAqC;AACzC,QAAImf,KAAK1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,CAAT;AACA,YAAQqf,EAAR;AACE,WAAK,EAAL,CAAS,KAAK,GAAL;AAAU;AACjB,UAAE1S,OAAO3M,GAAT;AACA;AACF,WAAK,EAAL;AACE,YAAI2M,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAAP,GAAa,CAArC,MAA4C,EAAhD,EAAoD;AAClD,YAAE2M,OAAO3M,GAAT;AACD;AACH,WAAK,EAAL,CAAS,KAAK,IAAL,CAAW,KAAK,IAAL;AAClB,UAAE2M,OAAO3M,GAAT;AACA,YAAI2M,OAAOlL,OAAP,CAAemH,SAAnB,EAA8B;AAC5B,YAAE+D,OAAOvB,OAAT;AACAuB,iBAAO3B,SAAP,GAAmB2B,OAAO3M,GAA1B;AACD;AACD;AACF,WAAK,EAAL;AAAS;AACP,gBAAQ2M,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAAP,GAAa,CAArC,CAAR;AACE,eAAK,EAAL;AAAS;AACP2M,mBAAOwS,gBAAP;AACA;AACF,eAAK,EAAL;AACExS,mBAAOP,eAAP,CAAuB,CAAvB;AACA;AACF;AACE,kBAAMkT,IAAN;AARJ;AAUA;AACF;AACE,YAAID,KAAK,CAAL,IAAUA,KAAK,EAAf,IAAqBA,MAAM,IAAN,IAAc/Y,mBAAmBjG,IAAnB,CAAwBC,OAAOC,YAAP,CAAoB8e,EAApB,CAAxB,CAAvC,EAAyF;AACvF,YAAE1S,OAAO3M,GAAT;AACD,SAFD,MAEO;AACL,gBAAMsf,IAAN;AACD;AAhCL;AAkCD;AACF,CAxCD;;AA0CA;AACA;AACA;AACA;;AAEAjB,KAAKS,WAAL,GAAmB,UAAS7U,IAAT,EAAewQ,GAAf,EAAoB;AACrC,OAAK/S,GAAL,GAAW,KAAK1H,GAAhB;AACA,MAAI,KAAKyB,OAAL,CAAamH,SAAjB,EAA4B,KAAKmB,MAAL,GAAc,KAAKwB,WAAL,EAAd;AAC5B,MAAIwS,WAAW,KAAK9T,IAApB;AACA,OAAKA,IAAL,GAAYA,IAAZ;AACA,OAAKC,KAAL,GAAauQ,GAAb;;AAEA,OAAKrZ,aAAL,CAAmB2c,QAAnB;AACD,CARD;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,KAAKkB,aAAL,GAAqB,YAAW;AAC9B,MAAI9R,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAIyN,QAAQ,EAAR,IAAcA,QAAQ,EAA1B,EAA8B,OAAO,KAAK+R,UAAL,CAAgB,IAAhB,CAAP;AAC9B,MAAIC,QAAQ,KAAK5X,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAZ;AACA,MAAI,KAAKyB,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiCqF,SAAS,EAA1C,IAAgDgS,UAAU,EAA9D,EAAkE;AAAE;AAClE,SAAKzf,GAAL,IAAY,CAAZ;AACA,WAAO,KAAK8e,WAAL,CAAiBpd,GAAGkB,QAApB,CAAP;AACD,GAHD,MAGO;AACL,MAAE,KAAK5C,GAAP;AACA,WAAO,KAAK8e,WAAL,CAAiBpd,GAAGc,GAApB,CAAP;AACD;AACF,CAXD;;AAaA6b,KAAKqB,eAAL,GAAuB,YAAW;AAAE;AAClC,MAAIjS,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAI,KAAK8L,WAAT,EAAsB;AAAC,MAAE,KAAK9L,GAAP,CAAY,OAAO,KAAK2f,UAAL,EAAP;AAAyB;AAC5D,MAAIlS,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB,CAAzB,CAAP;AACjB,SAAO,KAAK4c,QAAL,CAAcle,GAAGmC,KAAjB,EAAwB,CAAxB,CAAP;AACD,CALD;;AAOAwa,KAAKwB,yBAAL,GAAiC,UAAS/f,IAAT,EAAe;AAAE;AAChD,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAI8f,OAAO,CAAX;AACA,MAAIC,YAAYjgB,SAAS,EAAT,GAAc4B,GAAGkC,IAAjB,GAAwBlC,GAAGiC,MAA3C;;AAEA;AACA,MAAI,KAAKlC,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiCqF,SAAS,EAA9C,EAAkD;AAChD,MAAEqS,IAAF;AACAC,gBAAYre,GAAGoC,QAAf;AACA2J,WAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAP;AACD;;AAED,MAAIyN,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB8c,OAAO,CAAhC,CAAP;AACjB,SAAO,KAAKF,QAAL,CAAcG,SAAd,EAAyBD,IAAzB,CAAP;AACD,CAdD;;AAgBAzB,KAAK2B,kBAAL,GAA0B,UAASlgB,IAAT,EAAe;AAAE;AACzC,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAIyN,SAAS3N,IAAb,EAAmB,OAAO,KAAK8f,QAAL,CAAc9f,SAAS,GAAT,GAAe4B,GAAGwB,SAAlB,GAA8BxB,GAAGyB,UAA/C,EAA2D,CAA3D,CAAP;AACnB,MAAIsK,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB,CAAzB,CAAP;AACjB,SAAO,KAAK4c,QAAL,CAAc9f,SAAS,GAAT,GAAe4B,GAAG0B,SAAlB,GAA8B1B,GAAG4B,UAA/C,EAA2D,CAA3D,CAAP;AACD,CALD;;AAOA+a,KAAK4B,eAAL,GAAuB,YAAW;AAAE;AAClC,MAAIxS,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAIyN,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB,CAAzB,CAAP;AACjB,SAAO,KAAK4c,QAAL,CAAcle,GAAG2B,UAAjB,EAA6B,CAA7B,CAAP;AACD,CAJD;;AAMAgb,KAAK6B,kBAAL,GAA0B,UAASpgB,IAAT,EAAe;AAAE;AACzC,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAIyN,SAAS3N,IAAb,EAAmB;AACjB,QAAI2N,QAAQ,EAAR,IAAc,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,KAAuC,EAArD,IACAkG,UAAU7F,IAAV,CAAe,KAAKwH,KAAL,CAAWwD,KAAX,CAAiB,KAAKM,UAAtB,EAAkC,KAAK3L,GAAvC,CAAf,CADJ,EACiE;AAC/D;AACA,WAAKoM,eAAL,CAAqB,CAArB;AACA,WAAKyS,SAAL;AACA,aAAO,KAAK5R,SAAL,EAAP;AACD;AACD,WAAO,KAAK2S,QAAL,CAAcle,GAAGuB,MAAjB,EAAyB,CAAzB,CAAP;AACD;AACD,MAAIwK,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB,CAAzB,CAAP;AACjB,SAAO,KAAK4c,QAAL,CAAcle,GAAGgC,OAAjB,EAA0B,CAA1B,CAAP;AACD,CAdD;;AAgBA2a,KAAK8B,eAAL,GAAuB,UAASrgB,IAAT,EAAe;AAAE;AACtC,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAI8f,OAAO,CAAX;AACA,MAAIrS,SAAS3N,IAAb,EAAmB;AACjBggB,WAAOhgB,SAAS,EAAT,IAAe,KAAK+H,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,MAAwC,EAAvD,GAA4D,CAA5D,GAAgE,CAAvE;AACA,QAAI,KAAK6H,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW8f,IAAjC,MAA2C,EAA/C,EAAmD,OAAO,KAAKF,QAAL,CAAcle,GAAGsB,MAAjB,EAAyB8c,OAAO,CAAhC,CAAP;AACnD,WAAO,KAAKF,QAAL,CAAcle,GAAG+B,QAAjB,EAA2Bqc,IAA3B,CAAP;AACD;AACD,MAAIrS,QAAQ,EAAR,IAAc3N,QAAQ,EAAtB,IAA4B,KAAK+H,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,KAAuC,EAAnE,IACA,KAAK6H,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,KAAuC,EAD3C,EAC+C;AAC7C,QAAI,KAAK+L,QAAT,EAAmB,KAAK8B,UAAL;AACnB;AACA,SAAKzB,eAAL,CAAqB,CAArB;AACA,SAAKyS,SAAL;AACA,WAAO,KAAK5R,SAAL,EAAP;AACD;AACD,MAAIQ,SAAS,EAAb,EAAiBqS,OAAO,CAAP;AACjB,SAAO,KAAKF,QAAL,CAAcle,GAAG8B,UAAjB,EAA6Bsc,IAA7B,CAAP;AACD,CAlBD;;AAoBAzB,KAAK+B,iBAAL,GAAyB,UAAStgB,IAAT,EAAe;AAAE;AACxC,MAAI2N,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,MAAIyN,SAAS,EAAb,EAAiB,OAAO,KAAKmS,QAAL,CAAcle,GAAG6B,QAAjB,EAA2B,KAAKsE,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,MAAwC,EAAxC,GAA6C,CAA7C,GAAiD,CAA5E,CAAP;AACjB,MAAIF,SAAS,EAAT,IAAe2N,SAAS,EAAxB,IAA8B,KAAKhM,OAAL,CAAa2G,WAAb,IAA4B,CAA9D,EAAiE;AAAE;AACjE,SAAKpI,GAAL,IAAY,CAAZ;AACA,WAAO,KAAK8e,WAAL,CAAiBpd,GAAGgB,KAApB,CAAP;AACD;AACD,SAAO,KAAKkd,QAAL,CAAc9f,SAAS,EAAT,GAAc4B,GAAGqB,EAAjB,GAAsBrB,GAAGT,MAAvC,EAA+C,CAA/C,CAAP;AACD,CARD;;AAUAod,KAAKa,gBAAL,GAAwB,UAASpf,IAAT,EAAe;AACrC,UAAQA,IAAR;AACE;AACA;AACF,SAAK,EAAL;AAAS;AACP,aAAO,KAAKyf,aAAL,EAAP;;AAEA;AACF,SAAK,EAAL;AAAS,QAAE,KAAKvf,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGS,MAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAKnC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGU,MAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAKpC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGY,IAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAKtC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGW,KAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAKrC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGK,QAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAK/B,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGM,QAApB,CAAP;AACrB,SAAK,GAAL;AAAU,QAAE,KAAKhC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGO,MAApB,CAAP;AACtB,SAAK,GAAL;AAAU,QAAE,KAAKjC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGQ,MAApB,CAAP;AACtB,SAAK,EAAL;AAAS,QAAE,KAAKlC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGa,KAApB,CAAP;AACrB,SAAK,EAAL;AAAS,QAAE,KAAKvC,GAAP,CAAY,OAAO,KAAK8e,WAAL,CAAiBpd,GAAGe,QAApB,CAAP;;AAErB,SAAK,EAAL;AAAS;AACP,UAAI,KAAKhB,OAAL,CAAa2G,WAAb,GAA2B,CAA/B,EAAkC;AAClC,QAAE,KAAKpI,GAAP;AACA,aAAO,KAAK8e,WAAL,CAAiBpd,GAAGmB,SAApB,CAAP;;AAEF,SAAK,EAAL;AAAS;AACP,UAAI4K,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAAL,GAAW,CAAjC,CAAX;AACA,UAAIyN,SAAS,GAAT,IAAgBA,SAAS,EAA7B,EAAiC,OAAO,KAAK4S,eAAL,CAAqB,EAArB,CAAP,CAFnC,CAEmE;AACjE,UAAI,KAAK5e,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmC;AACjC,YAAIqF,SAAS,GAAT,IAAgBA,SAAS,EAA7B,EAAiC,OAAO,KAAK4S,eAAL,CAAqB,CAArB,CAAP,CADA,CAC+B;AAChE,YAAI5S,SAAS,EAAT,IAAeA,SAAS,EAA5B,EAAgC,OAAO,KAAK4S,eAAL,CAAqB,CAArB,CAAP,CAFC,CAE8B;AAChE;AACD;AACA;AACF,SAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAC/E,aAAO,KAAKb,UAAL,CAAgB,KAAhB,CAAP;;AAEA;AACF,SAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB,aAAO,KAAKc,UAAL,CAAgBxgB,IAAhB,CAAP;;AAEA;AACA;AACA;AACA;;AAEF,SAAK,EAAL;AAAS;AACP,aAAO,KAAK4f,eAAL,EAAP;;AAEF,SAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB,aAAO,KAAKG,yBAAL,CAA+B/f,IAA/B,CAAP;;AAEF,SAAK,GAAL,CAAU,KAAK,EAAL;AAAS;AACjB,aAAO,KAAKkgB,kBAAL,CAAwBlgB,IAAxB,CAAP;;AAEF,SAAK,EAAL;AAAS;AACP,aAAO,KAAKmgB,eAAL,EAAP;;AAEF,SAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB,aAAO,KAAKC,kBAAL,CAAwBpgB,IAAxB,CAAP;;AAEF,SAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB,aAAO,KAAKqgB,eAAL,CAAqBrgB,IAArB,CAAP;;AAEF,SAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB,aAAO,KAAKsgB,iBAAL,CAAuBtgB,IAAvB,CAAP;;AAEF,SAAK,GAAL;AAAU;AACR,aAAO,KAAK8f,QAAL,CAAcle,GAAGT,MAAjB,EAAyB,CAAzB,CAAP;AAlEF;;AAqEA,OAAKmN,KAAL,CAAW,KAAKpO,GAAhB,EAAqB,2BAA2BugB,kBAAkBzgB,IAAlB,CAA3B,GAAqD,GAA1E;AACD,CAvED;;AAyEAue,KAAKuB,QAAL,GAAgB,UAAS3V,IAAT,EAAe6V,IAAf,EAAqB;AACnC,MAAIU,MAAM,KAAK3Y,KAAL,CAAWwD,KAAX,CAAiB,KAAKrL,GAAtB,EAA2B,KAAKA,GAAL,GAAW8f,IAAtC,CAAV;AACA,OAAK9f,GAAL,IAAY8f,IAAZ;AACA,SAAO,KAAKhB,WAAL,CAAiB7U,IAAjB,EAAuBuW,GAAvB,CAAP;AACD,CAJD;;AAMA;AACA;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BpG,KAA9B,EAAqCqG,YAArC,EAAmD7D,MAAnD,EAA2D;AACzD,MAAI;AACF,WAAO,IAAIrd,MAAJ,CAAWihB,GAAX,EAAgBpG,KAAhB,CAAP;AACD,GAFD,CAEE,OAAOsG,CAAP,EAAU;AACV,QAAID,iBAAiBE,SAArB,EAAgC;AAC9B,UAAID,aAAajE,WAAjB,EAA8BG,OAAO1O,KAAP,CAAauS,YAAb,EAA2B,uCAAuCC,EAAEnE,OAApE;AAC9B,YAAMmE,CAAN;AACD;AACF;AACF;;AAED,IAAIE,uBAAuB,CAAC,CAACL,gBAAgB,QAAhB,EAA0B,GAA1B,CAA7B;;AAEApC,KAAKsB,UAAL,GAAkB,YAAW;AAC3B,MAAIhT,SAAS,IAAb;;AAEA,MAAIoU,OAAJ;AAAA,MAAaC,OAAb;AAAA,MAAsBvZ,QAAQ,KAAKzH,GAAnC;AACA,WAAS;AACP,QAAI2M,OAAO3M,GAAP,IAAc2M,OAAO9E,KAAP,CAAa3H,MAA/B,EAAuCyM,OAAOyB,KAAP,CAAa3G,KAAb,EAAoB,iCAApB;AACvC,QAAI4X,KAAK1S,OAAO9E,KAAP,CAAaoZ,MAAb,CAAoBtU,OAAO3M,GAA3B,CAAT;AACA,QAAIkG,UAAU7F,IAAV,CAAegf,EAAf,CAAJ,EAAwB1S,OAAOyB,KAAP,CAAa3G,KAAb,EAAoB,iCAApB;AACxB,QAAI,CAACsZ,OAAL,EAAc;AACZ,UAAI1B,OAAO,GAAX,EAAgB2B,UAAU,IAAV,CAAhB,KACK,IAAI3B,OAAO,GAAP,IAAc2B,OAAlB,EAA2BA,UAAU,KAAV,CAA3B,KACA,IAAI3B,OAAO,GAAP,IAAc,CAAC2B,OAAnB,EAA4B;AACjCD,gBAAU1B,OAAO,IAAjB;AACD,KALD,MAKO0B,UAAU,KAAV;AACP,MAAEpU,OAAO3M,GAAT;AACD;AACD,MAAIkhB,UAAU,KAAKrZ,KAAL,CAAWwD,KAAX,CAAiB5D,KAAjB,EAAwB,KAAKzH,GAA7B,CAAd;AACA,IAAE,KAAKA,GAAP;AACA;AACA;AACA,MAAImhB,OAAO,KAAKC,SAAL,EAAX;AACA,MAAIC,MAAMH,OAAV;AAAA,MAAmBI,WAAW,EAA9B;AACA,MAAIH,IAAJ,EAAU;AACR,QAAII,aAAa,UAAjB;AACA,QAAI,KAAK9f,OAAL,CAAa2G,WAAb,IAA4B,CAAhC,EAAmCmZ,aAAa,YAAb;AACnC,QAAI,CAACA,WAAWlhB,IAAX,CAAgB8gB,IAAhB,CAAL,EAA4B,KAAK/S,KAAL,CAAW3G,KAAX,EAAkB,iCAAlB;AAC5B,QAAI0Z,KAAK7E,OAAL,CAAa,GAAb,KAAqB,CAAzB,EAA4B;AAC1B,UAAIwE,oBAAJ,EAA0B;AACxBQ,mBAAW,GAAX;AACD,OAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,cAAMA,IAAI9W,OAAJ,CAAY,wBAAZ,EAAsC,UAAUiX,MAAV,EAAkB1hB,IAAlB,EAAwBuH,MAAxB,EAAgC;AAC1EvH,iBAAO2hB,OAAO,OAAO3hB,IAAd,CAAP;AACA,cAAIA,OAAO,QAAX,EAAqB6M,OAAOyB,KAAP,CAAa3G,QAAQJ,MAAR,GAAiB,CAA9B,EAAiC,0BAAjC;AACrB,iBAAO,GAAP;AACD,SAJK,CAAN;AAKAga,cAAMA,IAAI9W,OAAJ,CAAY,qDAAZ,EAAmE,GAAnE,CAAN;AACA+W,mBAAWA,SAAS/W,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAX;AACD;AACF;AACF;AACD;AACA,MAAIL,QAAQ,IAAZ;AACA;AACA;AACA,MAAI,CAACoU,OAAL,EAAc;AACZmC,oBAAgBY,GAAhB,EAAqBC,QAArB,EAA+B7Z,KAA/B,EAAsC,IAAtC;AACA;AACA;AACAyC,YAAQuW,gBAAgBS,OAAhB,EAAyBC,IAAzB,CAAR;AACD;AACD,SAAO,KAAKrC,WAAL,CAAiBpd,GAAGE,MAApB,EAA4B,EAACyY,SAAS6G,OAAV,EAAmB5G,OAAO6G,IAA1B,EAAgCjX,OAAOA,KAAvC,EAA5B,CAAP;AACD,CA3DD;;AA6DA;AACA;AACA;;AAEAmU,KAAKqD,OAAL,GAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAClC,MAAIjV,SAAS,IAAb;;AAEA,MAAIlF,QAAQ,KAAKzH,GAAjB;AAAA,MAAsB6hB,QAAQ,CAA9B;AACA,OAAK,IAAI5hB,IAAI,CAAR,EAAW2gB,IAAIgB,OAAO,IAAP,GAAcE,QAAd,GAAyBF,GAA7C,EAAkD3hB,IAAI2gB,CAAtD,EAAyD,EAAE3gB,CAA3D,EAA8D;AAC5D,QAAIH,OAAO6M,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,CAAX;AAAA,QAAgDya,GAAhD;AACA,QAAI3a,QAAQ,EAAZ,EAAgB2a,MAAM3a,OAAO,EAAP,GAAY,EAAlB,CAAhB,CAAqC;AAArC,SACK,IAAIA,QAAQ,EAAZ,EAAgB2a,MAAM3a,OAAO,EAAP,GAAY,EAAlB,CAAhB,CAAqC;AAArC,WACA,IAAIA,QAAQ,EAAR,IAAcA,QAAQ,EAA1B,EAA8B2a,MAAM3a,OAAO,EAAb,CAA9B,CAA8C;AAA9C,aACA2a,MAAMqH,QAAN;AACL,QAAIrH,OAAOkH,KAAX,EAAkB;AAClB,MAAEhV,OAAO3M,GAAT;AACA6hB,YAAQA,QAAQF,KAAR,GAAgBlH,GAAxB;AACD;AACD,MAAI,KAAKza,GAAL,KAAayH,KAAb,IAAsBma,OAAO,IAAP,IAAe,KAAK5hB,GAAL,GAAWyH,KAAX,KAAqBma,GAA9D,EAAmE,OAAO,IAAP;;AAEnE,SAAOC,KAAP;AACD,CAjBD;;AAmBAxD,KAAKgC,eAAL,GAAuB,UAASsB,KAAT,EAAgB;AACrC,OAAK3hB,GAAL,IAAY,CAAZ,CADqC,CACvB;AACd,MAAIya,MAAM,KAAKiH,OAAL,CAAaC,KAAb,CAAV;AACA,MAAIlH,OAAO,IAAX,EAAiB,KAAKrM,KAAL,CAAW,KAAK3G,KAAL,GAAa,CAAxB,EAA2B,8BAA8Bka,KAAzD;AACjB,MAAIxhB,kBAAkB,KAAK6e,iBAAL,EAAlB,CAAJ,EAAiD,KAAK5Q,KAAL,CAAW,KAAKpO,GAAhB,EAAqB,kCAArB;AACjD,SAAO,KAAK8e,WAAL,CAAiBpd,GAAGC,GAApB,EAAyB8Y,GAAzB,CAAP;AACD,CAND;;AAQA;;AAEA4D,KAAKmB,UAAL,GAAkB,UAASuC,aAAT,EAAwB;AACxC,MAAIta,QAAQ,KAAKzH,GAAjB;AAAA,MAAsBgiB,UAAU,KAAhC;AAAA,MAAuCC,QAAQ,KAAKpa,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,MAAoC,EAAnF;AACA,MAAI,CAAC+hB,aAAD,IAAkB,KAAKL,OAAL,CAAa,EAAb,MAAqB,IAA3C,EAAiD,KAAKtT,KAAL,CAAW3G,KAAX,EAAkB,gBAAlB;AACjD,MAAIgG,OAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,CAAX;AACA,MAAIyN,SAAS,EAAb,EAAiB;AAAE;AACjB,MAAE,KAAKzN,GAAP;AACA,SAAK0hB,OAAL,CAAa,EAAb;AACAM,cAAU,IAAV;AACAvU,WAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,CAAP;AACD;AACD,MAAIyN,SAAS,EAAT,IAAeA,SAAS,GAA5B,EAAiC;AAAE;AACjCA,WAAO,KAAK5F,KAAL,CAAW4H,UAAX,CAAsB,EAAE,KAAKzP,GAA7B,CAAP;AACA,QAAIyN,SAAS,EAAT,IAAeA,SAAS,EAA5B,EAAgC,EAAE,KAAKzN,GAAP,CAFD,CAEY;AAC3C,QAAI,KAAK0hB,OAAL,CAAa,EAAb,MAAqB,IAAzB,EAA+B,KAAKtT,KAAL,CAAW3G,KAAX,EAAkB,gBAAlB;AAC/Bua,cAAU,IAAV;AACD;AACD,MAAI7hB,kBAAkB,KAAK6e,iBAAL,EAAlB,CAAJ,EAAiD,KAAK5Q,KAAL,CAAW,KAAKpO,GAAhB,EAAqB,kCAArB;;AAEjD,MAAIwgB,MAAM,KAAK3Y,KAAL,CAAWwD,KAAX,CAAiB5D,KAAjB,EAAwB,KAAKzH,GAA7B,CAAV;AAAA,MAA6Cya,GAA7C;AACA,MAAIuH,OAAJ,EAAavH,MAAMyH,WAAW1B,GAAX,CAAN,CAAb,KACK,IAAI,CAACyB,KAAD,IAAUzB,IAAItgB,MAAJ,KAAe,CAA7B,EAAgCua,MAAM0H,SAAS3B,GAAT,EAAc,EAAd,CAAN,CAAhC,KACA,IAAI,OAAOngB,IAAP,CAAYmgB,GAAZ,KAAoB,KAAKthB,MAA7B,EAAqC,KAAKkP,KAAL,CAAW3G,KAAX,EAAkB,gBAAlB,EAArC,KACAgT,MAAM0H,SAAS3B,GAAT,EAAc,CAAd,CAAN;AACL,SAAO,KAAK1B,WAAL,CAAiBpd,GAAGC,GAApB,EAAyB8Y,GAAzB,CAAP;AACD,CAxBD;;AA0BA;;AAEA4D,KAAK+D,aAAL,GAAqB,YAAW;AAC9B,MAAI/C,KAAK,KAAKxX,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,CAAT;AAAA,MAA0CF,IAA1C;;AAEA,MAAIuf,OAAO,GAAX,EAAgB;AACd,QAAI,KAAK5d,OAAL,CAAa2G,WAAb,GAA2B,CAA/B,EAAkC,KAAKyF,UAAL;AAClC,QAAIwU,UAAU,EAAE,KAAKriB,GAArB;AACAF,WAAO,KAAKwiB,WAAL,CAAiB,KAAKza,KAAL,CAAWyU,OAAX,CAAmB,GAAnB,EAAwB,KAAKtc,GAA7B,IAAoC,KAAKA,GAA1D,CAAP;AACA,MAAE,KAAKA,GAAP;AACA,QAAIF,OAAO,QAAX,EAAqB,KAAKsO,KAAL,CAAWiU,OAAX,EAAoB,0BAApB;AACtB,GAND,MAMO;AACLviB,WAAO,KAAKwiB,WAAL,CAAiB,CAAjB,CAAP;AACD;AACD,SAAOxiB,IAAP;AACD,CAbD;;AAeA,SAASygB,iBAAT,CAA2BzgB,IAA3B,EAAiC;AAC/B;AACA,MAAIA,QAAQ,MAAZ,EAAoB,OAAOQ,OAAOC,YAAP,CAAoBT,IAApB,CAAP;AACpBA,UAAQ,OAAR;AACA,SAAOQ,OAAOC,YAAP,CAAoB,CAACT,QAAQ,EAAT,IAAe,MAAnC,EAA2C,CAACA,OAAO,IAAR,IAAgB,MAA3D,CAAP;AACD;;AAEDue,KAAKiC,UAAL,GAAkB,UAASiC,KAAT,EAAgB;AAChC,MAAI5V,SAAS,IAAb;;AAEA,MAAIuR,MAAM,EAAV;AAAA,MAAcsE,aAAa,EAAE,KAAKxiB,GAAlC;AACA,WAAS;AACP,QAAI2M,OAAO3M,GAAP,IAAc2M,OAAO9E,KAAP,CAAa3H,MAA/B,EAAuCyM,OAAOyB,KAAP,CAAazB,OAAOlF,KAApB,EAA2B,8BAA3B;AACvC,QAAI4X,KAAK1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,CAAT;AACA,QAAIqf,OAAOkD,KAAX,EAAkB;AAClB,QAAIlD,OAAO,EAAX,EAAe;AAAE;AACfnB,aAAOvR,OAAO9E,KAAP,CAAawD,KAAb,CAAmBmX,UAAnB,EAA+B7V,OAAO3M,GAAtC,CAAP;AACAke,aAAOvR,OAAO8V,eAAP,CAAuB,KAAvB,CAAP;AACAD,mBAAa7V,OAAO3M,GAApB;AACD,KAJD,MAIO;AACL,UAAIqG,UAAUgZ,EAAV,CAAJ,EAAmB1S,OAAOyB,KAAP,CAAazB,OAAOlF,KAApB,EAA2B,8BAA3B;AACnB,QAAEkF,OAAO3M,GAAT;AACD;AACF;AACDke,SAAO,KAAKrW,KAAL,CAAWwD,KAAX,CAAiBmX,UAAjB,EAA6B,KAAKxiB,GAAL,EAA7B,CAAP;AACA,SAAO,KAAK8e,WAAL,CAAiBpd,GAAGG,MAApB,EAA4Bqc,GAA5B,CAAP;AACD,CAnBD;;AAqBA;;AAEAG,KAAKV,aAAL,GAAqB,YAAW;AAC9B,MAAIhR,SAAS,IAAb;;AAEA,MAAIuR,MAAM,EAAV;AAAA,MAAcsE,aAAa,KAAKxiB,GAAhC;AACA,WAAS;AACP,QAAI2M,OAAO3M,GAAP,IAAc2M,OAAO9E,KAAP,CAAa3H,MAA/B,EAAuCyM,OAAOyB,KAAP,CAAazB,OAAOlF,KAApB,EAA2B,uBAA3B;AACvC,QAAI4X,KAAK1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,CAAT;AACA,QAAIqf,OAAO,EAAP,IAAaA,OAAO,EAAP,IAAa1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAAP,GAAa,CAArC,MAA4C,GAA1E,EAA+E;AAAE;AAC/E,UAAI2M,OAAO3M,GAAP,KAAe2M,OAAOlF,KAAtB,IAA+BkF,OAAO1C,IAAP,KAAgBvI,GAAGiB,QAAtD,EAAgE;AAC9D,YAAI0c,OAAO,EAAX,EAAe;AACb1S,iBAAO3M,GAAP,IAAc,CAAd;AACA,iBAAO2M,OAAOmS,WAAP,CAAmBpd,GAAGoB,YAAtB,CAAP;AACD,SAHD,MAGO;AACL,YAAE6J,OAAO3M,GAAT;AACA,iBAAO2M,OAAOmS,WAAP,CAAmBpd,GAAGmB,SAAtB,CAAP;AACD;AACF;AACDqb,aAAOvR,OAAO9E,KAAP,CAAawD,KAAb,CAAmBmX,UAAnB,EAA+B7V,OAAO3M,GAAtC,CAAP;AACA,aAAO2M,OAAOmS,WAAP,CAAmBpd,GAAGiB,QAAtB,EAAgCub,GAAhC,CAAP;AACD;AACD,QAAImB,OAAO,EAAX,EAAe;AAAE;AACfnB,aAAOvR,OAAO9E,KAAP,CAAawD,KAAb,CAAmBmX,UAAnB,EAA+B7V,OAAO3M,GAAtC,CAAP;AACAke,aAAOvR,OAAO8V,eAAP,CAAuB,IAAvB,CAAP;AACAD,mBAAa7V,OAAO3M,GAApB;AACD,KAJD,MAIO,IAAIqG,UAAUgZ,EAAV,CAAJ,EAAmB;AACxBnB,aAAOvR,OAAO9E,KAAP,CAAawD,KAAb,CAAmBmX,UAAnB,EAA+B7V,OAAO3M,GAAtC,CAAP;AACA,QAAE2M,OAAO3M,GAAT;AACA,cAAQqf,EAAR;AACE,aAAK,EAAL;AACE,cAAI1S,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB9C,OAAO3M,GAA/B,MAAwC,EAA5C,EAAgD,EAAE2M,OAAO3M,GAAT;AAClD,aAAK,EAAL;AACEke,iBAAO,IAAP;AACA;AACF;AACEA,iBAAO5d,OAAOC,YAAP,CAAoB8e,EAApB,CAAP;AACA;AARJ;AAUA,UAAI1S,OAAOlL,OAAP,CAAemH,SAAnB,EAA8B;AAC5B,UAAE+D,OAAOvB,OAAT;AACAuB,eAAO3B,SAAP,GAAmB2B,OAAO3M,GAA1B;AACD;AACDwiB,mBAAa7V,OAAO3M,GAApB;AACD,KAlBM,MAkBA;AACL,QAAE2M,OAAO3M,GAAT;AACD;AACF;AACF,CA9CD;;AAgDA;;AAEAqe,KAAKoE,eAAL,GAAuB,UAASC,UAAT,EAAqB;AAC1C,MAAIrD,KAAK,KAAKxX,KAAL,CAAW4H,UAAX,CAAsB,EAAE,KAAKzP,GAA7B,CAAT;AACA,IAAE,KAAKA,GAAP;AACA,UAAQqf,EAAR;AACA,SAAK,GAAL;AAAU,aAAO,IAAP,CADV,CACsB;AACtB,SAAK,GAAL;AAAU,aAAO,IAAP,CAFV,CAEsB;AACtB,SAAK,GAAL;AAAU,aAAO/e,OAAOC,YAAP,CAAoB,KAAK+hB,WAAL,CAAiB,CAAjB,CAApB,CAAP,CAHV,CAG0D;AAC1D,SAAK,GAAL;AAAU,aAAO/B,kBAAkB,KAAK6B,aAAL,EAAlB,CAAP,CAJV,CAIyD;AACzD,SAAK,GAAL;AAAU,aAAO,IAAP,CALV,CAKsB;AACtB,SAAK,EAAL;AAAS,aAAO,IAAP,CANT,CAMqB;AACrB,SAAK,GAAL;AAAU,aAAO,MAAP,CAPV,CAO0B;AAC1B,SAAK,GAAL;AAAU,aAAO,IAAP,CARV,CAQsB;AACtB,SAAK,EAAL;AAAS,UAAI,KAAKva,KAAL,CAAW4H,UAAX,CAAsB,KAAKzP,GAA3B,MAAoC,EAAxC,EAA4C,EAAE,KAAKA,GAAP,CATrD,CASgE;AAChE,SAAK,EAAL;AAAS;AACP,UAAI,KAAKyB,OAAL,CAAamH,SAAjB,EAA4B;AAAE,aAAKoC,SAAL,GAAiB,KAAKhL,GAAtB,CAA2B,EAAE,KAAKoL,OAAP;AAAgB;AACzE,aAAO,EAAP;AACF;AACE,UAAIiU,MAAM,EAAN,IAAYA,MAAM,EAAtB,EAA0B;AACxB,YAAIsD,WAAW,KAAK9a,KAAL,CAAW+a,MAAX,CAAkB,KAAK5iB,GAAL,GAAW,CAA7B,EAAgC,CAAhC,EAAmCgI,KAAnC,CAAyC,SAAzC,EAAoD,CAApD,CAAf;AACA,YAAIia,QAAQE,SAASQ,QAAT,EAAmB,CAAnB,CAAZ;AACA,YAAIV,QAAQ,GAAZ,EAAiB;AACfU,qBAAWA,SAAStX,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;AACA4W,kBAAQE,SAASQ,QAAT,EAAmB,CAAnB,CAAR;AACD;AACD,YAAIA,aAAa,GAAb,KAAqB,KAAKzjB,MAAL,IAAewjB,UAApC,CAAJ,EAAqD;AACnD,eAAKtU,KAAL,CAAW,KAAKpO,GAAL,GAAW,CAAtB,EAAyB,8BAAzB;AACD;AACD,aAAKA,GAAL,IAAY2iB,SAASziB,MAAT,GAAkB,CAA9B;AACA,eAAOI,OAAOC,YAAP,CAAoB0hB,KAApB,CAAP;AACD;AACD,aAAO3hB,OAAOC,YAAP,CAAoB8e,EAApB,CAAP;AA3BF;AA6BD,CAhCD;;AAkCA;;AAEAhB,KAAKiE,WAAL,GAAmB,UAASV,GAAT,EAAc;AAC/B,MAAIS,UAAU,KAAKriB,GAAnB;AACA,MAAIsH,IAAI,KAAKoa,OAAL,CAAa,EAAb,EAAiBE,GAAjB,CAAR;AACA,MAAIta,MAAM,IAAV,EAAgB,KAAK8G,KAAL,CAAWiU,OAAX,EAAoB,+BAApB;AAChB,SAAO/a,CAAP;AACD,CALD;;AAOA;AACA;AACA;AACA;AACA;;AAEA+W,KAAK+C,SAAL,GAAiB,YAAW;AAC1B,MAAIzU,SAAS,IAAb;;AAEA,OAAK7B,WAAL,GAAmB,KAAnB;AACA,MAAIwB,OAAO,EAAX;AAAA,MAAewC,QAAQ,IAAvB;AAAA,MAA6B0T,aAAa,KAAKxiB,GAA/C;AACA,MAAII,SAAS,KAAKqB,OAAL,CAAa2G,WAAb,IAA4B,CAAzC;AACA,SAAO,KAAKpI,GAAL,GAAW,KAAK6H,KAAL,CAAW3H,MAA7B,EAAqC;AACnC,QAAImf,KAAK1S,OAAOqS,iBAAP,EAAT;AACA,QAAIxe,iBAAiB6e,EAAjB,EAAqBjf,MAArB,CAAJ,EAAkC;AAChCuM,aAAO3M,GAAP,IAAcqf,MAAM,MAAN,GAAe,CAAf,GAAmB,CAAjC;AACD,KAFD,MAEO,IAAIA,OAAO,EAAX,EAAe;AAAE;AACtB1S,aAAO7B,WAAP,GAAqB,IAArB;AACAwB,cAAQK,OAAO9E,KAAP,CAAawD,KAAb,CAAmBmX,UAAnB,EAA+B7V,OAAO3M,GAAtC,CAAR;AACA,UAAI6iB,WAAWlW,OAAO3M,GAAtB;AACA,UAAI2M,OAAO9E,KAAP,CAAa4H,UAAb,CAAwB,EAAE9C,OAAO3M,GAAjC,KAAyC,GAA7C,EAAkD;AAChD2M,eAAOyB,KAAP,CAAazB,OAAO3M,GAApB,EAAyB,2CAAzB;AACF,QAAE2M,OAAO3M,GAAT;AACA,UAAI8iB,MAAMnW,OAAOyV,aAAP,EAAV;AACA,UAAI,CAAC,CAACtT,QAAQ3O,iBAAR,GAA4BK,gBAA7B,EAA+CsiB,GAA/C,EAAoD1iB,MAApD,CAAL,EACEuM,OAAOyB,KAAP,CAAayU,QAAb,EAAuB,wBAAvB;AACFvW,cAAQiU,kBAAkBuC,GAAlB,CAAR;AACAN,mBAAa7V,OAAO3M,GAApB;AACD,KAZM,MAYA;AACL;AACD;AACD8O,YAAQ,KAAR;AACD;AACD,SAAOxC,OAAO,KAAKzE,KAAL,CAAWwD,KAAX,CAAiBmX,UAAjB,EAA6B,KAAKxiB,GAAlC,CAAd;AACD,CA5BD;;AA8BA;AACA;;AAEAqe,KAAKY,QAAL,GAAgB,YAAW;AACzB,MAAI3S,OAAO,KAAK8U,SAAL,EAAX;AACA,MAAInX,OAAOvI,GAAGL,IAAd;AACA,MAAI,CAAC,KAAKI,OAAL,CAAa2G,WAAb,IAA4B,CAA5B,IAAiC,CAAC,KAAK0C,WAAxC,KAAwD,KAAKzL,QAAL,CAAcgB,IAAd,CAAmBiM,IAAnB,CAA5D,EACErC,OAAO1I,aAAa+K,IAAb,CAAP;AACF,SAAO,KAAKwS,WAAL,CAAiB7U,IAAjB,EAAuBqC,IAAvB,CAAP;AACD,CAND;;AAQA,IAAIyW,UAAU,OAAd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASjW,KAAT,CAAejF,KAAf,EAAsBpG,OAAtB,EAA+B;AAC7B,SAAO,IAAI+I,MAAJ,CAAW/I,OAAX,EAAoBoG,KAApB,EAA2BiF,KAA3B,EAAP;AACD;;AAED;AACA;AACA;;AAEA,SAASkW,iBAAT,CAA2Bnb,KAA3B,EAAkC7H,GAAlC,EAAuCyB,OAAvC,EAAgD;AAC9C,MAAI+F,IAAI,IAAIgD,MAAJ,CAAW/I,OAAX,EAAoBoG,KAApB,EAA2B7H,GAA3B,CAAR;AACAwH,IAAEyF,SAAF;AACA,SAAOzF,EAAE0J,eAAF,EAAP;AACD;;AAED;AACA;;AAEA,SAAS+R,SAAT,CAAmBpb,KAAnB,EAA0BpG,OAA1B,EAAmC;AACjC,SAAO,IAAI+I,MAAJ,CAAW/I,OAAX,EAAoBoG,KAApB,CAAP;AACD;;QAEQkb,O,GAAAA,O;QAASjW,K,GAAAA,K;QAAOkW,iB,GAAAA,iB;QAAmBC,S,GAAAA,S;QAAWzY,M,GAAAA,M;QAAQrB,O,GAAAA,O;QAAShB,c,GAAAA,c;QAAgBlB,Q,GAAAA,Q;QAAUM,c,GAAAA,c;QAAgBK,W,GAAAA,W;QAAaiV,I,GAAAA,I;QAAMpc,S,GAAAA,S;QAAiByiB,Q,GAANxhB,E;QAAgBsb,U,GAAAA,U;QAAqBmG,W,GAAT/F,K;QAAsB5c,gB,GAAAA,gB;QAAkBL,iB,GAAAA,iB;QAAmBie,K,GAAAA,K;QAAO/X,S,GAAAA,S;QAAWH,S,GAAAA,S;QAAWC,U,GAAAA,U","file":"acorn.es.js","sourcesContent":["// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  7: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n}\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n}\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541]\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239]\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36\n  if (code < 58) return true\n  if (code < 65) return false\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label\n  this.keyword = conf.keyword\n  this.beforeExpr = !!conf.beforeExpr\n  this.startsExpr = !!conf.startsExpr\n  this.isLoop = !!conf.isLoop\n  this.isAssign = !!conf.isAssign\n  this.prefix = !!conf.prefix\n  this.postfix = !!conf.postfix\n  this.binop = conf.binop || null\n  this.updateContext = null\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n// Map keyword names to token types.\n\nvar keywordTypes = {}\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name\n  return keywordTypes[name] = new TokenType(name, options)\n}\n\nvar tt = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"prefix\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\"),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n}\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/\nvar lineBreakG = new RegExp(lineBreak.source, \"g\")\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code == 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Array]\"\n}\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName)\n}\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line\n  this.column = col\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start\n  this.end = end\n  if (p.sourceFile !== null) this.source = p.sourceFile\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur\n    var match = lineBreakG.exec(input)\n    if (match && match.index < offset) {\n      ++line\n      cur = match.index + match[0].length\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, or 5, or 6. This influences support for strict\n  // mode, the set of reserved words, support for getters and\n  // setters and other features. The default is 6.\n  ecmaVersion: 6,\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n}\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {}\n  for (var opt in defaultOptions)\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]\n  if (options.allowReserved == null)\n    options.allowReserved = options.ecmaVersion < 5\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken\n    options.onToken = function (token) { return tokens.push(token); }\n  }\n  if (isArray(options.onComment))\n    options.onComment = pushComment(options, options.onComment)\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? 'Block' : 'Line',\n      value: text,\n      start: start,\n      end: end\n    }\n    if (options.locations)\n      comment.loc = new SourceLocation(this, startLoc, endLoc)\n    if (options.ranges)\n      comment.range = [start, end]\n    array.push(comment)\n  }\n}\n\n// Registered plugins\nvar plugins = {}\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options)\n  this.sourceFile = options.sourceFile\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5])\n  var reserved = options.allowReserved ? \"\" :\n      reservedWords[options.ecmaVersion] + (options.sourceType == \"module\" ? \" await\" : \"\")\n  this.reservedWords = keywordRegexp(reserved)\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict\n  this.reservedWordsStrict = keywordRegexp(reservedStrict)\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind)\n  this.input = String(input)\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false\n\n  // Load plugins\n  this.loadPlugins(options.plugins)\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos\n    this.lineStart = Math.max(0, this.input.lastIndexOf(\"\\n\", startPos))\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length\n  } else {\n    this.pos = this.lineStart = 0\n    this.curLine = 1\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = tt.eof\n  // For tokens that include more information than their type, the value\n  this.value = null\n  // Its start and end offset\n  this.start = this.end = this.pos\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition()\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null\n  this.lastTokStart = this.lastTokEnd = this.pos\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext()\n  this.exprAllowed = true\n\n  // Figure out if it's a module code.\n  this.strict = this.inModule = options.sourceType === \"module\"\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1\n\n  // Flags to track whether we are in a function, a generator.\n  this.inFunction = this.inGenerator = false\n  // Labels in scope.\n  this.labels = []\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === '#!')\n    this.skipLineComment(2)\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode()\n  this.nextToken()\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype\n\n// ## Parser utilities\n\n// Test whether a statement node is the string literal `\"use strict\"`.\n\npp.isUseStrict = function(stmt) {\n  return this.options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n    stmt.expression.type === \"Literal\" &&\n    stmt.expression.raw.slice(1, -1) === \"use strict\"\n}\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n}\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === tt.name && this.value === name\n}\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(tt.name)\n}\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) this.unexpected()\n}\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === tt.eof ||\n    this.type === tt.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n}\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc)\n    return true\n  }\n}\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected()\n}\n\npp.afterTrailingComma = function(tokType) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc)\n    this.next()\n    return true\n  }\n}\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected()\n}\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\")\n}\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign = 0\n  this.trailingComma = 0\n};\n\npp.checkPatternErrors = function(refDestructuringErrors, andThrow) {\n  var trailing = refDestructuringErrors && refDestructuringErrors.trailingComma\n  if (!andThrow) return !!trailing\n  if (trailing) this.raise(trailing, \"Comma is not permitted after the rest element\")\n}\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors && refDestructuringErrors.shorthandAssign\n  if (!andThrow) return !!pos\n  if (pos) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\")\n}\n\nvar pp$1 = Parser.prototype\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var first = true\n  if (!node.body) node.body = []\n  while (this.type !== tt.eof) {\n    var stmt = this$1.parseStatement(true, true)\n    node.body.push(stmt)\n    if (first) {\n      if (this$1.isUseStrict(stmt)) this$1.setStrict(true)\n      first = false\n    }\n  }\n  this.next()\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\npp$1.isLet = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false\n  skipWhiteSpace.lastIndex = this.pos\n  var skip = skipWhiteSpace.exec(this.input)\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next)\n  if (nextCh === 91 || nextCh == 123) return true // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    for (var pos = next + 1; isIdentifierChar(this.input.charCodeAt(pos), true); ++pos) {}\n    var ident = this.input.slice(next, pos)\n    if (!this.isKeyword(ident)) return true\n  }\n  return false\n}\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel) {\n  var starttype = this.type, node = this.startNode(), kind\n\n  if (this.isLet()) {\n    starttype = tt._var\n    kind = \"let\"\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case tt._break: case tt._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case tt._debugger: return this.parseDebuggerStatement(node)\n  case tt._do: return this.parseDoStatement(node)\n  case tt._for: return this.parseForStatement(node)\n  case tt._function:\n    if (!declaration && this.options.ecmaVersion >= 6) this.unexpected()\n    return this.parseFunctionStatement(node)\n  case tt._class:\n    if (!declaration) this.unexpected()\n    return this.parseClass(node, true)\n  case tt._if: return this.parseIfStatement(node)\n  case tt._return: return this.parseReturnStatement(node)\n  case tt._switch: return this.parseSwitchStatement(node)\n  case tt._throw: return this.parseThrowStatement(node)\n  case tt._try: return this.parseTryStatement(node)\n  case tt._const: case tt._var:\n    kind = kind || this.value\n    if (!declaration && kind != \"var\") this.unexpected()\n    return this.parseVarStatement(node, kind)\n  case tt._while: return this.parseWhileStatement(node)\n  case tt._with: return this.parseWithStatement(node)\n  case tt.braceL: return this.parseBlock()\n  case tt.semi: return this.parseEmptyStatement(node)\n  case tt._export:\n  case tt._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        this.raise(this.start, \"'import' and 'export' may only appear at the top level\")\n      if (!this.inModule)\n        this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")\n    }\n    return starttype === tt._import ? this.parseImport(node) : this.parseExport(node)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    var maybeName = this.value, expr = this.parseExpression()\n    if (starttype === tt.name && expr.type === \"Identifier\" && this.eat(tt.colon))\n      return this.parseLabeledStatement(node, maybeName, expr)\n    else return this.parseExpressionStatement(node, expr)\n  }\n}\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\"\n  this.next()\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null\n  else if (this.type !== tt.name) this.unexpected()\n  else {\n    node.label = this.parseIdent()\n    this.semicolon()\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  for (var i = 0; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i]\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break\n      if (node.label && isBreak) break\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword)\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n}\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next()\n  this.semicolon()\n  return this.finishNode(node, \"DebuggerStatement\")\n}\n\npp$1.parseDoStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  this.expect(tt._while)\n  node.test = this.parseParenExpression()\n  if (this.options.ecmaVersion >= 6)\n    this.eat(tt.semi)\n  else\n    this.semicolon()\n  return this.finishNode(node, \"DoWhileStatement\")\n}\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  this.expect(tt.parenL)\n  if (this.type === tt.semi) return this.parseFor(node, null)\n  var isLet = this.isLet()\n  if (this.type === tt._var || this.type === tt._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value\n    this.next()\n    this.parseVar(init$1, true, kind)\n    this.finishNode(init$1, \"VariableDeclaration\")\n    if ((this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      return this.parseForIn(node, init$1)\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors\n  var init = this.parseExpression(true, refDestructuringErrors)\n  if (this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.checkPatternErrors(refDestructuringErrors, true)\n    this.toAssignable(init)\n    this.checkLVal(init)\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return this.parseFor(node, init)\n}\n\npp$1.parseFunctionStatement = function(node) {\n  this.next()\n  return this.parseFunction(node, true)\n}\n\npp$1.parseIfStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  node.consequent = this.parseStatement(false)\n  node.alternate = this.eat(tt._else) ? this.parseStatement(false) : null\n  return this.finishNode(node, \"IfStatement\")\n}\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    this.raise(this.start, \"'return' outside of function\")\n  this.next()\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null\n  else { node.argument = this.parseExpression(); this.semicolon() }\n  return this.finishNode(node, \"ReturnStatement\")\n}\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next()\n  node.discriminant = this.parseParenExpression()\n  node.cases = []\n  this.expect(tt.braceL)\n  this.labels.push(switchLabel)\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  for (var cur, sawDefault = false; this.type != tt.braceR;) {\n    if (this$1.type === tt._case || this$1.type === tt._default) {\n      var isCase = this$1.type === tt._case\n      if (cur) this$1.finishNode(cur, \"SwitchCase\")\n      node.cases.push(cur = this$1.startNode())\n      cur.consequent = []\n      this$1.next()\n      if (isCase) {\n        cur.test = this$1.parseExpression()\n      } else {\n        if (sawDefault) this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\")\n        sawDefault = true\n        cur.test = null\n      }\n      this$1.expect(tt.colon)\n    } else {\n      if (!cur) this$1.unexpected()\n      cur.consequent.push(this$1.parseStatement(true))\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\")\n  this.next() // Closing brace\n  this.labels.pop()\n  return this.finishNode(node, \"SwitchStatement\")\n}\n\npp$1.parseThrowStatement = function(node) {\n  this.next()\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\")\n  node.argument = this.parseExpression()\n  this.semicolon()\n  return this.finishNode(node, \"ThrowStatement\")\n}\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = []\n\npp$1.parseTryStatement = function(node) {\n  this.next()\n  node.block = this.parseBlock()\n  node.handler = null\n  if (this.type === tt._catch) {\n    var clause = this.startNode()\n    this.next()\n    this.expect(tt.parenL)\n    clause.param = this.parseBindingAtom()\n    this.checkLVal(clause.param, true)\n    this.expect(tt.parenR)\n    clause.body = this.parseBlock()\n    node.handler = this.finishNode(clause, \"CatchClause\")\n  }\n  node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null\n  if (!node.handler && !node.finalizer)\n    this.raise(node.start, \"Missing catch or finally clause\")\n  return this.finishNode(node, \"TryStatement\")\n}\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next()\n  this.parseVar(node, false, kind)\n  this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\npp$1.parseWhileStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"WhileStatement\")\n}\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\")\n  this.next()\n  node.object = this.parseParenExpression()\n  node.body = this.parseStatement(false)\n  return this.finishNode(node, \"WithStatement\")\n}\n\npp$1.parseEmptyStatement = function(node) {\n  this.next()\n  return this.finishNode(node, \"EmptyStatement\")\n}\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i = 0; i < this.labels.length; ++i)\n    if (this$1.labels[i].name === maybeName) this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\")\n  var kind = this.type.isLoop ? \"loop\" : this.type === tt._switch ? \"switch\" : null\n  for (var i$1 = this.labels.length - 1; i$1 >= 0; i$1--) {\n    var label = this$1.labels[i$1]\n    if (label.statementStart == node.start) {\n      label.statementStart = this$1.start\n      label.kind = kind\n    } else break\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start})\n  node.body = this.parseStatement(true)\n  this.labels.pop()\n  node.label = expr\n  return this.finishNode(node, \"LabeledStatement\")\n}\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr\n  this.semicolon()\n  return this.finishNode(node, \"ExpressionStatement\")\n}\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(allowStrict) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, oldStrict\n  node.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    var stmt = this$1.parseStatement(true)\n    node.body.push(stmt)\n    if (first && allowStrict && this$1.isUseStrict(stmt)) {\n      oldStrict = this$1.strict\n      this$1.setStrict(this$1.strict = true)\n    }\n    first = false\n  }\n  if (oldStrict === false) this.setStrict(false)\n  return this.finishNode(node, \"BlockStatement\")\n}\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init\n  this.expect(tt.semi)\n  node.test = this.type === tt.semi ? null : this.parseExpression()\n  this.expect(tt.semi)\n  node.update = this.type === tt.parenR ? null : this.parseExpression()\n  this.expect(tt.parenR)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"ForStatement\")\n}\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === tt._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.expect(tt.parenR)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, type)\n}\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = []\n  node.kind = kind\n  for (;;) {\n    var decl = this$1.startNode()\n    this$1.parseVarId(decl)\n    if (this$1.eat(tt.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor)\n    } else if (kind === \"const\" && !(this$1.type === tt._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected()\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === tt._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\")\n    } else {\n      decl.init = null\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n    if (!this$1.eat(tt.comma)) break\n  }\n  return node\n}\n\npp$1.parseVarId = function(decl) {\n  decl.id = this.parseBindingAtom()\n  this.checkLVal(decl.id, true)\n}\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody) {\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = this.eat(tt.star)\n  var oldInGen = this.inGenerator\n  this.inGenerator = node.generator\n  if (isStatement || this.type === tt.name)\n    node.id = this.parseIdent()\n  this.parseFunctionParams(node)\n  this.parseFunctionBody(node, allowExpressionBody)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, false, true)\n}\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next()\n  this.parseClassId(node, isStatement)\n  this.parseClassSuper(node)\n  var classBody = this.startNode()\n  var hadConstructor = false\n  classBody.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (this$1.eat(tt.semi)) continue\n    var method = this$1.startNode()\n    var isGenerator = this$1.eat(tt.star)\n    var isMaybeStatic = this$1.type === tt.name && this$1.value === \"static\"\n    this$1.parsePropertyName(method)\n    method.static = isMaybeStatic && this$1.type !== tt.parenL\n    if (method.static) {\n      if (isGenerator) this$1.unexpected()\n      isGenerator = this$1.eat(tt.star)\n      this$1.parsePropertyName(method)\n    }\n    method.kind = \"method\"\n    var isGetSet = false\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && key.type === \"Identifier\" && this$1.type !== tt.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true\n        method.kind = key.name\n        key = this$1.parsePropertyName(method)\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this$1.raise(key.start, \"Duplicate constructor in the same class\")\n        if (isGetSet) this$1.raise(key.start, \"Constructor can't have get/set modifier\")\n        if (isGenerator) this$1.raise(key.start, \"Constructor can't be a generator\")\n        method.kind = \"constructor\"\n        hadConstructor = true\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator)\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start\n        if (method.kind === \"get\")\n          this$1.raiseRecoverable(start, \"getter should have no params\")\n        else\n          this$1.raiseRecoverable(start, \"setter should have exactly one param\")\n      }\n      if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n        this$1.raise(method.value.params[0].start, \"Setter cannot use rest params\")\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\npp$1.parseClassMethod = function(classBody, method, isGenerator) {\n  method.value = this.parseMethod(isGenerator)\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"))\n}\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === tt.name ? this.parseIdent() : isStatement ? this.unexpected() : null\n}\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null\n}\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node) {\n  var this$1 = this;\n\n  this.next()\n  // export * from '...'\n  if (this.eat(tt.star)) {\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    this.semicolon()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tt._default)) { // export default ...\n    var parens = this.type == tt.parenL\n    var expr = this.parseMaybeAssign()\n    var needsSemi = true\n    if (!parens && (expr.type == \"FunctionExpression\" ||\n                    expr.type == \"ClassExpression\")) {\n      needsSemi = false\n      if (expr.id) {\n        expr.type = expr.type == \"FunctionExpression\"\n          ? \"FunctionDeclaration\"\n          : \"ClassDeclaration\"\n      }\n    }\n    node.declaration = expr\n    if (needsSemi) this.semicolon()\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true)\n    node.specifiers = []\n    node.source = null\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifiers()\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    } else {\n      // check for keywords used as local names\n      for (var i = 0; i < node.specifiers.length; i++) {\n        if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {\n          this$1.unexpected(node.specifiers[i].local.start)\n        }\n      }\n\n      node.source = null\n    }\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword || this.isLet()\n}\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  // export { x, y as z } [from '...']\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node = this$1.startNode()\n    node.local = this$1.parseIdent(this$1.type === tt._default)\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"))\n  }\n  return nodes\n}\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next()\n  // import '...'\n  if (this.type === tt.string) {\n    node.specifiers = empty\n    node.source = this.parseExprAtom()\n  } else {\n    node.specifiers = this.parseImportSpecifiers()\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  if (this.type === tt.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode()\n    node.local = this.parseIdent()\n    this.checkLVal(node.local, true)\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"))\n    if (!this.eat(tt.comma)) return nodes\n  }\n  if (this.type === tt.star) {\n    var node$1 = this.startNode()\n    this.next()\n    this.expectContextual(\"as\")\n    node$1.local = this.parseIdent()\n    this.checkLVal(node$1.local, true)\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"))\n    return nodes\n  }\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node$2 = this$1.startNode()\n    node$2.imported = this$1.parseIdent(true)\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent()\n    } else {\n      node$2.local = node$2.imported\n      if (this$1.isKeyword(node$2.local.name)) this$1.unexpected(node$2.local.start)\n      if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raise(node$2.local.start, \"The keyword '\" + node$2.local.name + \"' is reserved\")\n    }\n    this$1.checkLVal(node$2.local, true)\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"))\n  }\n  return nodes\n}\n\nvar pp$2 = Parser.prototype\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\"\n      for (var i = 0; i < node.properties.length; i++) {\n        var prop = node.properties[i]\n        if (prop.kind !== \"init\") this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\")\n        this$1.toAssignable(prop.value, isBinding)\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\"\n      this.toAssignableList(node.elements, isBinding)\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\"\n        delete node.operator\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\")\n        break\n      }\n\n    case \"AssignmentPattern\":\n      if (node.right.type === \"YieldExpression\")\n        this.raise(node.right.start, \"Yield expression cannot be a default value\")\n      break\n\n    case \"ParenthesizedExpression\":\n      node.expression = this.toAssignable(node.expression, isBinding)\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) break\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\")\n    }\n  }\n  return node\n}\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length\n  if (end) {\n    var last = exprList[end - 1]\n    if (last && last.type == \"RestElement\") {\n      --end\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\"\n      var arg = last.argument\n      this.toAssignable(arg, isBinding)\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\")\n        this.unexpected(arg.start)\n      --end\n    }\n\n    if (isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      this.unexpected(last.argument.start)\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i]\n    if (elt) this$1.toAssignable(elt, isBinding)\n  }\n  return exprList\n}\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors)\n  return this.finishNode(node, \"SpreadElement\")\n}\n\npp$2.parseRest = function(allowNonIdent) {\n  var node = this.startNode()\n  this.next()\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()\n  else node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected()\n\n  return this.finishNode(node, \"RestElement\")\n}\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion < 6) return this.parseIdent()\n  switch (this.type) {\n  case tt.name:\n    return this.parseIdent()\n\n  case tt.bracketL:\n    var node = this.startNode()\n    this.next()\n    node.elements = this.parseBindingList(tt.bracketR, true, true)\n    return this.finishNode(node, \"ArrayPattern\")\n\n  case tt.braceL:\n    return this.parseObj(true)\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (first) first = false\n    else this$1.expect(tt.comma)\n    if (allowEmpty && this$1.type === tt.comma) {\n      elts.push(null)\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === tt.ellipsis) {\n      var rest = this$1.parseRest(allowNonIdent)\n      this$1.parseBindingListItem(rest)\n      elts.push(rest)\n      if (this$1.type === tt.comma) this$1.raise(this$1.start, \"Comma is not permitted after the rest element\")\n      this$1.expect(close)\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc)\n      this$1.parseBindingListItem(elem)\n      elts.push(elem)\n    }\n  }\n  return elts\n}\n\npp$2.parseBindingListItem = function(param) {\n  return param\n}\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom()\n  if (this.options.ecmaVersion < 6 || !this.eat(tt.eq)) return left\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.right = this.parseMaybeAssign()\n  return this.finishNode(node, \"AssignmentPattern\")\n}\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp$2.checkLVal = function(expr, isBinding, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      this.raiseRecoverable(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\")\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        this.raiseRecoverable(expr.start, \"Argument name clash\")\n      checkClashes[expr.name] = true\n    }\n    break\n\n  case \"MemberExpression\":\n    if (isBinding) this.raiseRecoverable(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\")\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0; i < expr.properties.length; i++)\n      this$1.checkLVal(expr.properties[i].value, isBinding, checkClashes)\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0; i$1 < expr.elements.length; i$1++) {\n      var elem = expr.elements[i$1]\n      if (elem) this$1.checkLVal(elem, isBinding, checkClashes)\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, isBinding, checkClashes)\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, isBinding, checkClashes)\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, isBinding, checkClashes)\n    break\n\n  default:\n    this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" rvalue\")\n  }\n}\n\nvar pp$3 = Parser.prototype\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    return\n  var key = prop.key;\n  var name\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\")\n      propHash.proto = true\n    }\n    return\n  }\n  name = \"$\" + name\n  var other = propHash[name]\n  if (other) {\n    var isGetSet = kind !== \"init\"\n    if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init))\n      this.raiseRecoverable(key.start, \"Redefinition of property\")\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    }\n  }\n  other[kind] = true\n}\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors)\n  if (this.type === tt.comma) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.expressions = [expr]\n    while (this.eat(tt.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield()\n\n  var ownDestructuringErrors = false\n  if (!refDestructuringErrors) {\n    refDestructuringErrors = new DestructuringErrors\n    ownDestructuringErrors = true\n  }\n  var startPos = this.start, startLoc = this.startLoc\n  if (this.type == tt.parenL || this.type == tt.name)\n    this.potentialArrowAt = this.start\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors)\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc)\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true)\n    if (!ownDestructuringErrors) DestructuringErrors.call(refDestructuringErrors)\n    var node = this.startNodeAt(startPos, startLoc)\n    node.operator = this.value\n    node.left = this.type === tt.eq ? this.toAssignable(left) : left\n    refDestructuringErrors.shorthandAssign = 0 // reset because shorthand default was used correctly\n    this.checkLVal(left)\n    this.next()\n    node.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return left\n}\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprOps(noIn, refDestructuringErrors)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  if (this.eat(tt.question)) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    this.expect(tt.colon)\n    node.alternate = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  return this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n}\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop\n  if (prec != null && (!noIn || this.type !== tt._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === tt.logicalOR || this.type === tt.logicalAND\n      var op = this.value\n      this.next()\n      var startPos = this.start, startLoc = this.startLoc\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn)\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical)\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n}\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.operator = op\n  node.right = right\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n}\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr\n  if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === tt.incDec\n    node.operator = this.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(null, true)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    if (update) this.checkLVal(node.argument)\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\")\n    else sawUnary = true\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors)\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.operator = this$1.value\n      node$1.prefix = false\n      node$1.argument = expr\n      this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$1, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tt.starstar))\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false)\n  else\n    return expr\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprAtom(refDestructuringErrors)\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\"\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr\n  return this.parseSubscripts(expr, startPos, startLoc)\n}\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  for (;;) {\n    if (this$1.eat(tt.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.property = this$1.parseIdent(true)\n      node.computed = false\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (this$1.eat(tt.bracketL)) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.object = base\n      node$1.property = this$1.parseExpression()\n      node$1.computed = true\n      this$1.expect(tt.bracketR)\n      base = this$1.finishNode(node$1, \"MemberExpression\")\n    } else if (!noCalls && this$1.eat(tt.parenL)) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc)\n      node$2.callee = base\n      node$2.arguments = this$1.parseExprList(tt.parenR, false)\n      base = this$1.finishNode(node$2, \"CallExpression\")\n    } else if (this$1.type === tt.backQuote) {\n      var node$3 = this$1.startNodeAt(startPos, startLoc)\n      node$3.tag = base\n      node$3.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$3, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start\n  switch (this.type) {\n  case tt._super:\n    if (!this.inFunction)\n      this.raise(this.start, \"'super' outside of function or class\")\n\n  case tt._this:\n    var type = this.type === tt._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tt.name:\n    var startPos = this.start, startLoc = this.startLoc\n    var id = this.parseIdent(this.type !== tt.name)\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow))\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id])\n    return id\n\n  case tt.regexp:\n    var value = this.value\n    node = this.parseLiteral(value.value)\n    node.regex = {pattern: value.pattern, flags: value.flags}\n    return node\n\n  case tt.num: case tt.string:\n    return this.parseLiteral(this.value)\n\n  case tt._null: case tt._true: case tt._false:\n    node = this.startNode()\n    node.value = this.type === tt._null ? null : this.type === tt._true\n    node.raw = this.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tt.parenL:\n    return this.parseParenAndDistinguishExpression(canBeArrow)\n\n  case tt.bracketL:\n    node = this.startNode()\n    this.next()\n    node.elements = this.parseExprList(tt.bracketR, true, true, refDestructuringErrors)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tt.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case tt._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tt._class:\n    return this.parseClass(this.startNode(), false)\n\n  case tt._new:\n    return this.parseNew()\n\n  case tt.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode()\n  node.value = value\n  node.raw = this.input.slice(this.start, this.end)\n  this.next()\n  return this.finishNode(node, \"Literal\")\n}\n\npp$3.parseParenExpression = function() {\n  this.expect(tt.parenL)\n  var val = this.parseExpression()\n  this.expect(tt.parenR)\n  return val\n}\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val\n  if (this.options.ecmaVersion >= 6) {\n    this.next()\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc\n    var exprList = [], first = true\n    var refDestructuringErrors = new DestructuringErrors, spreadStart, innerParenStart\n    while (this.type !== tt.parenR) {\n      first ? first = false : this$1.expect(tt.comma)\n      if (this$1.type === tt.ellipsis) {\n        spreadStart = this$1.start\n        exprList.push(this$1.parseParenItem(this$1.parseRest()))\n        break\n      } else {\n        if (this$1.type === tt.parenL && !innerParenStart) {\n          innerParenStart = this$1.start\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem))\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc\n    this.expect(tt.parenR)\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, true)\n      if (innerParenStart) this.unexpected(innerParenStart)\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length) this.unexpected(this.lastTokStart)\n    if (spreadStart) this.unexpected(spreadStart)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc)\n      val.expressions = exprList\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc)\n    } else {\n      val = exprList[0]\n    }\n  } else {\n    val = this.parseParenExpression()\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc)\n    par.expression = val\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n}\n\npp$3.parseParenItem = function(item) {\n  return item\n}\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n}\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = []\n\npp$3.parseNew = function() {\n  var node = this.startNode()\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    if (node.property.name !== \"target\")\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\")\n    if (!this.inFunction)\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\")\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true)\n  if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, false)\n  else node.arguments = empty$1\n  return this.finishNode(node, \"NewExpression\")\n}\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, '\\n'),\n    cooked: this.value\n  }\n  this.next()\n  elem.tail = this.type === tt.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\npp$3.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.expect(tt.dollarBraceL)\n    node.expressions.push(this$1.parseExpression())\n    this$1.expect(tt.braceR)\n    node.quasis.push(curElt = this$1.parseTemplateElement())\n  }\n  this.next()\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {}\n  node.properties = []\n  this.next()\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var prop = this$1.startNode(), isGenerator, startPos, startLoc\n    if (this$1.options.ecmaVersion >= 6) {\n      prop.method = false\n      prop.shorthand = false\n      if (isPattern || refDestructuringErrors) {\n        startPos = this$1.start\n        startLoc = this$1.startLoc\n      }\n      if (!isPattern)\n        isGenerator = this$1.eat(tt.star)\n    }\n    this$1.parsePropertyName(prop)\n    this$1.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors)\n    this$1.checkPropClash(prop, propHash)\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n}\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {\n  if (this.eat(tt.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors)\n    prop.kind = \"init\"\n  } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {\n    if (isPattern) this.unexpected()\n    prop.kind = \"init\"\n    prop.method = true\n    prop.value = this.parseMethod(isGenerator)\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != tt.comma && this.type != tt.braceR)) {\n    if (isGenerator || isPattern) this.unexpected()\n    prop.kind = prop.key.name\n    this.parsePropertyName(prop)\n    prop.value = this.parseMethod(false)\n    var paramCount = prop.kind === \"get\" ? 0 : 1\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start\n      if (prop.kind === \"get\")\n        this.raiseRecoverable(start, \"getter should have no params\")\n      else\n        this.raiseRecoverable(start, \"setter should have exactly one param\")\n    }\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n      this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\")\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (this.keywords.test(prop.key.name) ||\n        (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||\n        (this.inGenerator && prop.key.name == \"yield\"))\n      this.raiseRecoverable(prop.key.start, \"'\" + prop.key.name + \"' can not be used as shorthand property\")\n    prop.kind = \"init\"\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else if (this.type === tt.eq && refDestructuringErrors) {\n      if (!refDestructuringErrors.shorthandAssign)\n        refDestructuringErrors.shorthandAssign = this.start\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else {\n      prop.value = prop.key\n    }\n    prop.shorthand = true\n  } else this.unexpected()\n}\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tt.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseMaybeAssign()\n      this.expect(tt.bracketR)\n      return prop.key\n    } else {\n      prop.computed = false\n    }\n  }\n  return prop.key = this.type === tt.num || this.type === tt.string ? this.parseExprAtom() : this.parseIdent(true)\n}\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n}\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator) {\n  var node = this.startNode(), oldInGen = this.inGenerator\n  this.inGenerator = isGenerator\n  this.initFunction(node)\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, false)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = isGenerator\n  this.parseFunctionBody(node, false)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params) {\n  var oldInGen = this.inGenerator\n  this.inGenerator = false\n  this.initFunction(node)\n  node.params = this.toAssignableList(params, true)\n  this.parseFunctionBody(node, true)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== tt.braceL\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign()\n    node.expression = true\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.inFunction, oldLabels = this.labels\n    this.inFunction = true; this.labels = []\n    node.body = this.parseBlock(true)\n    node.expression = false\n    this.inFunction = oldInFunc; this.labels = oldLabels\n  }\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  var useStrict = (!isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) ? node.body.body[0] : null;\n  if (this.strict || useStrict) {\n    var oldStrict = this.strict\n    this.strict = true\n    if (node.id)\n      this.checkLVal(node.id, true)\n    this.checkParams(node, useStrict)\n    this.strict = oldStrict\n  } else if (isArrowFunction) {\n    this.checkParams(node, useStrict)\n  }\n}\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, useStrict) {\n    var this$1 = this;\n\n    var nameHash = {}\n    for (var i = 0; i < node.params.length; i++) {\n      if (useStrict && this$1.options.ecmaVersion >= 7 && node.params[i].type !== \"Identifier\")\n        this$1.raiseRecoverable(useStrict.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n      this$1.checkLVal(node.params[i], true, nameHash)\n    }\n}\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) break\n    } else first = false\n\n    var elt\n    if (allowEmpty && this$1.type === tt.comma)\n      elt = null\n    else if (this$1.type === tt.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors)\n      if (this$1.type === tt.comma && refDestructuringErrors && !refDestructuringErrors.trailingComma) {\n        refDestructuringErrors.trailingComma = this$1.lastTokStart\n      }\n    } else\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors)\n    elts.push(elt)\n  }\n  return elts\n}\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal) {\n  var node = this.startNode()\n  if (liberal && this.options.allowReserved == \"never\") liberal = false\n  if (this.type === tt.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&\n        (this.options.ecmaVersion >= 6 ||\n         this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1))\n      this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\")\n    if (!liberal && this.inGenerator && this.value === \"yield\")\n      this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\")\n    node.name = this.value\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword\n  } else {\n    this.unexpected()\n  }\n  this.next()\n  return this.finishNode(node, \"Identifier\")\n}\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  var node = this.startNode()\n  this.next()\n  if (this.type == tt.semi || this.canInsertSemicolon() || (this.type != tt.star && !this.type.startsExpr)) {\n    node.delegate = false\n    node.argument = null\n  } else {\n    node.delegate = this.eat(tt.star)\n    node.argument = this.parseMaybeAssign()\n  }\n  return this.finishNode(node, \"YieldExpression\")\n}\n\nvar pp$4 = Parser.prototype\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos)\n  message += \" (\" + loc.line + \":\" + loc.column + \")\"\n  var err = new SyntaxError(message)\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos\n  throw err\n}\n\npp$4.raiseRecoverable = pp$4.raise\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n}\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\"\n  this.start = pos\n  this.end = 0\n  if (parser.options.locations)\n    this.loc = new SourceLocation(parser, loc)\n  if (parser.options.directSourceFile)\n    this.sourceFile = parser.options.directSourceFile\n  if (parser.options.ranges)\n    this.range = [pos, 0]\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$5 = Parser.prototype\n\npp$5.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n}\n\npp$5.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type\n  node.end = pos\n  if (this.options.locations)\n    node.loc.end = loc\n  if (this.options.ranges)\n    node.range[1] = pos\n  return node\n}\n\npp$5.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n}\n\n// Finish node at given position\n\npp$5.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n}\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  this.token = token\n  this.isExpr = !!isExpr\n  this.preserveSpace = !!preserveSpace\n  this.override = override\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.readTmplToken(); }),\n  f_expr: new TokContext(\"function\", true)\n}\n\nvar pp$6 = Parser.prototype\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n}\n\npp$6.braceIsBlock = function(prevType) {\n  if (prevType === tt.colon) {\n    var parent = this.curContext()\n    if (parent === types.b_stat || parent === types.b_expr)\n      return !parent.isExpr\n  }\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  var out = this.context.pop()\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&\n      !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type\n  this.value = p.value\n  this.start = p.start\n  this.end = p.end\n  if (p.options.locations)\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc)\n  if (p.options.ranges)\n    this.range = [p.start, p.end]\n};\n\n// ## Tokenizer\n\nvar pp$7 = Parser.prototype\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"\n\n// Move to the next token\n\npp$7.next = function() {\n  if (this.options.onToken)\n    this.options.onToken(new Token(this))\n\n  this.lastTokEnd = this.end\n  this.lastTokStart = this.start\n  this.lastTokEndLoc = this.endLoc\n  this.lastTokStartLoc = this.startLoc\n  this.nextToken()\n}\n\npp$7.getToken = function() {\n  this.next()\n  return new Token(this)\n}\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  pp$7[Symbol.iterator] = function () {\n    var self = this\n    return {next: function () {\n      var token = self.getToken()\n      return {\n        done: token.type === tt.eof,\n        value: token\n      }\n    }}\n  }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$7.setStrict = function(strict) {\n  var this$1 = this;\n\n  this.strict = strict\n  if (this.type !== tt.num && this.type !== tt.string) return\n  this.pos = this.start\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this$1.lineStart = this$1.input.lastIndexOf(\"\\n\", this$1.lineStart - 2) + 1\n      --this$1.curLine\n    }\n  }\n  this.nextToken()\n}\n\npp$7.curContext = function() {\n  return this.context[this.context.length - 1]\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$7.nextToken = function() {\n  var curContext = this.curContext()\n  if (!curContext || !curContext.preserveSpace) this.skipSpace()\n\n  this.start = this.pos\n  if (this.options.locations) this.startLoc = this.curPosition()\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof)\n\n  if (curContext.override) return curContext.override(this)\n  else this.readToken(this.fullCharCodeAtPos())\n}\n\npp$7.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    return this.readWord()\n\n  return this.getTokenFromCode(code)\n}\n\npp$7.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n  var next = this.input.charCodeAt(this.pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\npp$7.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition()\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2)\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\")\n  this.pos = end + 2\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start\n    var match\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine\n      this$1.lineStart = match.index + match[0].length\n    }\n  }\n  if (this.options.onComment)\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\npp$7.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos\n  var startLoc = this.options.onComment && this.curPosition()\n  var ch = this.input.charCodeAt(this.pos+=startSkip)\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this$1.pos\n    ch = this$1.input.charCodeAt(this$1.pos)\n  }\n  if (this.options.onComment)\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$7.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    switch (ch) {\n      case 32: case 160: // ' '\n        ++this$1.pos\n        break\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n          ++this$1.pos\n        }\n      case 10: case 8232: case 8233:\n        ++this$1.pos\n        if (this$1.options.locations) {\n          ++this$1.curLine\n          this$1.lineStart = this$1.pos\n        }\n        break\n      case 47: // '/'\n        switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n          case 42: // '*'\n            this$1.skipBlockComment()\n            break\n          case 47:\n            this$1.skipLineComment(2)\n            break\n          default:\n            break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this$1.pos\n        } else {\n          break loop\n        }\n    }\n  }\n}\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$7.finishToken = function(type, val) {\n  this.end = this.pos\n  if (this.options.locations) this.endLoc = this.curPosition()\n  var prevType = this.type\n  this.type = type\n  this.value = val\n\n  this.updateContext(prevType)\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$7.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next >= 48 && next <= 57) return this.readNumber(true)\n  var next2 = this.input.charCodeAt(this.pos + 2)\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3\n    return this.finishToken(tt.ellipsis)\n  } else {\n    ++this.pos\n    return this.finishToken(tt.dot)\n  }\n}\n\npp$7.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (this.exprAllowed) {++this.pos; return this.readRegexp()}\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.slash, 1)\n}\n\npp$7.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  var tokentype = code === 42 ? tt.star : tt.modulo\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size\n    tokentype = tt.starstar\n    next = this.input.charCodeAt(this.pos + 2)\n  }\n\n  if (next === 61) return this.finishOp(tt.assign, size + 1)\n  return this.finishOp(tokentype, size)\n}\n\npp$7.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)\n}\n\npp$7.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.bitwiseXOR, 1)\n}\n\npp$7.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3)\n      this.skipSpace()\n      return this.nextToken()\n    }\n    return this.finishOp(tt.incDec, 2)\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.plusMin, 1)\n}\n\npp$7.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)\n    return this.finishOp(tt.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected()\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4)\n    this.skipSpace()\n    return this.nextToken()\n  }\n  if (next === 61) size = 2\n  return this.finishOp(tt.relational, size)\n}\n\npp$7.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2\n    return this.finishToken(tt.arrow)\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)\n}\n\npp$7.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(tt.parenL)\n  case 41: ++this.pos; return this.finishToken(tt.parenR)\n  case 59: ++this.pos; return this.finishToken(tt.semi)\n  case 44: ++this.pos; return this.finishToken(tt.comma)\n  case 91: ++this.pos; return this.finishToken(tt.bracketL)\n  case 93: ++this.pos; return this.finishToken(tt.bracketR)\n  case 123: ++this.pos; return this.finishToken(tt.braceL)\n  case 125: ++this.pos; return this.finishToken(tt.braceR)\n  case 58: ++this.pos; return this.finishToken(tt.colon)\n  case 63: ++this.pos; return this.finishToken(tt.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) break\n    ++this.pos\n    return this.finishToken(tt.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1)\n    if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number\n      if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(tt.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\")\n}\n\npp$7.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size)\n  this.pos += size\n  return this.finishToken(type, str)\n}\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message)\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\")\n\npp$7.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(start, \"Unterminated regular expression\")\n    var ch = this$1.input.charAt(this$1.pos)\n    if (lineBreak.test(ch)) this$1.raise(start, \"Unterminated regular expression\")\n    if (!escaped) {\n      if (ch === \"[\") inClass = true\n      else if (ch === \"]\" && inClass) inClass = false\n      else if (ch === \"/\" && !inClass) break\n      escaped = ch === \"\\\\\"\n    } else escaped = false\n    ++this$1.pos\n  }\n  var content = this.input.slice(start, this.pos)\n  ++this.pos\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1()\n  var tmp = content, tmpFlags = \"\"\n  if (mods) {\n    var validFlags = /^[gim]*$/\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\")\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\"\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code)\n          if (code > 0x10FFFF) this$1.raise(start + offset + 3, \"Code point out of bounds\")\n          return \"x\"\n        })\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\")\n        tmpFlags = tmpFlags.replace(\"u\", \"\")\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this)\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods)\n  }\n  return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})\n}\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$7.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val\n    if (code >= 97) val = code - 97 + 10 // a\n    else if (code >= 65) val = code - 65 + 10 // A\n    else if (code >= 48 && code <= 57) val = code - 48 // 0-9\n    else val = Infinity\n    if (val >= radix) break\n    ++this$1.pos\n    total = total * radix + val\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null\n\n  return total\n}\n\npp$7.readRadixNumber = function(radix) {\n  this.pos += 2 // 0x\n  var val = this.readInt(radix)\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix)\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n  return this.finishToken(tt.num, val)\n}\n\n// Read an integer, octal integer, or floating-point number.\n\npp$7.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\")\n  var next = this.input.charCodeAt(this.pos)\n  if (next === 46) { // '.'\n    ++this.pos\n    this.readInt(10)\n    isFloat = true\n    next = this.input.charCodeAt(this.pos)\n  }\n  if (next === 69 || next === 101) { // 'eE'\n    next = this.input.charCodeAt(++this.pos)\n    if (next === 43 || next === 45) ++this.pos // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")\n    isFloat = true\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n\n  var str = this.input.slice(start, this.pos), val\n  if (isFloat) val = parseFloat(str)\n  else if (!octal || str.length === 1) val = parseInt(str, 10)\n  else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\")\n  else val = parseInt(str, 8)\n  return this.finishToken(tt.num, val)\n}\n\n// Read a string value, interpreting backslash-escapes.\n\npp$7.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected()\n    var codePos = ++this.pos\n    code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos)\n    ++this.pos\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\")\n  } else {\n    code = this.readHexChar(4)\n  }\n  return code\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code)\n  code -= 0x10000\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$7.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated string constant\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === quote) break\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(false)\n      chunkStart = this$1.pos\n    } else {\n      if (isNewLine(ch)) this$1.raise(this$1.start, \"Unterminated string constant\")\n      ++this$1.pos\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++)\n  return this.finishToken(tt.string, out)\n}\n\n// Reads template string tokens.\n\npp$7.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated template\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && this$1.type === tt.template) {\n        if (ch === 36) {\n          this$1.pos += 2\n          return this$1.finishToken(tt.dollarBraceL)\n        } else {\n          ++this$1.pos\n          return this$1.finishToken(tt.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      return this$1.finishToken(tt.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(true)\n      chunkStart = this$1.pos\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      ++this$1.pos\n      switch (ch) {\n        case 13:\n          if (this$1.input.charCodeAt(this$1.pos) === 10) ++this$1.pos\n        case 10:\n          out += \"\\n\"\n          break\n        default:\n          out += String.fromCharCode(ch)\n          break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine\n        this$1.lineStart = this$1.pos\n      }\n      chunkStart = this$1.pos\n    } else {\n      ++this$1.pos\n    }\n  }\n}\n\n// Used to read escaped characters\n\npp$7.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos)\n  ++this.pos\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]\n      var octal = parseInt(octalStr, 8)\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1)\n        octal = parseInt(octalStr, 8)\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.raise(this.pos - 2, \"Octal literal in strict mode\")\n      }\n      this.pos += octalStr.length - 1\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n}\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$7.readHexChar = function(len) {\n  var codePos = this.pos\n  var n = this.readInt(16, len)\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\")\n  return n\n}\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$7.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false\n  var word = \"\", first = true, chunkStart = this.pos\n  var astral = this.options.ecmaVersion >= 6\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos()\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true\n      word += this$1.input.slice(chunkStart, this$1.pos)\n      var escStart = this$1.pos\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        this$1.raise(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")\n      ++this$1.pos\n      var esc = this$1.readCodePoint()\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        this$1.raise(escStart, \"Invalid Unicode escape\")\n      word += codePointToString(esc)\n      chunkStart = this$1.pos\n    } else {\n      break\n    }\n    first = false\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n}\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$7.readWord = function() {\n  var word = this.readWord1()\n  var type = tt.name\n  if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))\n    type = keywordTypes[word]\n  return this.finishToken(type, word)\n}\n\nvar version = \"3.3.0\"\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos)\n  p.nextToken()\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, tt as tokTypes, TokContext, types as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG };"]}
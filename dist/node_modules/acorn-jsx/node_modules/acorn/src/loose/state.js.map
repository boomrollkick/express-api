{"version":3,"sources":["../../../../../../../src/node_modules/acorn-jsx/node_modules/acorn/src/loose/state.js"],"names":["pluginsLoose","LooseParser","input","options","toks","tok","last","type","tt","eof","start","end","locations","here","curPosition","loc","SourceLocation","ahead","context","curIndent","curLineStart","nextLineStart","lineEnd","loadPlugins","Node","pos","node","ranges","range","dummy","startNode","name","dummyNode","value","raw","next","eat","braceR","lineBreak","test","slice","semi","i","lookAhead","j","push","pop","length","charCodeAt","count","ch","tabSize","closeTok","indent","line","blockHeuristic","tokenStartsLine","indentationAfter","p","f","pluginConfigs","plugin","Error"],"mappings":";;;;;;;;;AAAA;;;;AAEA;AACO,IAAMA,sCAAe,EAArB;;IAEMC,W,WAAAA,W;AACX,uBAAYC,KAAZ,EAAiC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAC/B,SAAKC,IAAL,GAAY,sBAAUF,KAAV,EAAiBC,OAAjB,CAAZ;AACA,SAAKA,OAAL,GAAe,KAAKC,IAAL,CAAUD,OAAzB;AACA,SAAKD,KAAL,GAAa,KAAKE,IAAL,CAAUF,KAAvB;AACA,SAAKG,GAAL,GAAW,KAAKC,IAAL,GAAY,EAACC,MAAMC,gBAAGC,GAAV,EAAeC,OAAO,CAAtB,EAAyBC,KAAK,CAA9B,EAAvB;AACA,QAAI,KAAKR,OAAL,CAAaS,SAAjB,EAA4B;AAC1B,UAAIC,OAAO,KAAKT,IAAL,CAAUU,WAAV,EAAX;AACA,WAAKT,GAAL,CAASU,GAAT,GAAe,IAAIC,qBAAJ,CAAmB,KAAKZ,IAAxB,EAA8BS,IAA9B,EAAoCA,IAApC,CAAf;AACD;AACD,SAAKI,KAAL,GAAa,EAAb,CAT+B,CASf;AAChB,SAAKC,OAAL,GAAe,EAAf,CAV+B,CAUb;AAClB,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKC,OAAL,CAAa,KAAKF,YAAlB,IAAkC,CAAvD;AACA;AACA,SAAKjB,OAAL,CAAaH,YAAb,GAA4BG,QAAQH,YAAR,IAAwB,EAApD;AACA,SAAKuB,WAAL,CAAiB,KAAKpB,OAAL,CAAaH,YAA9B;AACD;;;;gCAEW;AACV,aAAO,IAAIwB,WAAJ,CAAS,KAAKpB,IAAd,EAAoB,KAAKC,GAAL,CAASK,KAA7B,EAAoC,KAAKP,OAAL,CAAaS,SAAb,GAAyB,KAAKP,GAAL,CAASU,GAAT,CAAaL,KAAtC,GAA8C,IAAlF,CAAP;AACD;;;sCAEiB;AAChB,aAAO,KAAKP,OAAL,CAAaS,SAAb,GAAyB,CAAC,KAAKP,GAAL,CAASK,KAAV,EAAiB,KAAKL,GAAL,CAASU,GAAT,CAAaL,KAA9B,CAAzB,GAAgE,KAAKL,GAAL,CAASK,KAAhF;AACD;;;gCAEWe,G,EAAK;AACf,UAAI,KAAKtB,OAAL,CAAaS,SAAjB,EAA4B;AAC1B,eAAO,IAAIY,WAAJ,CAAS,KAAKpB,IAAd,EAAoBqB,IAAI,CAAJ,CAApB,EAA4BA,IAAI,CAAJ,CAA5B,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAID,WAAJ,CAAS,KAAKpB,IAAd,EAAoBqB,GAApB,CAAP;AACD;AACF;;;+BAEUC,I,EAAMnB,I,EAAM;AACrBmB,WAAKnB,IAAL,GAAYA,IAAZ;AACAmB,WAAKf,GAAL,GAAW,KAAKL,IAAL,CAAUK,GAArB;AACA,UAAI,KAAKR,OAAL,CAAaS,SAAjB,EACEc,KAAKX,GAAL,CAASJ,GAAT,GAAe,KAAKL,IAAL,CAAUS,GAAV,CAAcJ,GAA7B;AACF,UAAI,KAAKR,OAAL,CAAawB,MAAjB,EACED,KAAKE,KAAL,CAAW,CAAX,IAAgB,KAAKtB,IAAL,CAAUK,GAA1B;AACF,aAAOe,IAAP;AACD;;;8BAESnB,I,EAAM;AACd,UAAIsB,QAAQ,KAAKC,SAAL,EAAZ;AACAD,YAAMtB,IAAN,GAAaA,IAAb;AACAsB,YAAMlB,GAAN,GAAYkB,MAAMnB,KAAlB;AACA,UAAI,KAAKP,OAAL,CAAaS,SAAjB,EACEiB,MAAMd,GAAN,CAAUJ,GAAV,GAAgBkB,MAAMd,GAAN,CAAUL,KAA1B;AACF,UAAI,KAAKP,OAAL,CAAawB,MAAjB,EACEE,MAAMD,KAAN,CAAY,CAAZ,IAAiBC,MAAMnB,KAAvB;AACF,WAAKJ,IAAL,GAAY,EAACC,MAAMC,gBAAGuB,IAAV,EAAgBrB,OAAOmB,MAAMnB,KAA7B,EAAoCC,KAAKkB,MAAMnB,KAA/C,EAAsDK,KAAKc,MAAMd,GAAjE,EAAZ;AACA,aAAOc,KAAP;AACD;;;iCAEY;AACX,UAAIA,QAAQ,KAAKG,SAAL,CAAe,YAAf,CAAZ;AACAH,YAAME,IAAN,GAAa,GAAb;AACA,aAAOF,KAAP;AACD;;;kCAEa;AACZ,UAAIA,QAAQ,KAAKG,SAAL,CAAe,SAAf,CAAZ;AACAH,YAAMI,KAAN,GAAcJ,MAAMK,GAAN,GAAY,GAA1B;AACA,aAAOL,KAAP;AACD;;;wBAEGtB,I,EAAM;AACR,UAAI,KAAKF,GAAL,CAASE,IAAT,KAAkBA,IAAtB,EAA4B;AAC1B,aAAK4B,IAAL;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF;;;iCAEYJ,I,EAAM;AACjB,aAAO,KAAK1B,GAAL,CAASE,IAAT,KAAkBC,gBAAGuB,IAArB,IAA6B,KAAK1B,GAAL,CAAS4B,KAAT,KAAmBF,IAAvD;AACD;;;kCAEaA,I,EAAM;AAClB,aAAO,KAAK1B,GAAL,CAAS4B,KAAT,KAAmBF,IAAnB,IAA2B,KAAKK,GAAL,CAAS5B,gBAAGuB,IAAZ,CAAlC;AACD;;;yCAEoB;AACnB,aAAO,KAAK1B,GAAL,CAASE,IAAT,KAAkBC,gBAAGC,GAArB,IAA4B,KAAKJ,GAAL,CAASE,IAAT,KAAkBC,gBAAG6B,MAAjD,IACLC,iBAAUC,IAAV,CAAe,KAAKrC,KAAL,CAAWsC,KAAX,CAAiB,KAAKlC,IAAL,CAAUK,GAA3B,EAAgC,KAAKN,GAAL,CAASK,KAAzC,CAAf,CADF;AAED;;;gCAEW;AACV,aAAO,KAAK0B,GAAL,CAAS5B,gBAAGiC,IAAZ,CAAP;AACD;;;2BAEMlC,I,EAAM;AACX,UAAI,KAAK6B,GAAL,CAAS7B,IAAT,CAAJ,EAAoB,OAAO,IAAP;AACpB,WAAK,IAAImC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AAC3B,YAAI,KAAKC,SAAL,CAAeD,CAAf,EAAkBnC,IAAlB,IAA0BA,IAA9B,EAAoC;AAClC,eAAK,IAAIqC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,GAAvB;AAA4B,iBAAKT,IAAL;AAA5B,WACA,OAAO,IAAP;AACD;AACF;AACF;;;6BAEQ;AACP,WAAKjB,OAAL,CAAa2B,IAAb,CAAkB,KAAK1B,SAAvB;AACD;;;4BAEO;AACN,WAAKA,SAAL,GAAiB,KAAKD,OAAL,CAAa4B,GAAb,EAAjB;AACD;;;4BAEOrB,G,EAAK;AACX,aAAOA,MAAM,KAAKvB,KAAL,CAAW6C,MAAjB,IAA2B,CAAC,sBAAU,KAAK7C,KAAL,CAAW8C,UAAX,CAAsBvB,GAAtB,CAAV,CAAnC;AAA0E,UAAEA,GAAF;AAA1E,OACA,OAAOA,GAAP;AACD;;;qCAEgBA,G,EAAK;AACpB,WAAK,IAAIwB,QAAQ,CAAjB,GAAqB,EAAExB,GAAvB,EAA4B;AAC1B,YAAIyB,KAAK,KAAKhD,KAAL,CAAW8C,UAAX,CAAsBvB,GAAtB,CAAT;AACA,YAAIyB,OAAO,EAAX,EAAe,EAAED,KAAF,CAAf,KACK,IAAIC,OAAO,CAAX,EAAcD,SAAS,KAAK9C,OAAL,CAAagD,OAAtB,CAAd,KACA,OAAOF,KAAP;AACN;AACF;;;2BAEMG,Q,EAAUC,M,EAAQC,I,EAAMC,c,EAAgB;AAC7C,UAAI,KAAKlD,GAAL,CAASE,IAAT,KAAkB6C,QAAlB,IAA8B,KAAK/C,GAAL,CAASE,IAAT,KAAkBC,gBAAGC,GAAvD,EAA4D,OAAO,IAAP;AAC5D,aAAO6C,QAAQ,KAAKlC,YAAb,IAA6B,KAAKD,SAAL,GAAiBkC,MAA9C,IAAwD,KAAKG,eAAL,EAAxD,KACJ,CAACD,cAAD,IAAmB,KAAKlC,aAAL,IAAsB,KAAKnB,KAAL,CAAW6C,MAApD,IACA,KAAKU,gBAAL,CAAsB,KAAKpC,aAA3B,IAA4CgC,MAFxC,CAAP;AAGD;;;sCAEiB;AAChB,WAAK,IAAIK,IAAI,KAAKrD,GAAL,CAASK,KAAT,GAAiB,CAA9B,EAAiCgD,KAAK,KAAKtC,YAA3C,EAAyD,EAAEsC,CAA3D,EAA8D;AAC5D,YAAIR,KAAK,KAAKhD,KAAL,CAAW8C,UAAX,CAAsBU,CAAtB,CAAT;AACA,YAAIR,OAAO,CAAP,IAAYA,OAAO,EAAvB,EAA2B,OAAO,KAAP;AAC5B;AACD,aAAO,IAAP;AACD;;;2BAEMnB,I,EAAM4B,C,EAAG;AACd,WAAK5B,IAAL,IAAa4B,EAAE,KAAK5B,IAAL,CAAF,CAAb;AACD;;;gCAEW6B,a,EAAe;AACzB,WAAK,IAAI7B,IAAT,IAAiB6B,aAAjB,EAAgC;AAC9B,YAAIC,SAAS7D,aAAa+B,IAAb,CAAb;AACA,YAAI,CAAC8B,MAAL,EAAa,MAAM,IAAIC,KAAJ,CAAU,aAAa/B,IAAb,GAAoB,aAA9B,CAAN;AACb8B,eAAO,IAAP,EAAaD,cAAc7B,IAAd,CAAb;AACD;AACF","file":"state.js","sourcesContent":["import {tokenizer, SourceLocation, tokTypes as tt, Node, lineBreak, isNewLine} from \"acorn\"\n\n// Registered plugins\nexport const pluginsLoose = {}\n\nexport class LooseParser {\n  constructor(input, options = {}) {\n    this.toks = tokenizer(input, options)\n    this.options = this.toks.options\n    this.input = this.toks.input\n    this.tok = this.last = {type: tt.eof, start: 0, end: 0}\n    if (this.options.locations) {\n      let here = this.toks.curPosition()\n      this.tok.loc = new SourceLocation(this.toks, here, here)\n    }\n    this.ahead = [] // Tokens ahead\n    this.context = [] // Indentation contexted\n    this.curIndent = 0\n    this.curLineStart = 0\n    this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n    // Load plugins\n    this.options.pluginsLoose = options.pluginsLoose || {}\n    this.loadPlugins(this.options.pluginsLoose)\n  }\n\n  startNode() {\n    return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n  }\n\n  storeCurrentPos() {\n    return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n  }\n\n  startNodeAt(pos) {\n    if (this.options.locations) {\n      return new Node(this.toks, pos[0], pos[1])\n    } else {\n      return new Node(this.toks, pos)\n    }\n  }\n\n  finishNode(node, type) {\n    node.type = type\n    node.end = this.last.end\n    if (this.options.locations)\n      node.loc.end = this.last.loc.end\n    if (this.options.ranges)\n      node.range[1] = this.last.end\n    return node\n  }\n\n  dummyNode(type) {\n    let dummy = this.startNode()\n    dummy.type = type\n    dummy.end = dummy.start\n    if (this.options.locations)\n      dummy.loc.end = dummy.loc.start\n    if (this.options.ranges)\n      dummy.range[1] = dummy.start\n    this.last = {type: tt.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n    return dummy\n  }\n\n  dummyIdent() {\n    let dummy = this.dummyNode(\"Identifier\")\n    dummy.name = \"✖\"\n    return dummy\n  }\n\n  dummyString() {\n    let dummy = this.dummyNode(\"Literal\")\n    dummy.value = dummy.raw = \"✖\"\n    return dummy\n  }\n\n  eat(type) {\n    if (this.tok.type === type) {\n      this.next()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isContextual(name) {\n    return this.tok.type === tt.name && this.tok.value === name\n  }\n\n  eatContextual(name) {\n    return this.tok.value === name && this.eat(tt.name)\n  }\n\n  canInsertSemicolon() {\n    return this.tok.type === tt.eof || this.tok.type === tt.braceR ||\n      lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n  }\n\n  semicolon() {\n    return this.eat(tt.semi)\n  }\n\n  expect(type) {\n    if (this.eat(type)) return true\n    for (let i = 1; i <= 2; i++) {\n      if (this.lookAhead(i).type == type) {\n        for (let j = 0; j < i; j++) this.next()\n        return true\n      }\n    }\n  }\n\n  pushCx() {\n    this.context.push(this.curIndent)\n  }\n\n  popCx() {\n    this.curIndent = this.context.pop()\n  }\n\n  lineEnd(pos) {\n    while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n    return pos\n  }\n\n  indentationAfter(pos) {\n    for (let count = 0;; ++pos) {\n      let ch = this.input.charCodeAt(pos)\n      if (ch === 32) ++count\n      else if (ch === 9) count += this.options.tabSize\n      else return count\n    }\n  }\n\n  closes(closeTok, indent, line, blockHeuristic) {\n    if (this.tok.type === closeTok || this.tok.type === tt.eof) return true\n    return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n      (!blockHeuristic || this.nextLineStart >= this.input.length ||\n       this.indentationAfter(this.nextLineStart) < indent)\n  }\n\n  tokenStartsLine() {\n    for (let p = this.tok.start - 1; p >= this.curLineStart; --p) {\n      let ch = this.input.charCodeAt(p)\n      if (ch !== 9 && ch !== 32) return false\n    }\n    return true\n  }\n\n  extend(name, f) {\n    this[name] = f(this[name])\n  }\n\n  loadPlugins(pluginConfigs) {\n    for (let name in pluginConfigs) {\n      let plugin = pluginsLoose[name]\n      if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n      plugin(this, pluginConfigs[name])\n    }\n  }\n}\n"]}
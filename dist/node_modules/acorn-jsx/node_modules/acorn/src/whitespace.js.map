{"version":3,"sources":["../../../../../../src/node_modules/acorn-jsx/node_modules/acorn/src/whitespace.js"],"names":["isNewLine","lineBreak","lineBreakG","RegExp","source","code","nonASCIIwhitespace","skipWhiteSpace"],"mappings":";;;;;QAMgBA,S,GAAAA,S;AANhB;AACA;;AAEO,IAAMC,gCAAY,wBAAlB;AACA,IAAMC,kCAAa,IAAIC,MAAJ,CAAWF,UAAUG,MAArB,EAA6B,GAA7B,CAAnB;;AAEA,SAASJ,SAAT,CAAmBK,IAAnB,EAAyB;AAC9B,SAAOA,SAAS,EAAT,IAAeA,SAAS,EAAxB,IAA8BA,SAAS,MAAvC,IAAiDA,QAAQ,MAAhE;AACD;;AAEM,IAAMC,kDAAqB,qDAA3B;;AAEA,IAAMC,0CAAiB,+BAAvB","file":"whitespace.js","sourcesContent":["// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nexport const lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\")\n\nexport function isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code == 0x2029\n}\n\nexport const nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n"]}
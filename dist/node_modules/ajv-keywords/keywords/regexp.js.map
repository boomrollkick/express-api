{"version":3,"sources":["../../../../src/node_modules/ajv-keywords/keywords/regexp.js"],"names":["module","exports","defFunc","ajv","definition","type","inline","it","keyword","schema","getRegExp","dataLevel","RegExp","pattern","flags","rx","match","Error","e","console","error","metaSchema","properties","required","additionalProperties","addKeyword"],"mappings":"AAAA;;;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACrCD,UAAQE,UAAR,GAAqB;AACnBC,UAAM,QADa;AAEnBC,YAAQ,gBAAUC,EAAV,EAAcC,OAAd,EAAuBC,MAAvB,EAA+B;AACrC,aAAOC,cAAc,YAAd,IAA8BH,GAAGI,SAAH,IAAgB,EAA9C,IAAoD,GAA3D;;AAEA,eAASD,SAAT,GAAqB;AACnB,YAAI;AACF,cAAI,QAAOD,MAAP,yCAAOA,MAAP,MAAiB,QAArB,EACE,OAAO,IAAIG,MAAJ,CAAWH,OAAOI,OAAlB,EAA2BJ,OAAOK,KAAlC,CAAP;;AAEF,cAAIC,KAAKN,OAAOO,KAAP,CAAa,qBAAb,CAAT;AACA,cAAID,EAAJ,EAAQ,OAAO,IAAIH,MAAJ,CAAWG,GAAG,CAAH,CAAX,EAAkBA,GAAG,CAAH,CAAlB,CAAP;AACR,gBAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACD,SAPD,CAOE,OAAMC,CAAN,EAAS;AACTC,kBAAQC,KAAR,CAAc,oBAAd,EAAoCX,MAApC,EAA4C,YAA5C;AACA,gBAAMS,CAAN;AACD;AACF;AACF,KAlBkB;AAmBnBG,gBAAY;AACVhB,YAAM,CAAC,QAAD,EAAW,QAAX,CADI;AAEViB,kBAAY;AACVT,iBAAS,EAAER,MAAM,QAAR,EADC;AAEVS,eAAO,EAAET,MAAM,QAAR;AAFG,OAFF;AAMVkB,gBAAU,CAAC,SAAD,CANA;AAOVC,4BAAsB;AAPZ;AAnBO,GAArB;;AA8BArB,MAAIsB,UAAJ,CAAe,QAAf,EAAyBvB,QAAQE,UAAjC;AACA,SAAOD,GAAP;AACD,CAjCD","file":"regexp.js","sourcesContent":["'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'string',\n    inline: function (it, keyword, schema) {\n      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';\n\n      function getRegExp() {\n        try {\n          if (typeof schema == 'object')\n            return new RegExp(schema.pattern, schema.flags);\n\n          var rx = schema.match(/^\\/(.*)\\/([gimy]*)$/);\n          if (rx) return new RegExp(rx[1], rx[2]);\n          throw new Error('cannot parse string into RegExp');\n        } catch(e) {\n          console.error('regular expression', schema, 'is invalid');\n          throw e;\n        }\n      }\n    },\n    metaSchema: {\n      type: ['string', 'object'],\n      properties: {\n        pattern: { type: 'string' },\n        flags: { type: 'string' }\n      },\n      required: ['pattern'],\n      additionalProperties: false\n    }\n  };\n\n  ajv.addKeyword('regexp', defFunc.definition);\n  return ajv;\n};\n"]}
{"version":3,"sources":["../../../../src/node_modules/ajv-keywords/keywords/deepProperties.js"],"names":["module","exports","defFunc","ajv","definition","type","macro","schema","schemas","pointer","push","getSchema","metaSchema","patternProperties","$ref","_opts","v5","additionalProperties","addKeyword","jsonPointer","segments","split","rootSchema","pointerSchema","i","length","segment","isLast","unescapeJsonPointer","properties","items","undefined","test","count","str","replace"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACrCD,UAAQE,UAAR,GAAqB;AACnBC,UAAM,QADa;AAEnBC,WAAO,eAAUC,MAAV,EAAkB;AACvB,UAAIC,UAAU,EAAd;AACA,WAAK,IAAIC,OAAT,IAAoBF,MAApB;AACEC,gBAAQE,IAAR,CAAaC,UAAUF,OAAV,EAAmBF,OAAOE,OAAP,CAAnB,CAAb;AADF,OAEA,OAAO,EAAE,SAASD,OAAX,EAAP;AACD,KAPkB;AAQnBI,gBAAY;AACVP,YAAM,QADI;AAEVQ,yBAAmB;AACjB,0CAAkC;AAChCC,gBAAMX,IAAIY,KAAJ,CAAUC,EAAV,GACE,wFADF,GAEE;AAHwB;AADjB,OAFT;AASVC,4BAAsB;AATZ;AARO,GAArB;;AAqBAd,MAAIe,UAAJ,CAAe,gBAAf,EAAiChB,QAAQE,UAAzC;AACA,SAAOD,GAAP;AACD,CAxBD;;AA2BA,SAASQ,SAAT,CAAmBQ,WAAnB,EAAgCZ,MAAhC,EAAwC;AACtC,MAAIa,WAAWD,YAAYE,KAAZ,CAAkB,GAAlB,CAAf;AACA,MAAIC,aAAa,EAAjB;AACA,MAAIC,gBAAgBD,UAApB;AACA,OAAK,IAAIE,IAAE,CAAX,EAAcA,IAAEJ,SAASK,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,QAAIE,UAAUN,SAASI,CAAT,CAAd;AACA,QAAIG,SAASH,KAAKJ,SAASK,MAAT,GAAkB,CAApC;AACAC,cAAUE,oBAAoBF,OAApB,CAAV;AACA,QAAIG,aAAaN,cAAcM,UAAd,GAA2B,EAA5C;AACA,QAAIC,QAAQC,SAAZ;AACA,QAAI,SAASC,IAAT,CAAcN,OAAd,CAAJ,EAA4B;AAC1B,UAAIO,QAAQ,CAACP,OAAb;AACAI,cAAQP,cAAcO,KAAd,GAAsB,EAA9B;AACA,aAAOG,OAAP;AAAgBH,cAAMpB,IAAN,CAAW,EAAX;AAAhB;AACD;AACDa,oBAAgBI,SAASpB,MAAT,GAAkB,EAAlC;AACAsB,eAAWH,OAAX,IAAsBH,aAAtB;AACA,QAAIO,KAAJ,EAAWA,MAAMpB,IAAN,CAAWa,aAAX;AACZ;AACD,SAAOD,UAAP;AACD;;AAGD,SAASM,mBAAT,CAA6BM,GAA7B,EAAkC;AAChC,SAAOA,IAAIC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAAP;AACD","file":"deepProperties.js","sourcesContent":["'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      var schemas = [];\n      for (var pointer in schema)\n        schemas.push(getSchema(pointer, schema[pointer]));\n      return { 'allOf': schemas };\n    },\n    metaSchema: {\n      type: 'object',\n      patternProperties: {\n        '^(\\\\/([^~\\\\/]|~0|~1)*)*(\\\\/)?$': {\n          $ref: ajv._opts.v5\n                ? 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#'\n                : 'http://json-schema.org/draft-04/schema#'\n        }\n      },\n      additionalProperties: false\n    }\n  };\n\n  ajv.addKeyword('deepProperties', defFunc.definition);\n  return ajv;\n};\n\n\nfunction getSchema(jsonPointer, schema) {\n  var segments = jsonPointer.split('/');\n  var rootSchema = {};\n  var pointerSchema = rootSchema;\n  for (var i=1; i<segments.length; i++) {\n    var segment = segments[i];\n    var isLast = i == segments.length - 1;\n    segment = unescapeJsonPointer(segment);\n    var properties = pointerSchema.properties = {};\n    var items = undefined;\n    if (/[0-9]+/.test(segment)) {\n      var count = +segment;\n      items = pointerSchema.items = [];\n      while (count--) items.push({});\n    }\n    pointerSchema = isLast ? schema : {};\n    properties[segment] = pointerSchema;\n    if (items) items.push(pointerSchema);\n  }\n  return rootSchema;\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n"]}
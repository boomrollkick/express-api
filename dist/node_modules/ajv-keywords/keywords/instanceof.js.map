{"version":3,"sources":["../../../../src/node_modules/ajv-keywords/keywords/instanceof.js"],"names":["CONSTRUCTORS","Object","Array","Function","Number","String","Date","RegExp","module","exports","defFunc","ajv","Buffer","definition","compile","schema","Constructor","getConstructor","data","constructors","map","i","length","metaSchema","anyOf","type","items","addKeyword","c","Error"],"mappings":"AAAA;;AAEA,IAAIA,eAAe;AACjBC,UAAQA,MADS;AAEjBC,SAAOA,KAFU;AAGjBC,YAAUA,QAHO;AAIjBC,UAAQA,MAJS;AAKjBC,UAAQA,MALS;AAMjBC,QAAMA,IANW;AAOjBC,UAAQA;AAPS,CAAnB;;AAUAC,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACrC;AACA,MAAI,OAAOC,MAAP,IAAiB,WAArB,EACEZ,aAAaY,MAAb,GAAsBA,MAAtB;;AAEFF,UAAQG,UAAR,GAAqB;AACnBC,aAAS,iBAAUC,MAAV,EAAkB;AACzB,UAAI,OAAOA,MAAP,IAAiB,QAArB,EAA+B;AAC7B,YAAIC,cAAcC,eAAeF,MAAf,CAAlB;AACA,eAAO,UAAUG,IAAV,EAAgB;AACrB,iBAAOA,gBAAgBF,WAAvB;AACD,SAFD;AAGD;;AAED,UAAIG,eAAeJ,OAAOK,GAAP,CAAWH,cAAX,CAAnB;AACA,aAAO,UAAUC,IAAV,EAAgB;AACrB,aAAK,IAAIG,IAAE,CAAX,EAAcA,IAAEF,aAAaG,MAA7B,EAAqCD,GAArC;AACE,cAAIH,gBAAgBC,aAAaE,CAAb,CAApB,EAAqC,OAAO,IAAP;AADvC,SAEA,OAAO,KAAP;AACD,OAJD;AAKD,KAfkB;AAgBnBrB,kBAAcA,YAhBK;AAiBnBuB,gBAAY;AACVC,aAAO,CACL,EAAEC,MAAM,QAAR,EADK,EAEL;AACEA,cAAM,OADR;AAEEC,eAAO,EAAED,MAAM,QAAR;AAFT,OAFK;AADG;AAjBO,GAArB;;AA4BAd,MAAIgB,UAAJ,CAAe,YAAf,EAA6BjB,QAAQG,UAArC;AACA,SAAOF,GAAP;;AAEA,WAASM,cAAT,CAAwBW,CAAxB,EAA2B;AACzB,QAAIZ,cAAchB,aAAa4B,CAAb,CAAlB;AACA,QAAIZ,WAAJ,EAAiB,OAAOA,WAAP;AACjB,UAAM,IAAIa,KAAJ,CAAU,wCAAwCD,CAAlD,CAAN;AACD;AACF,CAzCD","file":"instanceof.js","sourcesContent":["'use strict';\n\nvar CONSTRUCTORS = {\n  Object: Object,\n  Array: Array,\n  Function: Function,\n  Number: Number,\n  String: String,\n  Date: Date,\n  RegExp: RegExp\n};\n\nmodule.exports = function defFunc(ajv) {\n  /* istanbul ignore else */\n  if (typeof Buffer != 'undefined')\n    CONSTRUCTORS.Buffer = Buffer;\n\n  defFunc.definition = {\n    compile: function (schema) {\n      if (typeof schema == 'string') {\n        var Constructor = getConstructor(schema);\n        return function (data) {\n          return data instanceof Constructor;\n        };\n      }\n\n      var constructors = schema.map(getConstructor);\n      return function (data) {\n        for (var i=0; i<constructors.length; i++)\n          if (data instanceof constructors[i]) return true;\n        return false;\n      };\n    },\n    CONSTRUCTORS: CONSTRUCTORS,\n    metaSchema: {\n      anyOf: [\n        { type: 'string' },\n        {\n          type: 'array',\n          items: { type: 'string' }\n        }\n      ]\n    }\n  };\n\n  ajv.addKeyword('instanceof', defFunc.definition);\n  return ajv;\n\n  function getConstructor(c) {\n    var Constructor = CONSTRUCTORS[c];\n    if (Constructor) return Constructor;\n    throw new Error('invalid \"instanceof\" keyword value ' + c);\n  }\n};\n"]}
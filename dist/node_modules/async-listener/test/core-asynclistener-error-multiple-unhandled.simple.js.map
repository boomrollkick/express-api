{"version":3,"sources":["../../../../src/node_modules/async-listener/test/core-asynclistener-error-multiple-unhandled.simple.js"],"names":["process","addAsyncListener","require","assert","onAsync0","onAsync1","onError","stor","results","push","asyncNoHandleError0","create","error","asyncNoHandleError1","listeners","uncaughtFired","on","equal","length","nextTick","Error","code","i","removeAsyncListener","ok","console","log"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;;AAE/B,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEA,SAASE,QAAT,GAAoB;AAClB,SAAO,CAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,SAAO,CAAP;AACD;;AAED,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrBC,UAAQC,IAAR,CAAaF,IAAb;AACD;;AAED,IAAIC,UAAU,EAAd;AACA,IAAIE,sBAAsB;AACxBC,UAAQP,QADgB;AAExBQ,SAAON;AAFiB,CAA1B;AAIA,IAAIO,sBAAsB;AACxBF,UAAQN,QADgB;AAExBO,SAAON;AAFiB,CAA1B;;AAKA,IAAIQ,YAAY,CACdd,QAAQC,gBAAR,CAAyBS,mBAAzB,CADc,EAEdV,QAAQC,gBAAR,CAAyBY,mBAAzB,CAFc,CAAhB;;AAKA,IAAIE,gBAAgB,KAApB;AACAf,QAAQgB,EAAR,CAAW,mBAAX,EAAgC,YAAW;AACzCD,kBAAgB,IAAhB;;AAEA;AACAZ,SAAOc,KAAP,CAAaT,QAAQ,CAAR,CAAb,EAAyB,CAAzB;AACAL,SAAOc,KAAP,CAAaT,QAAQ,CAAR,CAAb,EAAyB,CAAzB;AACAL,SAAOc,KAAP,CAAaT,QAAQU,MAArB,EAA6B,CAA7B;AACD,CAPD;;AASAlB,QAAQmB,QAAR,CAAiB,YAAW;AAC1B,QAAM,IAAIC,KAAJ,EAAN;AACD,CAFD;;AAIApB,QAAQgB,EAAR,CAAW,MAAX,EAAmB,UAASK,IAAT,EAAe;AAChC;AACA;AACA,MAAIA,SAAS,CAAb,EACE;;AAEF;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,UAAUI,MAA9B,EAAsCI,GAAtC;AACEtB,YAAQuB,mBAAR,CAA4BT,UAAUQ,CAAV,CAA5B;AADF,GAGAnB,OAAOqB,EAAP,CAAUT,aAAV;AACAU,UAAQC,GAAR,CAAY,IAAZ;AACD,CAZD","file":"core-asynclistener-error-multiple-unhandled.simple.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nif (!process.addAsyncListener) require('../index.js');\n\nvar assert = require('assert');\n\nfunction onAsync0() {\n  return 0;\n}\n\nfunction onAsync1() {\n  return 1;\n}\n\nfunction onError(stor) {\n  results.push(stor);\n}\n\nvar results = [];\nvar asyncNoHandleError0 = {\n  create: onAsync0,\n  error: onError\n};\nvar asyncNoHandleError1 = {\n  create: onAsync1,\n  error: onError\n};\n\nvar listeners = [\n  process.addAsyncListener(asyncNoHandleError0),\n  process.addAsyncListener(asyncNoHandleError1)\n];\n\nvar uncaughtFired = false;\nprocess.on('uncaughtException', function() {\n  uncaughtFired = true;\n\n  // Unhandled errors should propagate to all listeners.\n  assert.equal(results[0], 0);\n  assert.equal(results[1], 1);\n  assert.equal(results.length, 2);\n});\n\nprocess.nextTick(function() {\n  throw new Error();\n});\n\nprocess.on('exit', function(code) {\n  // If the exit code isn't ok then return early to throw the stack that\n  // caused the bad return code.\n  if (code !== 0)\n    return;\n\n  // Need to remove the async listeners or tests will always pass\n  for (var i = 0; i < listeners.length; i++)\n    process.removeAsyncListener(listeners[i]);\n\n  assert.ok(uncaughtFired);\n  console.log('ok');\n});\n"]}
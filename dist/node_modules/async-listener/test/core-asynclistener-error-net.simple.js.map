{"version":3,"sources":["../../../../src/node_modules/async-listener/test/core-asynclistener-error-net.simple.js"],"names":["PORT","process","addAsyncListener","require","assert","dns","fs","net","errorMsgs","caught","expectCaught","callbacksObj","error","value","er","idx","indexOf","message","splice","Error","listener","on","code","removeAsyncListener","length","equal","console","log","iter","i","push","server","createServer","c","close","end","listen","clientConnect","client","connect"],"mappings":"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","file":"core-asynclistener-error-net.simple.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar PORT = 12346;\n\nif (!process.addAsyncListener) require('../index.js');\n\nvar assert = require('assert');\nvar dns = require('dns');\nvar fs = require('fs');\nvar net = require('net');\n\nvar errorMsgs = [];\nvar caught = 0;\nvar expectCaught = 0;\n\nvar callbacksObj = {\n  error: function(value, er) {\n    var idx = errorMsgs.indexOf(er.message);\n    caught++;\n\n    // process._rawDebug('Handling error: ' + er.message);\n\n    if (-1 < idx)\n      errorMsgs.splice(idx, 1);\n    else\n      throw new Error('Message not found: ' + er.message);\n\n    return true;\n  }\n};\n\nvar listener = process.addAsyncListener(callbacksObj);\n\nprocess.on('exit', function(code) {\n  process.removeAsyncListener(listener);\n\n  if (code > 0)\n    return;\n\n  if (errorMsgs.length > 0)\n    throw new Error('Errors not fired: ' + errorMsgs);\n\n  assert.equal(caught, expectCaught);\n  console.log('ok');\n});\n\n\n// Net\nvar iter = 3;\nfor (var i = 0; i < iter; i++) {\n  errorMsgs.push('net - error: server connection');\n  errorMsgs.push('net - error: client data');\n  errorMsgs.push('net - error: server data');\n}\nerrorMsgs.push('net - error: server closed');\n\nvar server = net.createServer(function(c) {\n  c.on('data', function() {\n    if (0 === --iter) {\n      server.close(function() {\n        console.log('net - server closing');\n        throw new Error('net - error: server closed');\n      });\n      expectCaught++;\n    }\n    console.log('net - connection received data');\n    throw new Error('net - error: server data');\n  });\n  expectCaught++;\n\n  c.end('bye');\n  console.log('net - connection received');\n  throw new Error('net - error: server connection');\n});\nexpectCaught += iter;\n\nserver.listen(PORT, function() {\n  for (var i = 0; i < iter; i++)\n    clientConnect();\n});\n\nfunction clientConnect() {\n  var client = net.connect(PORT, function() { });\n\n  client.on('data', function() {\n    client.end('see ya');\n    console.log('net - client received data');\n    throw new Error('net - error: client data');\n  });\n  expectCaught++;\n}\n"]}
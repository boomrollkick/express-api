{"version":3,"sources":["../../../../src/node_modules/async-listener/test/core-asynclistener-error-throw-in-before-multiple.simple.js"],"names":["process","addAsyncListener","require","global","setImmediate","setTimeout","assert","once","onAsync0","onAsync1","handlers","before","error","stor","err","equal","handlers1","keys","on","console","log","forEach","key","removeAsyncListener"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;AAC/B,IAAI,CAACC,OAAOC,YAAZ,EAA0BD,OAAOC,YAAP,GAAsBC,UAAtB;;AAE1B,IAAIC,SAASJ,QAAQ,QAAR,CAAb;;AAEA,IAAIK,OAAO,CAAX;AACA,SAASC,QAAT,GAAoB,CAAE;AACtB,SAASC,QAAT,GAAoB,CAAE;;AAEtB,IAAIC,WAAW;AACbC,UAAS,kBAAY;AACnB,UAAM,CAAN;AACD,GAHY;AAIbC,SAAQ,eAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC3B;AACAR,WAAOS,KAAP,CAAaD,GAAb,EAAkB,CAAlB;;AAEAP;;AAEA,WAAO,IAAP;AACD;AAXY,CAAf;;AAcA,IAAIS,YAAY;AACdL,UAAS,kBAAY;AACnB,UAAM,CAAN;AACD,GAHa;AAIdC,SAAQ,eAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC3B;AACAR,WAAOS,KAAP,CAAaD,GAAb,EAAkB,CAAlB;;AAEAP;;AAEA,WAAO,IAAP;AACD;AAXa,CAAhB;;AAcA,IAAIU,OAAO,CACTjB,QAAQC,gBAAR,CAAyBO,QAAzB,EAAmCE,QAAnC,CADS,EAETV,QAAQC,gBAAR,CAAyBQ,QAAzB,EAAmCO,SAAnC,CAFS,CAAX;;AAKAhB,QAAQkB,EAAR,CAAW,mBAAX,EAAgC,YAAY;AAC1C;AACAZ,SAAOS,KAAP,CAAaR,IAAb,EAAmB,CAAnB;;AAEAY,UAAQC,GAAR,CAAY,IAAZ;AACD,CALD;;AAOAhB,aAAa,YAAY;AACvB,SAAO,CAAP;AACD,CAFD;;AAIAa,KAAKI,OAAL,CAAa,UAAUC,GAAV,EAAe;AAC1BtB,UAAQuB,mBAAR,CAA4BD,GAA5B;AACD,CAFD","file":"core-asynclistener-error-throw-in-before-multiple.simple.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nif (!process.addAsyncListener) require('../index.js');\nif (!global.setImmediate) global.setImmediate = setTimeout;\n\nvar assert = require('assert');\n\nvar once = 0;\nfunction onAsync0() {}\nfunction onAsync1() {}\n\nvar handlers = {\n  before : function () {\n    throw 1;\n  },\n  error : function (stor, err) {\n    // must catch error thrown in before\n    assert.equal(err, 1);\n\n    once++;\n\n    return true;\n  }\n};\n\nvar handlers1 = {\n  before : function () {\n    throw 2;\n  },\n  error : function (stor, err) {\n    // must catch *other* handler's throw error\n    assert.equal(err, 1);\n\n    once++;\n\n    return true;\n  }\n};\n\nvar keys = [\n  process.addAsyncListener(onAsync0, handlers),\n  process.addAsyncListener(onAsync1, handlers1)\n];\n\nprocess.on('uncaughtException', function () {\n  // both error handlers must fire\n  assert.equal(once, 2);\n\n  console.log('ok');\n});\n\nsetImmediate(function () {\n  return 1;\n});\n\nkeys.forEach(function (key) {\n  process.removeAsyncListener(key);\n});\n\n"]}
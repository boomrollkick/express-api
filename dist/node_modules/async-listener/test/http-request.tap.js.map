{"version":3,"sources":["../../../../src/node_modules/async-listener/test/http-request.tap.js"],"names":["process","addAsyncListener","require","extend","_extend","test","http","nodeVersion","version","slice","split","map","Number","t","main","done","listener","addListner","times","agent","Agent","keepAlive","maxFreeSockets","maxSockets","after","rand","i","deepEqual","root","expected","destroy","ping","currentName","addr","server","address","req","request","port","host","path","res","equal","current","name","bufs","on","chunk","push","body","Buffer","concat","toString","setImmediate","end","removeAsyncListener","make","override","children","before","error","innerResumeChildren","innerResumeChildrenWrapped","innerPingChildren","firstImmediateChildren","firstImmediate","innerPingChildrenWrapped","innerImmediateChildren","secondImmediate","createServer","listen","close","create","state","node","ctx"],"mappings":";;AAAA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;;AAE/B,IAAIC,SAASD,QAAQ,MAAR,EAAgBE,OAA7B;AACA,IAAIC,OAAOH,QAAQ,KAAR,EAAeG,IAA1B;AACA,IAAIC,OAAOJ,QAAQ,MAAR,CAAX;;AAEA;AACA;AACA;AACA,IAAIK,cAAcP,QAAQQ,OAAR,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,CAAwCC,MAAxC,CAAlB;;AAEAP,KAAK,+BAAL,EAAsC,UAASQ,CAAT,EAAW;AAC/C,WAASC,IAAT,CAAeC,IAAf,EAAqB;AACnB,QAAIC,WAAWC,YAAf;AACA,QAAIC,QAAQ,CAAZ;;AAEA,QAAIC,QAAQ,IAAIb,KAAKc,KAAT,CAAe;AACzBC,iBAAW,IADc;AAEzBC,sBAAgB,CAFS;AAGzBC,kBAAY;AAHa,KAAf,CAAZ;;AAMA,aAASC,KAAT,CAAeC,IAAf,EAAqBC,CAArB,EAAwB;AACtB,UAAI,EAAER,KAAF,KAAY,CAAhB,EAAmB;AACjBL,UAAEc,SAAF,CACEX,SAASY,IADX,EAEEC,QAFF,EAGE,oCAHF;AAKA,YAAIV,MAAMW,OAAV,EAAmB;AACjBX,gBAAMW,OAAN;AACD;AACDf;AACD;AACF;;AAED,aAASgB,IAAT,CAAcL,CAAd,EAAiB;AACfV,eAASgB,WAAT,GAAuB,WAAWN,CAAX,GAAe,UAAtC;AACA,UAAIO,OAAOC,OAAOC,OAAP,EAAX;AACA,UAAIC,MAAM9B,KAAK+B,OAAL,CAAa;AACrBlB,eAAOA,KADc;AAErBmB,cAAML,KAAKK,IAFU;AAGrBC,cAAMN,KAAKM,IAHU;AAIrBC,cAAM;AAJe,OAAb,EAKP,UAAUC,GAAV,EAAe;AAChB;AACA;AACA,YAAIf,MAAM,CAAV,EAAa;AACXb,YAAE6B,KAAF,CACE1B,SAAS2B,OAAT,CAAiBC,IADnB,EAEE,WAAWlB,CAAX,GAAe,UAFjB,EAGE,qBAAqBA,CAArB,GAAyB,UAH3B;AAKD,SAND,MAMO;AACLb,YAAE6B,KAAF,CACE1B,SAAS2B,OAAT,CAAiBC,IADnB,EAEE,6BAA6BlB,IAAI,CAAjC,CAFF,EAGE,uCAAuCA,IAAI,CAA3C,CAHF;AAKD;;AAEDV,iBAASgB,WAAT,GAAuB,sBAAsBN,CAA7C;AACA,YAAMmB,OAAO,EAAb;AACAJ,YAAIK,EAAJ,CAAO,MAAP,EAAe,UAAUC,KAAV,EAAiB;AAC9BF,eAAKG,IAAL,CAAUD,KAAV;AACD,SAFD;AAGAN,YAAIK,EAAJ,CAAO,KAAP,EAAc,YAAY;AACxB,cAAMG,OAAOC,OAAOC,MAAP,CAAcN,IAAd,EAAoBO,QAApB,EAAb;AACAvC,YAAE6B,KAAF,CAAQ,OAAR,EAAiBO,IAAjB,EAAuB,6BAAvB;AACApC,YAAE6B,KAAF,CACE1B,SAAS2B,OAAT,CAAiBC,IADnB,EAEE,sBAAsBlB,CAFxB,EAGE,gCAAgCA,CAHlC;AAKAV,mBAASgB,WAAT,GAAuB,4BAA4BN,CAAnD;AACA2B,uBAAa7B,KAAb,EAAoBE,CAApB;AACD,SAVD;AAWD,OAtCS,CAAV;AAuCAV,eAASgB,WAAT,GAAuB,mBAAmBN,CAA1C;AACAU,UAAIkB,GAAJ;AACD;;AAED,SAAK,IAAI5B,IAAI,CAAb,EAAgBA,IAAIR,KAApB,EAA2BQ,GAA3B,EAAgC;AAC9BV,eAASgB,WAAT,GAAuB,mBAAmBN,CAA1C;AACA2B,mBAAatB,IAAb,EAAmBL,CAAnB;AACD;;AAED1B,YAAQuD,mBAAR,CAA4BvC,SAASA,QAArC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAASwC,IAAT,CAAeZ,IAAf,EAAqBa,QAArB,EAA+B;AAC7B,aAAOtD,OAAO;AACZyC,cAAMA,IADM;AAEZc,kBAAU,EAFE;AAGZC,gBAAQ,CAHI;AAIZnC,eAAO,CAJK;AAKZoC,eAAO;AALK,OAAP,EAMJH,YAAY,EANR,CAAP;AAOD;;AAED;AACA;AACA;AACA,QAAII,sBAAsB,EAA1B;AACA,QAAItD,YAAY,CAAZ,IAAiB,CAArB,EAAwB;AACtBsD,0BAAoBb,IAApB,CAAyBQ,KAAK,oBAAL,CAAzB;AACD;AACDK,wBAAoBb,IAApB,CAAyBQ,KAAK,0BAAL,CAAzB;;AAEA,QAAIM,6BAA6B,CAC/BN,KAAK,oBAAL,EAA2B;AACzBE,gBAAUG;AADe,KAA3B,CAD+B,EAI/BL,KAAK,oBAAL,CAJ+B,EAK/BA,KAAK,oBAAL,CAL+B,CAAjC;AAOA,QAAIO,oBAAoB,EAAxB;AACA,QAAIxD,YAAY,CAAZ,KAAkB,CAAlB,IAAuBA,YAAY,CAAZ,IAAiB,EAA5C,EAAgD;AAC9CwD,wBAAkBf,IAAlB,CAAuBQ,KAAK,oBAAL,CAAvB;AACD;AACDO,sBAAkBf,IAAlB,CAAuBQ,KAAK,oBAAL,EAA2B;AAChDE,gBAAUnD,YAAY,CAAZ,KAAkB,CAAlB,IAAuBA,YAAY,CAAZ,IAAiB,EAAxC,GACNsD,mBADM,GAENC;AAH4C,KAA3B,CAAvB;AAKA,QAAIvD,YAAY,CAAZ,IAAiB,CAAjB,IAAsBA,YAAY,CAAZ,IAAiB,EAA3C,EAA+C;AAC7C,UAAIA,YAAY,CAAZ,IAAiB,CAAjB,IAAsBA,YAAY,CAAZ,MAAmB,CAA7C,EAAgD;AAC9CwD,0BAAkBf,IAAlB,CAAuBQ,KAAK,oBAAL,CAAvB;AACD;AACDO,wBAAkBf,IAAlB,CACEQ,KAAK,oBAAL,EAA2B;AACzBE,kBAAU,CAACF,KAAK,oBAAL,CAAD;AADe,OAA3B,CADF,EAIEA,KAAK,oBAAL,CAJF;AAMD;;AAED,QAAIQ,yBAAyB,CAC3BR,KAAK,iBAAL,EAAwB;AACtBE,gBAAU,CACRF,KAAK,iBAAL,EAAwB;AACtBE,kBAAUK;AADY,OAAxB,CADQ,EAIRP,KAAK,iBAAL,EAAwB;AACtBE,kBAAUnD,YAAY,CAAZ,IAAiB,CAAjB,IAAsBA,YAAY,CAAZ,IAAiB,EAAvC,GACN,CAACiD,KAAK,iBAAL,CAAD,CADM,GAEN;AAHkB,OAAxB,CAJQ;AADY,KAAxB,CAD2B,CAA7B;;AAeA,QAAIjD,YAAY,CAAZ,IAAiB,CAArB,EAAwB;AACtByD,6BAAuBhB,IAAvB,CAA4BQ,KAAK,iBAAL,CAA5B;AACD;;AAEDQ,2BAAuBhB,IAAvB,CACEQ,KAAK,iBAAL,CADF,EAEEA,KAAK,iBAAL,EAAwB;AACtBG,cAAQ,CADc;AAEtBnC,aAAO;AAFe,KAAxB,CAFF;;AAQA,QAAIyC,iBAAiBT,KAAK,iBAAL,EAAwB;AAC3CE,gBAAUM;AADiC,KAAxB,CAArB;;AAIA;AACA;AACA;AACA,QAAID,oBAAoB,EAAxB;AACA,QAAIxD,YAAY,CAAZ,IAAiB,CAArB,EAAwB;AACtBwD,wBAAkBf,IAAlB,CAAuBQ,KAAK,oBAAL,CAAvB;AACD;;AAEDO,sBAAkBf,IAAlB,CAAuBQ,KAAK,0BAAL,EAAiC;AACtDhC,aAAO;AAD+C,KAAjC,CAAvB;;AAIA,QAAI0C,2BAA2B,CAC7BV,KAAK,oBAAL,EAA2B;AACzBE,gBAAUK;AADe,KAA3B,CAD6B,EAI7BP,KAAK,oBAAL,CAJ6B,EAK7BA,KAAK,oBAAL,CAL6B,CAA/B;AAOA,QAAIW,yBAAyB,EAA7B;AACA,QAAI5D,YAAY,CAAZ,KAAkB,CAAlB,IAAuBA,YAAY,CAAZ,IAAiB,EAA5C,EAAgD;AAC9C4D,6BAAuBnB,IAAvB,CAA4BQ,KAAK,oBAAL,CAA5B;AACD;AACDW,2BAAuBnB,IAAvB,CAA4BQ,KAAK,oBAAL,EAA2B;AACrDE,gBAAUnD,YAAY,CAAZ,KAAkB,CAAlB,IAAuBA,YAAY,CAAZ,IAAiB,EAAxC,GACNwD,iBADM,GAENG;AAHiD,KAA3B,CAA5B;AAKA,QAAI3D,YAAY,CAAZ,IAAiB,CAAjB,IAAsBA,YAAY,CAAZ,IAAiB,EAA3C,EAA+C;AAC7C,UAAIA,YAAY,CAAZ,IAAiB,CAAjB,IAAsBA,YAAY,CAAZ,MAAmB,CAA7C,EAAgD;AAC9C4D,+BAAuBnB,IAAvB,CAA4BQ,KAAK,oBAAL,CAA5B;AACD;AACDW,6BAAuBnB,IAAvB,CACEQ,KAAK,oBAAL,EAA2B;AACzBE,kBAAU,CAACF,KAAK,oBAAL,CAAD;AADe,OAA3B,CADF,EAIEA,KAAK,oBAAL,CAJF;AAMD;;AAED,QAAIY,kBAAkBZ,KAAK,iBAAL,EAAwB;AAC5CE,gBAAU,CACRF,KAAK,iBAAL,EAAwB;AACtBE,kBAAU,CACRF,KAAK,0BAAL,EAAiC;AAC/BE,oBAAUS;AADqB,SAAjC,CADQ,EAIRX,KAAK,0BAAL,EAAiC;AAC/BE,oBAAU,CAACF,KAAK,0BAAL,CAAD;AADqB,SAAjC,CAJQ;AADY,OAAxB,CADQ;AADkC,KAAxB,CAAtB;;AAeA;AACA;AACA;AACA,QAAI3B,WAAW2B,KAAK,MAAL,EAAa;AAC1BE,gBAAU,CACRO,cADQ,EAERG,eAFQ,CADgB;AAK1BT,cAAQ,CALkB;AAM1BnC,aAAO;AANmB,KAAb,CAAf;AAQD;;AAED,MAAIU,SAAS5B,KAAK+D,YAAL,CAAkB,UAAUjC,GAAV,EAAeK,GAAf,EAAoB;AACjDA,QAAIa,GAAJ,CAAQ,OAAR;AACD,GAFY,CAAb;;AAIA;AACA;AACA;AACApB,SAAOoC,MAAP,CAAc,YAAY;AACxBxD,SAAK,YAAY;AACfoB,aAAOqC,KAAP;AACArC,aAAOY,EAAP,CAAU,OAAV,EAAmB,YAAY;AAC7BjC,UAAEyC,GAAF;AACD,OAFD;AAGD,KALD;AAMD,GAPD;AAQD,CAvPD;;AAyPA,SAASrC,UAAT,GAAsB;AACpB,MAAID,WAAWhB,QAAQC,gBAAR,CAAyB;AACtCuE,YAAQA,MAD8B;AAEtCb,YAAQA,MAF8B;AAGtCnC,WAAOA,KAH+B;AAItCoC,WAAOA;AAJ+B,GAAzB,CAAf;;AAOA,MAAIa,QAAQ;AACVzD,cAAUA,QADA;AAEVgB,iBAAa;AAFH,GAAZ;;AAKAyC,QAAM7C,IAAN,GAAa4C,QAAb;AACAC,QAAM9B,OAAN,GAAgB8B,MAAM7C,IAAtB;;AAEA,SAAO6C,KAAP;;AAEA,WAASD,MAAT,GAAmB;AACjB,QAAIE,OAAO;AACT9B,YAAM6B,MAAMzC,WADH;AAET0B,gBAAU,EAFD;AAGTC,cAAQ,CAHC;AAITnC,aAAO,CAJE;AAKToC,aAAO;AALE,KAAX;;AAQA,QAAGa,MAAM9B,OAAT,EAAkB8B,MAAM9B,OAAN,CAAce,QAAd,CAAuBV,IAAvB,CAA4B0B,IAA5B;AAClB,WAAOA,IAAP;AACD;;AAED,WAASf,MAAT,CAAgBgB,GAAhB,EAAqBD,IAArB,EAA2B;AACzBD,UAAM9B,OAAN,GAAgB+B,IAAhB;AACAD,UAAM9B,OAAN,CAAcgB,MAAd;AACD;;AAED,WAASnC,KAAT,CAAemD,GAAf,EAAoBD,IAApB,EAA0B;AACxBA,SAAKlD,KAAL;AACAiD,UAAM9B,OAAN,GAAgB,IAAhB;AACD;;AAED,WAASiB,KAAT,CAAee,GAAf,EAAoBD,IAApB,EAA0B;AACxBA,SAAKd,KAAL;AACAa,UAAM9B,OAAN,GAAgB,IAAhB;AACA,WAAO,KAAP;AACD;AACF","file":"http-request.tap.js","sourcesContent":["if (!process.addAsyncListener) require('../index.js');\n\nvar extend = require('util')._extend;\nvar test = require('tap').test;\nvar http = require('http');\n\n// Convert semver string to number set\n// TODO: This is *very* naive structure to check versions with,\n// but it works well enough for now...\nvar nodeVersion = process.version.slice(1).split('.').map(Number)\n\ntest('http.Agent socket reuse works', function(t){\n  function main (done) {\n    var listener = addListner();\n    var times = 2;\n\n    var agent = new http.Agent({\n      keepAlive: true,\n      maxFreeSockets: 1,\n      maxSockets: 1\n    });\n\n    function after(rand, i) {\n      if (--times === 0) {\n        t.deepEqual(\n          listener.root,\n          expected,\n          'should have equal state structures'\n        );\n        if (agent.destroy) {\n          agent.destroy();\n        }\n        done();\n      }\n    }\n\n    function ping(i) {\n      listener.currentName = 'ping #' + i + ' request';\n      var addr = server.address();\n      var req = http.request({\n        agent: agent,\n        port: addr.port,\n        host: addr.host,\n        path: '/sub'\n      }, function (res) {\n        // The second request is a logical continuation of\n        // the first request, due to the http.Agent pooling\n        if (i === 0) {\n          t.equal(\n            listener.current.name,\n            'ping #' + i + ' request',\n            'should be ping #' + i + ' request'\n          );\n        } else {\n          t.equal(\n            listener.current.name,\n            'setImmediate to after #' + (i - 1),\n            'should be setImmediate to after #' + (i - 1)\n          );\n        }\n\n        listener.currentName = 'res.resume ping #' + i;\n        const bufs = [];\n        res.on('data', function (chunk) {\n          bufs.push(chunk);\n        });\n        res.on('end', function () {\n          const body = Buffer.concat(bufs).toString();\n          t.equal('hello', body, 'should have body of \"hello\"')\n          t.equal(\n            listener.current.name,\n            'res.resume ping #' + i,\n            'should be res.resume ping #' + i\n          );\n          listener.currentName = 'setImmediate to after #' + i;\n          setImmediate(after, i);\n        });\n      });\n      listener.currentName = 'req.end ping #' + i;\n      req.end();\n    }\n\n    for (var i = 0; i < times; i++) {\n      listener.currentName = 'setImmediate #' + i;\n      setImmediate(ping, i);\n    }\n\n    process.removeAsyncListener(listener.listener);\n\n    //\n    // NOTE: This expected structure building stuff is really complicated\n    // because the interactions in node internals changed so much from 0.10\n    // until now. It could be a lot simpler if we only cared about testing\n    // the current stable, but this really needs to be tested back to 0.10.\n    //\n    // I'm sorry. :'(\n    //\n    function make (name, override) {\n      return extend({\n        name: name,\n        children: [],\n        before: 1,\n        after: 1,\n        error: 0\n      }, override || {})\n    }\n\n    //\n    // First ping branch\n    //\n    var innerResumeChildren = [];\n    if (nodeVersion[0] < 8) {\n      innerResumeChildren.push(make('res.resume ping #0'));\n    }\n    innerResumeChildren.push(make('setImmediate to after #0'));\n\n    var innerResumeChildrenWrapped = [\n      make('res.resume ping #0', {\n        children: innerResumeChildren\n      }),\n      make('res.resume ping #0'),\n      make('res.resume ping #0')\n    ];\n    var innerPingChildren = [];\n    if (nodeVersion[0] == 0 && nodeVersion[1] < 12) {\n      innerPingChildren.push(make('res.resume ping #0'));\n    }\n    innerPingChildren.push(make('res.resume ping #0', {\n      children: nodeVersion[0] == 0 && nodeVersion[1] < 12\n        ? innerResumeChildren\n        : innerResumeChildrenWrapped\n    }));\n    if (nodeVersion[0] > 0 || nodeVersion[1] > 10) {\n      if (nodeVersion[0] < 6 && nodeVersion[0] !== 4) {\n        innerPingChildren.push(make('res.resume ping #0'));\n      }\n      innerPingChildren.push(\n        make('res.resume ping #0', {\n          children: [make('res.resume ping #0')]\n        }),\n        make('res.resume ping #0')\n      );\n    }\n\n    var firstImmediateChildren = [\n      make('ping #0 request', {\n        children: [\n          make('ping #0 request', {\n            children: innerPingChildren\n          }),\n          make('ping #0 request', {\n            children: nodeVersion[0] > 0 || nodeVersion[1] > 10\n              ? [make('req.end ping #1')]\n              : []\n          })\n        ]\n      })\n    ];\n\n    if (nodeVersion[0] > 4) {\n      firstImmediateChildren.push(make('ping #0 request'));\n    };\n    \n    firstImmediateChildren.push(\n      make('ping #0 request'),\n      make('ping #0 request', {\n        before: 0,\n        after: 0\n      })\n    );\n\n    var firstImmediate = make('setImmediate #0', {\n      children: firstImmediateChildren\n    });\n\n    //\n    // Second ping branch\n    //\n    var innerPingChildren = [];\n    if (nodeVersion[0] < 8) {\n      innerPingChildren.push(make('res.resume ping #1'));\n    }\n\n    innerPingChildren.push(make('setImmediate to after #1', {\n      after: 0\n    }));\n\n    var innerPingChildrenWrapped = [\n      make('res.resume ping #1', {\n        children: innerPingChildren\n      }),\n      make('res.resume ping #1'),\n      make('res.resume ping #1')\n    ];\n    var innerImmediateChildren = [];\n    if (nodeVersion[0] == 0 && nodeVersion[1] < 12) {\n      innerImmediateChildren.push(make('res.resume ping #1'));\n    }\n    innerImmediateChildren.push(make('res.resume ping #1', {\n      children: nodeVersion[0] == 0 && nodeVersion[1] < 12\n        ? innerPingChildren\n        : innerPingChildrenWrapped\n    }));\n    if (nodeVersion[0] > 0 || nodeVersion[1] > 10) {\n      if (nodeVersion[0] < 6 && nodeVersion[0] !== 4) {\n        innerImmediateChildren.push(make('res.resume ping #1'));\n      }\n      innerImmediateChildren.push(\n        make('res.resume ping #1', {\n          children: [make('res.resume ping #1')]\n        }),\n        make('res.resume ping #1')\n      );\n    }\n\n    var secondImmediate = make('setImmediate #1', {\n      children: [\n        make('ping #1 request', {\n          children: [\n            make('setImmediate to after #0', {\n              children: innerImmediateChildren\n            }),\n            make('setImmediate to after #0', {\n              children: [make('setImmediate to after #0')]\n            })\n          ]\n        })\n      ]\n    });\n\n    //\n    // Make expected object\n    //\n    var expected = make('root', {\n      children: [\n        firstImmediate,\n        secondImmediate\n      ],\n      before: 0,\n      after: 0\n    });\n  }\n\n  var server = http.createServer(function (req, res) {\n    res.end('hello');\n  });\n\n  //\n  // Test client\n  //\n  server.listen(function () {\n    main(function () {\n      server.close();\n      server.on('close', function () {\n        t.end();\n      });\n    });\n  });\n});\n\nfunction addListner() {\n  var listener = process.addAsyncListener({\n    create: create,\n    before: before,\n    after: after,\n    error: error\n  });\n\n  var state = {\n    listener: listener,\n    currentName: 'root'\n  };\n\n  state.root = create();\n  state.current = state.root;\n\n  return state;\n\n  function create () {\n    var node = {\n      name: state.currentName,\n      children: [],\n      before: 0,\n      after: 0,\n      error: 0\n    };\n\n    if(state.current) state.current.children.push(node);\n    return node;\n  }\n\n  function before(ctx, node) {\n    state.current = node;\n    state.current.before++;\n  }\n\n  function after(ctx, node) {\n    node.after++;\n    state.current = null;\n  }\n\n  function error(ctx, node) {\n    node.error++;\n    state.current = null;\n    return false;\n  }\n}\n"]}
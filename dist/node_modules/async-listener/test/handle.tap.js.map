{"version":3,"sources":["../../../../src/node_modules/async-listener/test/handle.tap.js"],"names":["process","addAsyncListener","require","test","net","t","plan","server","createServer","listen","client","connect","port","on","ok","end","close","setTimeout"],"mappings":";;AAAA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;;AAE/B,IAAIC,OAAOD,QAAQ,KAAR,EAAeC,IAA1B;AACA,IAAIC,MAAMF,QAAQ,KAAR,CAAV;;AAEAC,KAAK,yDAAL,EAAgE,UAASE,CAAT,EAAW;AACzEA,IAAEC,IAAF,CAAO,CAAP;;AAEA;AACA,MAAIC,SAASH,IAAII,YAAJ,GAAmBC,MAAnB,CAA0B,IAA1B,CAAb;;AAEA;AACA,MAAIC,SAASN,IAAIO,OAAJ,CAAY,EAACC,MAAM,IAAP,EAAZ,CAAb;;AAEAF,SAAOG,EAAP,CAAU,SAAV,EAAqB,YAAU;AAC7BR,MAAES,EAAF,CAAK,IAAL,EAAW,SAAX;AACA;AACAJ,WAAOK,GAAP;AACD,GAJD;;AAMAL,SAAOG,EAAP,CAAU,OAAV,EAAmB,YAAU;AAC3BN,WAAOS,KAAP;AACAX,MAAES,EAAF,CAAK,IAAL,EAAW,WAAX;AACD,GAHD;;AAKAJ,SAAOG,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BI,eAAW,YAAU;AACnB;AACA;AACAZ,QAAES,EAAF,CAAK,IAAL,EAAW,KAAX;AACAJ,aAAOC,OAAP,CAAe,IAAf;AACD,KALD,EAKG,GALH;AAMD,GAPD;AAQD,CA5BD","file":"handle.tap.js","sourcesContent":["if (!process.addAsyncListener) require('../index.js');\n\nvar test = require('tap').test;\nvar net = require('net');\n\ntest('synchronous errors during connect return a null _handle', function(t){\n  t.plan(3);\n\n  // listening server\n  var server = net.createServer().listen(8000);\n\n  // client\n  var client = net.connect({port: 8000});\n\n  client.on('connect', function(){\n    t.ok(true, 'connect');\n    // kill connection\n    client.end();\n  });\n\n  client.on('error', function(){\n    server.close();\n    t.ok(true, 'done test');\n  });\n\n  client.on('end', function() {\n    setTimeout(function(){\n      // try to reconnect, but this has an error\n      // rather than throw the right error, we're going to get an async-listener error\n      t.ok(true, 'end');\n      client.connect(8001);\n    }, 100);\n  });\n});\n"]}
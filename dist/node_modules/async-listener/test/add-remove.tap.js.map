{"version":3,"sources":["../../../../src/node_modules/async-listener/test/add-remove.tap.js"],"names":["test","require","t","plan","process","addAsyncListener","ok","createAsyncListener","counted","listener","create","before","after","error","Object","doesNotThrow","removeAsyncListener","equal"],"mappings":"AAAA;;AAEA,IAAIA,OAAOC,QAAQ,KAAR,EAAeD,IAA1B;;AAEAA,KAAK,0BAAL,EAAiC,UAAUE,CAAV,EAAa;AAC5CA,IAAEC,IAAF,CAAO,CAAP;;AAEA,MAAI,CAACC,QAAQC,gBAAb,EAA+BJ,QAAQ,aAAR;;AAE/BC,IAAEI,EAAF,CAAKF,QAAQG,mBAAb,EAAkC,4BAAlC;AACA,MAAIC,UAAU,CAAd;AACA,MAAIC,WAAWL,QAAQG,mBAAR,CACb;AACEG,YAAS,kBAAY;AAAEF;AAAY,KADrC;AAEEG,YAAS,kBAAY,CAAE,CAFzB;AAGEC,WAAS,iBAAY,CAAE,CAHzB;AAIEC,WAAS,iBAAY,CAAE;AAJzB,GADa,EAObC,OAAOJ,MAAP,CAAc,IAAd,CAPa,CAAf;;AAUAR,IAAEI,EAAF,CAAKF,QAAQC,gBAAb,EAA+B,yBAA/B;AACAH,IAAEa,YAAF,CAAe,YAAY;AACzBN,eAAWL,QAAQC,gBAAR,CAAyBI,QAAzB,CAAX;AACD,GAFD,EAEG,uBAFH;;AAIAP,IAAEI,EAAF,CAAKG,QAAL,EAAe,qCAAf;;AAEAP,IAAEI,EAAF,CAAKF,QAAQY,mBAAb,EAAkC,4BAAlC;AACAd,IAAEa,YAAF,CAAe,YAAY;AACzBX,YAAQY,mBAAR,CAA4BP,QAA5B;AACD,GAFD,EAEG,yBAFH;;AAIAP,IAAEa,YAAF,CAAe,YAAY;AACzBX,YAAQY,mBAAR,CAA4BP,QAA5B;AACD,GAFD,EAEG,+BAFH;;AAIAP,IAAEe,KAAF,CAAQT,OAAR,EAAiB,CAAjB,EAAoB,gCAApB;AACD,CAlCD","file":"add-remove.tap.js","sourcesContent":["'use strict';\n\nvar test = require('tap').test;\n\ntest(\"async listener lifecycle\", function (t) {\n  t.plan(8);\n\n  if (!process.addAsyncListener) require('../index.js');\n\n  t.ok(process.createAsyncListener, \"can create async listeners\");\n  var counted = 0;\n  var listener = process.createAsyncListener(\n    {\n      create : function () { counted++; },\n      before : function () {},\n      after  : function () {},\n      error  : function () {}\n    },\n    Object.create(null)\n  );\n\n  t.ok(process.addAsyncListener, \"can add async listeners\");\n  t.doesNotThrow(function () {\n    listener = process.addAsyncListener(listener);\n  }, \"adding does not throw\");\n\n  t.ok(listener, \"have a listener we can later remove\");\n\n  t.ok(process.removeAsyncListener, \"can remove async listeners\");\n  t.doesNotThrow(function () {\n    process.removeAsyncListener(listener);\n  }, \"removing does not throw\");\n\n  t.doesNotThrow(function () {\n    process.removeAsyncListener(listener);\n  }, \"failing remove does not throw\");\n\n  t.equal(counted, 0, \"didn't hit any async functions\");\n});\n"]}
{"version":3,"sources":["../../../../src/node_modules/async-listener/test/core-asynclistener-nexttick-remove.simple.js"],"names":["process","addAsyncListener","require","assert","net","fs","actualAsync","expectAsync","on","console","log","equal","onAsync","id","nextTick","removeAsyncListener","b","setInterval","clearInterval","c","setTimeout","setImmediate","interval","i","stat","server","createServer","listen","close"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;;AAE/B,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,MAAMF,QAAQ,KAAR,CAAV;AACA,IAAIG,KAAKH,QAAQ,IAAR,CAAT;;AAEA,IAAII,cAAc,CAAlB;AACA,IAAIC,cAAc,CAAlB;;AAGAP,QAAQQ,EAAR,CAAW,MAAX,EAAmB,YAAW;AAC5BC,UAAQC,GAAR,CAAY,UAAZ,EAAwBH,WAAxB;AACAE,UAAQC,GAAR,CAAY,UAAZ,EAAwBJ,WAAxB;AACAH,SAAOQ,KAAP,CAAaJ,WAAb,EAA0BD,WAA1B;AACAG,UAAQC,GAAR,CAAY,IAAZ;AACD,CALD;;AAQA;;AAEA,SAASE,OAAT,GAAmB;AACjBN;AACD;;AAGD,IAAIO,EAAJ;AACAb,QAAQc,QAAR,CAAiB,YAAW;AAC1Bd,UAAQe,mBAAR,CAA4BF,EAA5B;AACD,CAFD;AAGAA,KAAKb,QAAQC,gBAAR,CAAyBW,OAAzB,CAAL;;AAGA;AACA,IAAII,IAAIC,YAAY,YAAW;AAC7BC,gBAAcF,CAAd;AACD,CAFO,CAAR;AAGAT;;AAEA,IAAIY,IAAIF,YAAY,YAAW;AAC7BC,gBAAcC,CAAd;AACD,CAFO,CAAR;AAGAZ;;AAEAa,WAAW,YAAW,CAAG,CAAzB;AACAb;;AAEAa,WAAW,YAAW,CAAG,CAAzB;AACAb;;AAEAP,QAAQc,QAAR,CAAiB,YAAW,CAAG,CAA/B;AACAP;;AAEAP,QAAQc,QAAR,CAAiB,YAAW,CAAG,CAA/B;AACAP;;AAEAc,aAAa,YAAW,CAAG,CAA3B;AACAd;;AAEAc,aAAa,YAAW,CAAG,CAA3B;AACAd;;AAEAa,WAAW,YAAW,CAAG,CAAzB,EAA2B,GAA3B;AACAb;;AAEAa,WAAW,YAAW,CAAG,CAAzB,EAA2B,GAA3B;AACAb;;AAGA;AACA,IAAIe,WAAW,CAAf;;AAEAtB,QAAQc,QAAR,CAAiB,YAAW;AAC1BM,aAAW,YAAW;AACpBC,iBAAa,YAAW;AACtB,UAAIE,IAAIN,YAAY,YAAW;AAC7B,YAAI,EAAEK,QAAF,IAAc,CAAlB,EACEJ,cAAcK,CAAd;AACH,OAHO,CAAR;AAIAhB;AACD,KAND;AAOAA;AACAP,YAAQc,QAAR,CAAiB,YAAW;AAC1BO,mBAAa,YAAW;AACtBD,mBAAW,YAAW,CAAG,CAAzB,EAA2B,GAA3B;AACAb;AACD,OAHD;AAIAA;AACD,KAND;AAOAA;AACD,GAjBD;AAkBAA;AACD,CApBD;AAqBAA;;AAGA;AACAF,GAAGmB,IAAH,CAAQ,kBAAR,EAA4B,YAAW,CAAG,CAA1C;AACAjB;;AAEAc,aAAa,YAAW;AACtBhB,KAAGmB,IAAH,CAAQ,cAAR,EAAwB,YAAW,CAAG,CAAtC;AACAjB;AACD,CAHD;AAIAA;;AAGA;AACA,IAAIkB,SAASrB,IAAIsB,YAAJ,CAAiB,YAAW,CAAG,CAA/B,CAAb;AACAnB;;AAEAkB,OAAOE,MAAP,CAAc,IAAd,EAAoB,YAAW;AAC7BF,SAAOG,KAAP;AACArB;AACD,CAHD;AAIAA","file":"core-asynclistener-nexttick-remove.simple.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nif (!process.addAsyncListener) require('../index.js');\n\nvar assert = require('assert');\nvar net = require('net');\nvar fs = require('fs');\n\nvar actualAsync = 0;\nvar expectAsync = 0;\n\n\nprocess.on('exit', function() {\n  console.log('expected', expectAsync);\n  console.log('actual  ', actualAsync);\n  assert.equal(expectAsync, actualAsync);\n  console.log('ok');\n});\n\n\n// --- Begin Testing --- //\n\nfunction onAsync() {\n  actualAsync++;\n}\n\n\nvar id;\nprocess.nextTick(function() {\n  process.removeAsyncListener(id);\n});\nid = process.addAsyncListener(onAsync);\n\n\n// Test listeners side-by-side\nvar b = setInterval(function() {\n  clearInterval(b);\n});\nexpectAsync++;\n\nvar c = setInterval(function() {\n  clearInterval(c);\n});\nexpectAsync++;\n\nsetTimeout(function() { });\nexpectAsync++;\n\nsetTimeout(function() { });\nexpectAsync++;\n\nprocess.nextTick(function() { });\nexpectAsync++;\n\nprocess.nextTick(function() { });\nexpectAsync++;\n\nsetImmediate(function() { });\nexpectAsync++;\n\nsetImmediate(function() { });\nexpectAsync++;\n\nsetTimeout(function() { }, 100);\nexpectAsync++;\n\nsetTimeout(function() { }, 100);\nexpectAsync++;\n\n\n// Async listeners should propagate with nested callbacks\nvar interval = 3;\n\nprocess.nextTick(function() {\n  setTimeout(function() {\n    setImmediate(function() {\n      var i = setInterval(function() {\n        if (--interval <= 0)\n          clearInterval(i);\n      });\n      expectAsync++;\n    });\n    expectAsync++;\n    process.nextTick(function() {\n      setImmediate(function() {\n        setTimeout(function() { }, 200);\n        expectAsync++;\n      });\n      expectAsync++;\n    });\n    expectAsync++;\n  });\n  expectAsync++;\n});\nexpectAsync++;\n\n\n// Test callbacks from fs I/O\nfs.stat('something random', function() { });\nexpectAsync++;\n\nsetImmediate(function() {\n  fs.stat('random again', function() { });\n  expectAsync++;\n});\nexpectAsync++;\n\n\n// Test net I/O\nvar server = net.createServer(function() { });\nexpectAsync++;\n\nserver.listen(8080, function() {\n  server.close();\n  expectAsync++;\n});\nexpectAsync++;\n"]}
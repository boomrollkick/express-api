{"version":3,"sources":["../../../../src/node_modules/async-listener/test/core-asynclistener-error-throw-in-error.simple.js"],"names":["process","addAsyncListener","require","global","setImmediate","setTimeout","assert","cluster","onAsync0","isMaster","setupMaster","silent","fork","on","worker","code","_fatalException","equal","console","log","once","handlers","error","exit","Error","key","removeAsyncListener"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,CAACA,QAAQC,gBAAb,EAA+BC,QAAQ,aAAR;AAC/B,IAAI,CAACC,OAAOC,YAAZ,EAA0BD,OAAOC,YAAP,GAAsBC,UAAtB;;AAE1B,IAAIC,SAAUJ,QAAQ,QAAR,CAAd;AACA,IAAIK,UAAUL,QAAQ,SAAR,CAAd;;AAEA,SAASM,QAAT,GAAoB,CAAE;;AAEtB,IAAID,QAAQE,QAAZ,EAAsB;AACpBF,UAAQG,WAAR,CAAoB;AAClBC,YAAS;AADS,GAApB;AAGAJ,UAAQK,IAAR;AACAL,UAAQM,EAAR,CAAW,MAAX,EAAmB,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACzC,QAAIf,QAAQgB,eAAZ,EAA6B;AAC3B;AACAV,aAAOW,KAAP,CAAaF,IAAb,EAAmB,CAAnB;AACD,KAHD,MAIK;AACH;AACAT,aAAOW,KAAP,CAAaF,IAAb,EAAmB,CAAnB;AACD;;AAEDG,YAAQC,GAAR,CAAY,IAAZ;AACD,GAXD;AAYD,CAjBD,MAiBO;AACL,MAAIC,OAAO,CAAX;;AAEA,MAAIC,WAAW;AACbC,WAAQ,iBAAY;AAClB;AACA,UAAIF,WAAW,CAAf,EAAkBpB,QAAQuB,IAAR,CAAa,CAAb;;AAElB,YAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;AANY,GAAf;;AASA,MAAIC,MAAMzB,QAAQC,gBAAR,CAAyBO,QAAzB,EAAmCa,QAAnC,CAAV;;AAEArB,UAAQa,EAAR,CAAW,oBAAX,EAAiC,YAAY;AAC3C;AACAb,YAAQuB,IAAR,CAAa,CAAb;AACD,GAHD;;AAKAnB,eAAa,YAAY;AACvB,UAAM,IAAIoB,KAAJ,CAAU,cAAV,CAAN;AACD,GAFD;;AAIAxB,UAAQ0B,mBAAR,CAA4BD,GAA5B;AACD","file":"core-asynclistener-error-throw-in-error.simple.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nif (!process.addAsyncListener) require('../index.js');\nif (!global.setImmediate) global.setImmediate = setTimeout;\n\nvar assert  = require('assert');\nvar cluster = require('cluster');\n\nfunction onAsync0() {}\n\nif (cluster.isMaster) {\n  cluster.setupMaster({\n    silent : true\n  });\n  cluster.fork();\n  cluster.on('exit', function (worker, code) {\n    if (process._fatalException) {\n      // verify child exited because of throw from 'error'\n      assert.equal(code, 7);\n    }\n    else {\n      // node < 0.9.x doesn't have error exit codes\n      assert.equal(code, 1);\n    }\n\n    console.log('ok');\n  });\n} else {\n  var once = 0;\n\n  var handlers = {\n    error : function () {\n      // the error handler should not be called again\n      if (once++ !== 0) process.exit(5);\n\n      throw new Error('error handler');\n    }\n  };\n\n  var key = process.addAsyncListener(onAsync0, handlers);\n\n  process.on('unhandledException', function () {\n    // throwing in 'error' should bypass unhandledException\n    process.exit(1);\n  });\n\n  setImmediate(function () {\n    throw new Error('setImmediate');\n  });\n\n  process.removeAsyncListener(key);\n}\n"]}
{"version":3,"sources":["../../../src/node_modules/async/forEachLimit.js"],"names":["Object","defineProperty","exports","value","default","eachLimit","_eachOfLimit","require","_eachOfLimit2","_interopRequireDefault","_withoutIndex","_withoutIndex2","_wrapAsync","_wrapAsync2","obj","__esModule","coll","limit","iteratee","callback","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,eAAeC,QAAQ,wBAAR,CAAnB;;AAEA,IAAIC,gBAAgBC,uBAAuBH,YAAvB,CAApB;;AAEA,IAAII,gBAAgBH,QAAQ,yBAAR,CAApB;;AAEA,IAAII,iBAAiBF,uBAAuBC,aAAvB,CAArB;;AAEA,IAAIE,aAAaL,QAAQ,sBAAR,CAAjB;;AAEA,IAAIM,cAAcJ,uBAAuBG,UAAvB,CAAlB;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;AAoBA,SAAST,SAAT,CAAmBW,IAAnB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAClD,GAAC,GAAGX,cAAcJ,OAAlB,EAA2Ba,KAA3B,EAAkCD,IAAlC,EAAwC,CAAC,GAAGL,eAAeP,OAAnB,EAA4B,CAAC,GAAGS,YAAYT,OAAhB,EAAyBc,QAAzB,CAA5B,CAAxC,EAAyGC,QAAzG;AACD;AACDC,OAAOlB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"forEachLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachLimit;\n\nvar _eachOfLimit = require('./internal/eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _withoutIndex = require('./internal/withoutIndex');\n\nvar _withoutIndex2 = _interopRequireDefault(_withoutIndex);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit(coll, limit, iteratee, callback) {\n  (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);\n}\nmodule.exports = exports['default'];"]}
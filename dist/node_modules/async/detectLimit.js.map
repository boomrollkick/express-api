{"version":3,"sources":["../../../src/node_modules/async/detectLimit.js"],"names":["Object","defineProperty","exports","value","_identity","require","_identity2","_interopRequireDefault","_createTester","_createTester2","_doParallelLimit","_doParallelLimit2","_findGetResult","_findGetResult2","obj","__esModule","default","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;;AAIA,IAAIC,YAAYC,QAAQ,iBAAR,CAAhB;;AAEA,IAAIC,aAAaC,uBAAuBH,SAAvB,CAAjB;;AAEA,IAAII,gBAAgBH,QAAQ,yBAAR,CAApB;;AAEA,IAAII,iBAAiBF,uBAAuBC,aAAvB,CAArB;;AAEA,IAAIE,mBAAmBL,QAAQ,4BAAR,CAAvB;;AAEA,IAAIM,oBAAoBJ,uBAAuBG,gBAAvB,CAAxB;;AAEA,IAAIE,iBAAiBP,QAAQ,0BAAR,CAArB;;AAEA,IAAIQ,kBAAkBN,uBAAuBK,cAAvB,CAAtB;;AAEA,SAASL,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;AAsBAZ,QAAQc,OAAR,GAAkB,CAAC,GAAGL,kBAAkBK,OAAtB,EAA+B,CAAC,GAAGP,eAAeO,OAAnB,EAA4BV,WAAWU,OAAvC,EAAgDH,gBAAgBG,OAAhE,CAA/B,CAAlB;AACAC,OAAOf,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"detectLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _identity = require('lodash/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _createTester = require('./internal/createTester');\n\nvar _createTester2 = _interopRequireDefault(_createTester);\n\nvar _doParallelLimit = require('./internal/doParallelLimit');\n\nvar _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);\n\nvar _findGetResult = require('./internal/findGetResult');\n\nvar _findGetResult2 = _interopRequireDefault(_findGetResult);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nexports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));\nmodule.exports = exports['default'];"]}
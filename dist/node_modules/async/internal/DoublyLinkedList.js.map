{"version":3,"sources":["../../../../src/node_modules/async/internal/DoublyLinkedList.js"],"names":["Object","defineProperty","exports","value","default","DLL","head","tail","length","setInitial","dll","node","prototype","removeLink","prev","next","empty","shift","insertAfter","newNode","insertBefore","unshift","push","pop","toArray","arr","Array","curr","idx","data","remove","testFn","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,GAAlB;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,GAAe;AACX,SAAKC,IAAL,GAAY,KAAKC,IAAL,GAAY,IAAxB;AACA,SAAKC,MAAL,GAAc,CAAd;AACH;;AAED,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC3BD,QAAIF,MAAJ,GAAa,CAAb;AACAE,QAAIJ,IAAJ,GAAWI,IAAIH,IAAJ,GAAWI,IAAtB;AACH;;AAEDN,IAAIO,SAAJ,CAAcC,UAAd,GAA2B,UAAUF,IAAV,EAAgB;AACvC,QAAIA,KAAKG,IAAT,EAAeH,KAAKG,IAAL,CAAUC,IAAV,GAAiBJ,KAAKI,IAAtB,CAAf,KAA+C,KAAKT,IAAL,GAAYK,KAAKI,IAAjB;AAC/C,QAAIJ,KAAKI,IAAT,EAAeJ,KAAKI,IAAL,CAAUD,IAAV,GAAiBH,KAAKG,IAAtB,CAAf,KAA+C,KAAKP,IAAL,GAAYI,KAAKG,IAAjB;;AAE/CH,SAAKG,IAAL,GAAYH,KAAKI,IAAL,GAAY,IAAxB;AACA,SAAKP,MAAL,IAAe,CAAf;AACA,WAAOG,IAAP;AACH,CAPD;;AASAN,IAAIO,SAAJ,CAAcI,KAAd,GAAsB,YAAY;AAC9B,WAAO,KAAKV,IAAZ;AAAkB,aAAKW,KAAL;AAAlB,KACA,OAAO,IAAP;AACH,CAHD;;AAKAZ,IAAIO,SAAJ,CAAcM,WAAd,GAA4B,UAAUP,IAAV,EAAgBQ,OAAhB,EAAyB;AACjDA,YAAQL,IAAR,GAAeH,IAAf;AACAQ,YAAQJ,IAAR,GAAeJ,KAAKI,IAApB;AACA,QAAIJ,KAAKI,IAAT,EAAeJ,KAAKI,IAAL,CAAUD,IAAV,GAAiBK,OAAjB,CAAf,KAA6C,KAAKZ,IAAL,GAAYY,OAAZ;AAC7CR,SAAKI,IAAL,GAAYI,OAAZ;AACA,SAAKX,MAAL,IAAe,CAAf;AACH,CAND;;AAQAH,IAAIO,SAAJ,CAAcQ,YAAd,GAA6B,UAAUT,IAAV,EAAgBQ,OAAhB,EAAyB;AAClDA,YAAQL,IAAR,GAAeH,KAAKG,IAApB;AACAK,YAAQJ,IAAR,GAAeJ,IAAf;AACA,QAAIA,KAAKG,IAAT,EAAeH,KAAKG,IAAL,CAAUC,IAAV,GAAiBI,OAAjB,CAAf,KAA6C,KAAKb,IAAL,GAAYa,OAAZ;AAC7CR,SAAKG,IAAL,GAAYK,OAAZ;AACA,SAAKX,MAAL,IAAe,CAAf;AACH,CAND;;AAQAH,IAAIO,SAAJ,CAAcS,OAAd,GAAwB,UAAUV,IAAV,EAAgB;AACpC,QAAI,KAAKL,IAAT,EAAe,KAAKc,YAAL,CAAkB,KAAKd,IAAvB,EAA6BK,IAA7B,EAAf,KAAuDF,WAAW,IAAX,EAAiBE,IAAjB;AAC1D,CAFD;;AAIAN,IAAIO,SAAJ,CAAcU,IAAd,GAAqB,UAAUX,IAAV,EAAgB;AACjC,QAAI,KAAKJ,IAAT,EAAe,KAAKW,WAAL,CAAiB,KAAKX,IAAtB,EAA4BI,IAA5B,EAAf,KAAsDF,WAAW,IAAX,EAAiBE,IAAjB;AACzD,CAFD;;AAIAN,IAAIO,SAAJ,CAAcK,KAAd,GAAsB,YAAY;AAC9B,WAAO,KAAKX,IAAL,IAAa,KAAKO,UAAL,CAAgB,KAAKP,IAArB,CAApB;AACH,CAFD;;AAIAD,IAAIO,SAAJ,CAAcW,GAAd,GAAoB,YAAY;AAC5B,WAAO,KAAKhB,IAAL,IAAa,KAAKM,UAAL,CAAgB,KAAKN,IAArB,CAApB;AACH,CAFD;;AAIAF,IAAIO,SAAJ,CAAcY,OAAd,GAAwB,YAAY;AAChC,QAAIC,MAAMC,MAAM,KAAKlB,MAAX,CAAV;AACA,QAAImB,OAAO,KAAKrB,IAAhB;AACA,SAAK,IAAIsB,MAAM,CAAf,EAAkBA,MAAM,KAAKpB,MAA7B,EAAqCoB,KAArC,EAA4C;AACxCH,YAAIG,GAAJ,IAAWD,KAAKE,IAAhB;AACAF,eAAOA,KAAKZ,IAAZ;AACH;AACD,WAAOU,GAAP;AACH,CARD;;AAUApB,IAAIO,SAAJ,CAAckB,MAAd,GAAuB,UAAUC,MAAV,EAAkB;AACrC,QAAIJ,OAAO,KAAKrB,IAAhB;AACA,WAAO,CAAC,CAACqB,IAAT,EAAe;AACX,YAAIZ,OAAOY,KAAKZ,IAAhB;AACA,YAAIgB,OAAOJ,IAAP,CAAJ,EAAkB;AACd,iBAAKd,UAAL,CAAgBc,IAAhB;AACH;AACDA,eAAOZ,IAAP;AACH;AACD,WAAO,IAAP;AACH,CAVD;AAWAiB,OAAO9B,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"DoublyLinkedList.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = DLL;\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while (this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for (var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while (!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\nmodule.exports = exports[\"default\"];"]}
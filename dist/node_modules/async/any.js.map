{"version":3,"sources":["../../../src/node_modules/async/any.js"],"names":["Object","defineProperty","exports","value","_createTester","require","_createTester2","_interopRequireDefault","_doParallel","_doParallel2","_identity","_identity2","obj","__esModule","default","Boolean","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;;AAIA,IAAIC,gBAAgBC,QAAQ,yBAAR,CAApB;;AAEA,IAAIC,iBAAiBC,uBAAuBH,aAAvB,CAArB;;AAEA,IAAII,cAAcH,QAAQ,uBAAR,CAAlB;;AAEA,IAAII,eAAeF,uBAAuBC,WAAvB,CAAnB;;AAEA,IAAIE,YAAYL,QAAQ,iBAAR,CAAhB;;AAEA,IAAIM,aAAaJ,uBAAuBG,SAAvB,CAAjB;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAV,QAAQY,OAAR,GAAkB,CAAC,GAAGL,aAAaK,OAAjB,EAA0B,CAAC,GAAGR,eAAeQ,OAAnB,EAA4BC,OAA5B,EAAqCJ,WAAWG,OAAhD,CAA1B,CAAlB;AACAE,OAAOd,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"any.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createTester = require('./internal/createTester');\n\nvar _createTester2 = _interopRequireDefault(_createTester);\n\nvar _doParallel = require('./internal/doParallel');\n\nvar _doParallel2 = _interopRequireDefault(_doParallel);\n\nvar _identity = require('lodash/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nexports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));\nmodule.exports = exports['default'];"]}
{"version":3,"sources":["../../../src/node_modules/async/concatLimit.js"],"names":["Object","defineProperty","exports","value","default","coll","limit","iteratee","callback","_noop2","_iteratee","_wrapAsync2","_mapLimit2","val","err","_slice2","arguments","mapResults","result","i","length","_concat","apply","_noop","require","_interopRequireDefault","_wrapAsync","_slice","_mapLimit","obj","__esModule","Array","prototype","concat","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;;AAIAD,QAAQE,OAAR,GAAkB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;AACzDA,eAAWA,YAAYC,OAAOL,OAA9B;AACA,QAAIM,YAAY,CAAC,GAAGC,YAAYP,OAAhB,EAAyBG,QAAzB,CAAhB;AACA,KAAC,GAAGK,WAAWR,OAAf,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC,UAAUO,GAAV,EAAeL,QAAf,EAAyB;AAC1DE,kBAAUG,GAAV,EAAe,UAAUC,GAAV,CAAc,aAAd,EAA6B;AACxC,gBAAIA,GAAJ,EAAS,OAAON,SAASM,GAAT,CAAP;AACT,mBAAON,SAAS,IAAT,EAAe,CAAC,GAAGO,QAAQX,OAAZ,EAAqBY,SAArB,EAAgC,CAAhC,CAAf,CAAP;AACH,SAHD;AAIH,KALD,EAKG,UAAUF,GAAV,EAAeG,UAAf,EAA2B;AAC1B,YAAIC,SAAS,EAAb;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,WAAWG,MAA/B,EAAuCD,GAAvC,EAA4C;AACxC,gBAAIF,WAAWE,CAAX,CAAJ,EAAmB;AACfD,yBAASG,QAAQC,KAAR,CAAcJ,MAAd,EAAsBD,WAAWE,CAAX,CAAtB,CAAT;AACH;AACJ;;AAED,eAAOX,SAASM,GAAT,EAAcI,MAAd,CAAP;AACH,KAdD;AAeH,CAlBD;;AAoBA,IAAIK,QAAQC,QAAQ,aAAR,CAAZ;;AAEA,IAAIf,SAASgB,uBAAuBF,KAAvB,CAAb;;AAEA,IAAIG,aAAaF,QAAQ,sBAAR,CAAjB;;AAEA,IAAIb,cAAcc,uBAAuBC,UAAvB,CAAlB;;AAEA,IAAIC,SAASH,QAAQ,kBAAR,CAAb;;AAEA,IAAIT,UAAUU,uBAAuBE,MAAvB,CAAd;;AAEA,IAAIC,YAAYJ,QAAQ,YAAR,CAAhB;;AAEA,IAAIZ,aAAaa,uBAAuBG,SAAvB,CAAjB;;AAEA,SAASH,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEzB,SAASyB,GAAX,EAArC;AAAwD;;AAE/F,IAAIR,UAAUU,MAAMC,SAAN,CAAgBC,MAA9B;;AAEA;;;;;;;;;;;;;;;;;;AAkBAC,OAAOhC,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"concatLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (coll, limit, iteratee, callback) {\n    callback = callback || _noop2.default;\n    var _iteratee = (0, _wrapAsync2.default)(iteratee);\n    (0, _mapLimit2.default)(coll, limit, function (val, callback) {\n        _iteratee(val, function (err /*, ...args*/) {\n            if (err) return callback(err);\n            return callback(null, (0, _slice2.default)(arguments, 1));\n        });\n    }, function (err, mapResults) {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = _concat.apply(result, mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nvar _mapLimit = require('./mapLimit');\n\nvar _mapLimit2 = _interopRequireDefault(_mapLimit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _concat = Array.prototype.concat;\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nmodule.exports = exports['default'];"]}
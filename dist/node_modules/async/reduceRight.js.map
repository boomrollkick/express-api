{"version":3,"sources":["../../../src/node_modules/async/reduceRight.js"],"names":["Object","defineProperty","exports","value","default","reduceRight","_reduce","require","_reduce2","_interopRequireDefault","_slice","_slice2","obj","__esModule","array","memo","iteratee","callback","reversed","reverse","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,UAAUC,QAAQ,UAAR,CAAd;;AAEA,IAAIC,WAAWC,uBAAuBH,OAAvB,CAAf;;AAEA,IAAII,SAASH,QAAQ,kBAAR,CAAb;;AAEA,IAAII,UAAUF,uBAAuBC,MAAvB,CAAd;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAER,SAASQ,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASP,WAAT,CAAqBS,KAArB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsD;AACpD,MAAIC,WAAW,CAAC,GAAGP,QAAQP,OAAZ,EAAqBU,KAArB,EAA4BK,OAA5B,EAAf;AACA,GAAC,GAAGX,SAASJ,OAAb,EAAsBc,QAAtB,EAAgCH,IAAhC,EAAsCC,QAAtC,EAAgDC,QAAhD;AACD;AACDG,OAAOlB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"reduceRight.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = reduceRight;\n\nvar _reduce = require('./reduce');\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = (0, _slice2.default)(array).reverse();\n  (0, _reduce2.default)(reversed, memo, iteratee, callback);\n}\nmodule.exports = exports['default'];"]}
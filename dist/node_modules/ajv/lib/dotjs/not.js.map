{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/not.js"],"names":["module","exports","generate_not","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$nextValid","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","$allErrorsOption","validate","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async"],"mappings":"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","file":"not.js","sourcesContent":["'use strict';\nmodule.exports = function generate_not(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n"]}
{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/oneOf.js"],"names":["module","exports","generate_oneOf","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$currentBaseId","baseId","$wasComposite","compositeRule","arr1","$sch","$i","l1","length","schemaHasRules","RULES","all","validate","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","async"],"mappings":"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","file":"oneOf.js","sourcesContent":["'use strict';\nmodule.exports = function generate_oneOf(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';\n  var $currentBaseId = $it.baseId;\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n"]}
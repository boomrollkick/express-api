{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/pattern.js"],"names":["module","exports","generate_pattern","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$isData","v5","$schemaValue","getData","dataPathArr","$regexp","usePattern","$$outStack","push","createErrors","errorPath","toQuotedString","messages","escapeQuotes","verbose","__err","pop","compositeRule","async"],"mappings":"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","file":"pattern.js","sourcesContent":["'use strict';\nmodule.exports = function generate_pattern(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}
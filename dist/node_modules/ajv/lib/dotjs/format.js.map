{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/format.js"],"names":["module","exports","generate_format","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","format","$isData","v5","$schemaValue","getData","dataPathArr","$unknownFormats","unknownFormats","$allowUnknown","Array","isArray","$format","async","yieldAwait","formats","indexOf","Error","console","warn","$isObject","RegExp","validate","$async","$formatRef","$$outStack","push","createErrors","errorPath","toQuotedString","messages","escapeQuotes","verbose","__err","pop","compositeRule"],"mappings":"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","file":"format.js","sourcesContent":["'use strict';\nmodule.exports = function generate_format(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var isObject' + ($lvl) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; if (isObject' + ($lvl) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats === true || $allowUnknown) {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? ' + (it.yieldAwait) + ' ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats === true || ($allowUnknown && $unknownFormats.indexOf($schema) == -1)) {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      } else {\n        if (!$allowUnknown) {\n          console.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n          if ($unknownFormats !== 'ignore') console.warn('In the next major version it will throw exception. See option unknownFormats for more information');\n        }\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(' + (it.yieldAwait) + ' ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}
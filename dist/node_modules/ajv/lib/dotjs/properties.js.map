{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/properties.js"],"names":["module","exports","generate_properties","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$key","$dataNxt","$nextData","$schemaKeys","Object","keys","$pProperties","patternProperties","$pPropertyKeys","$aProperties","additionalProperties","$someProperties","length","$noAdditional","$additionalIsSchema","$removeAdditional","removeAdditional","$checkAdditional","$ownProperties","ownProperties","$currentBaseId","baseId","$required","required","v5","loopRequired","$requiredHash","toHash","$pgProperties","patternGroups","$pgPropertyKeys","arr1","$propertyKey","i1","l1","toQuotedString","arr2","$pProperty","$i","l2","usePattern","arr3","$pgProperty","l3","$currentErrorPath","errorPath","$additionalProperty","_errorDataPathProperty","getPathExpr","jsonPointers","$currErrSchemaPath","$$outStack","push","createErrors","messages","verbose","__err","pop","compositeRule","async","$wasComposite","$passData","dataPathArr","$code","validate","varOccurences","varReplace","$useDefaults","useDefaults","arr4","i4","l4","$sch","schemaHasRules","RULES","all","$prop","$hasDefault","default","undefined","escapeFragment","getPath","$useData","$missingProperty","escapeQuotes","arr5","i5","l5","arr6","i6","l6","$pgSchema","$pgMin","minimum","$pgMax","maximum","$limit","$reason","$moreOrLess","cleanUpCode"],"mappings":"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","file":"properties.js","sourcesContent":["'use strict';\nmodule.exports = function generate_properties(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  if (it.opts.v5) {\n    var $pgProperties = it.schema.patternGroups || {},\n      $pgPropertyKeys = Object.keys($pgProperties);\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($checkAdditional) {\n    out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';\n    if ($ownProperties) {\n      out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 5) {\n          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      if (it.opts.v5 && $pgPropertyKeys && $pgPropertyKeys.length) {\n        var arr3 = $pgPropertyKeys;\n        if (arr3) {\n          var $pgProperty, $i = -1,\n            l3 = arr3.length - 1;\n          while ($i < l3) {\n            $pgProperty = arr3[$i += 1];\n            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'should NOT have additional properties\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr4 = $schemaKeys;\n    if (arr4) {\n      var $propertyKey, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $propertyKey = arr4[i4 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  var arr5 = $pPropertyKeys;\n  if (arr5) {\n    var $pProperty, i5 = -1,\n      l5 = arr5.length - 1;\n    while (i5 < l5) {\n      $pProperty = arr5[i5 += 1];\n      var $sch = $pProperties[$pProperty];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n        $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n        out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';\n        if ($ownProperties) {\n          out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';\n        }\n        out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n        $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n        var $passData = $data + '[' + $key + ']';\n        $it.dataPathArr[$dataNxt] = $key;\n        var $code = it.validate($it);\n        $it.baseId = $currentBaseId;\n        if (it.util.varOccurences($code, $nextData) < 2) {\n          out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n        } else {\n          out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n        }\n        if ($breakOnError) {\n          out += ' if (!' + ($nextValid) + ') break; ';\n        }\n        out += ' } ';\n        if ($breakOnError) {\n          out += ' else ' + ($nextValid) + ' = true; ';\n        }\n        out += ' }  ';\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if (it.opts.v5) {\n    var arr6 = $pgPropertyKeys;\n    if (arr6) {\n      var $pgProperty, i6 = -1,\n        l6 = arr6.length - 1;\n      while (i6 < l6) {\n        $pgProperty = arr6[i6 += 1];\n        var $pgSchema = $pgProperties[$pgProperty],\n          $sch = $pgSchema.schema;\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';\n          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';\n          out += ' var pgPropCount' + ($lvl) + ' = 0; for (var ' + ($key) + ' in ' + ($data) + ') {  ';\n          if ($ownProperties) {\n            out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';\n          }\n          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n          var $pgMin = $pgSchema.minimum,\n            $pgMax = $pgSchema.maximum;\n          if ($pgMin !== undefined || $pgMax !== undefined) {\n            out += ' var ' + ($valid) + ' = true; ';\n            var $currErrSchemaPath = $errSchemaPath;\n            if ($pgMin !== undefined) {\n              var $limit = $pgMin,\n                $reason = 'minimum',\n                $moreOrLess = 'less';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n              if ($pgMax !== undefined) {\n                out += ' else ';\n              }\n            }\n            if ($pgMax !== undefined) {\n              var $limit = $pgMax,\n                $reason = 'maximum',\n                $moreOrLess = 'more';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n            $errSchemaPath = $currErrSchemaPath;\n            if ($breakOnError) {\n              out += ' if (' + ($valid) + ') { ';\n              $closingBraces += '}';\n            }\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]}
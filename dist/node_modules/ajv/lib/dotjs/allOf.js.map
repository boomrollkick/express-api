{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/allOf.js"],"names":["module","exports","generate_allOf","it","$keyword","out","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$it","copy","$closingBraces","level","$nextValid","$currentBaseId","baseId","$allSchemasEmpty","arr1","$sch","$i","l1","length","schemaHasRules","RULES","all","validate","slice","cleanUpCode"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,QAA5B,EAAsC;AACrD,MAAIC,MAAM,GAAV;AACA,MAAIC,UAAUH,GAAGI,MAAH,CAAUH,QAAV,CAAd;AACA,MAAII,cAAcL,GAAGM,UAAH,GAAgBN,GAAGO,IAAH,CAAQC,WAAR,CAAoBP,QAApB,CAAlC;AACA,MAAIQ,iBAAiBT,GAAGU,aAAH,GAAmB,GAAnB,GAAyBT,QAA9C;AACA,MAAIU,gBAAgB,CAACX,GAAGY,IAAH,CAAQC,SAA7B;AACA,MAAIC,MAAMd,GAAGO,IAAH,CAAQQ,IAAR,CAAaf,EAAb,CAAV;AACA,MAAIgB,iBAAiB,EAArB;AACAF,MAAIG,KAAJ;AACA,MAAIC,aAAa,UAAUJ,IAAIG,KAA/B;AACA,MAAIE,iBAAiBL,IAAIM,MAAzB;AAAA,MACEC,mBAAmB,IADrB;AAEA,MAAIC,OAAOnB,OAAX;AACA,MAAImB,IAAJ,EAAU;AACR,QAAIC,IAAJ;AAAA,QAAUC,KAAK,CAAC,CAAhB;AAAA,QACEC,KAAKH,KAAKI,MAAL,GAAc,CADrB;AAEA,WAAOF,KAAKC,EAAZ,EAAgB;AACdF,aAAOD,KAAKE,MAAM,CAAX,CAAP;AACA,UAAIxB,GAAGO,IAAH,CAAQoB,cAAR,CAAuBJ,IAAvB,EAA6BvB,GAAG4B,KAAH,CAASC,GAAtC,CAAJ,EAAgD;AAC9CR,2BAAmB,KAAnB;AACAP,YAAIV,MAAJ,GAAamB,IAAb;AACAT,YAAIR,UAAJ,GAAiBD,cAAc,GAAd,GAAoBmB,EAApB,GAAyB,GAA1C;AACAV,YAAIJ,aAAJ,GAAoBD,iBAAiB,GAAjB,GAAuBe,EAA3C;AACAtB,eAAO,OAAQF,GAAG8B,QAAH,CAAYhB,GAAZ,CAAR,GAA4B,GAAnC;AACAA,YAAIM,MAAJ,GAAaD,cAAb;AACA,YAAIR,aAAJ,EAAmB;AACjBT,iBAAO,UAAWgB,UAAX,GAAyB,MAAhC;AACAF,4BAAkB,GAAlB;AACD;AACF;AACF;AACF;AACD,MAAIL,aAAJ,EAAmB;AACjB,QAAIU,gBAAJ,EAAsB;AACpBnB,aAAO,eAAP;AACD,KAFD,MAEO;AACLA,aAAO,MAAOc,eAAee,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAP,GAAsC,GAA7C;AACD;AACF;AACD7B,QAAMF,GAAGO,IAAH,CAAQyB,WAAR,CAAoB9B,GAApB,CAAN;AACA,SAAOA,GAAP;AACD,CAzCD","file":"allOf.js","sourcesContent":["'use strict';\nmodule.exports = function generate_allOf(it, $keyword) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]}
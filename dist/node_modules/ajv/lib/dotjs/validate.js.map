{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/validate.js"],"names":["module","exports","generate_validate","it","$keyword","out","$async","schema","isTop","$top","$lvl","level","$dataLvl","dataLevel","$data","rootId","resolve","fullPath","root","id","baseId","async","$es7","opts","yieldAwait","dataPathArr","undefined","url","Error","$valid","$breakOnError","allErrors","$closingBraces1","$closingBraces2","$typeSchema","type","$typeIsArray","Array","isArray","coerceTypes","$coerceToTypes","util","coerceToTypes","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$method","$dataType","$coerced","$bracesCoercion","arr1","$type","$i","l1","length","$$outStack","push","createErrors","errorPath","toQuotedString","join","messages","verbose","__err","pop","compositeRule","$parentData","$parentDataProperty","$refKeywords","$ref","schemaHasRulesExcept","RULES","all","extendRefs","console","log","code","arr2","$rulesGroup","i2","l2","$shouldUseGroup","checkDataType","useDefaults","properties","$schema","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","default","$passData","getProperty","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","keyword","$typeChecked","cleanUpCode","cleanUpVarErrors","i","additionalProperties","patternProperties","v5","patternGroups"],"mappings":"AAAA;;;;AACAA,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyC;AACxD,MAAIC,MAAM,EAAV;AACA,MAAIC,SAASH,GAAGI,MAAH,CAAUD,MAAV,KAAqB,IAAlC;AACA,MAAIH,GAAGK,KAAP,EAAc;AACZ,QAAIC,OAAON,GAAGK,KAAd;AAAA,QACEE,OAAOP,GAAGQ,KAAH,GAAW,CADpB;AAAA,QAEEC,WAAWT,GAAGU,SAAH,GAAe,CAF5B;AAAA,QAGEC,QAAQ,MAHV;AAIAX,OAAGY,MAAH,GAAYZ,GAAGa,OAAH,CAAWC,QAAX,CAAoBd,GAAGe,IAAH,CAAQX,MAAR,CAAeY,EAAnC,CAAZ;AACAhB,OAAGiB,MAAH,GAAYjB,GAAGiB,MAAH,IAAajB,GAAGY,MAA5B;AACA,QAAIT,MAAJ,EAAY;AACVH,SAAGkB,KAAH,GAAW,IAAX;AACA,UAAIC,OAAOnB,GAAGoB,IAAH,CAAQF,KAAR,IAAiB,KAA5B;AACAlB,SAAGqB,UAAH,GAAgBF,OAAO,OAAP,GAAiB,OAAjC;AACD;AACD,WAAOnB,GAAGK,KAAV;AACAL,OAAGsB,WAAH,GAAiB,CAACC,SAAD,CAAjB;AACArB,WAAO,kBAAP;AACA,QAAIC,MAAJ,EAAY;AACV,UAAIgB,IAAJ,EAAU;AACRjB,eAAO,mBAAP;AACD,OAFD,MAEO;AACL,YAAIF,GAAGoB,IAAH,CAAQF,KAAR,IAAiB,KAArB,EAA4B;AAC1BhB,iBAAO,SAAP;AACD;AACDA,eAAO,aAAP;AACD;AACF,KATD,MASO;AACLA,aAAO,aAAP;AACD;AACDA,WAAO,oGAAP;AACAA,WAAO,uBAAP;AACAA,WAAO,+CAAP;AACD,GA9BD,MA8BO;AACL,QAAIK,OAAOP,GAAGQ,KAAd;AAAA,QACEC,WAAWT,GAAGU,SADhB;AAAA,QAEEC,QAAQ,UAAUF,YAAY,EAAtB,CAFV;AAGA,QAAIT,GAAGI,MAAH,CAAUY,EAAd,EAAkBhB,GAAGiB,MAAH,GAAYjB,GAAGa,OAAH,CAAWW,GAAX,CAAexB,GAAGiB,MAAlB,EAA0BjB,GAAGI,MAAH,CAAUY,EAApC,CAAZ;AAClB,QAAIb,UAAU,CAACH,GAAGkB,KAAlB,EAAyB,MAAM,IAAIO,KAAJ,CAAU,6BAAV,CAAN;AACzBvB,WAAO,eAAgBK,IAAhB,GAAwB,YAA/B;AACD;AACD,MAAImB,SAAS,UAAUnB,IAAvB;AAAA,MACEoB,gBAAgB,CAAC3B,GAAGoB,IAAH,CAAQQ,SAD3B;AAAA,MAEEC,kBAAkB,EAFpB;AAAA,MAGEC,kBAAkB,EAHpB;AAIA,MAAIC,cAAc/B,GAAGI,MAAH,CAAU4B,IAA5B;AAAA,MACEC,eAAeC,MAAMC,OAAN,CAAcJ,WAAd,CADjB;AAEA,MAAIA,eAAe/B,GAAGoB,IAAH,CAAQgB,WAA3B,EAAwC;AACtC,QAAIC,iBAAiBrC,GAAGsC,IAAH,CAAQC,aAAR,CAAsBvC,GAAGoB,IAAH,CAAQgB,WAA9B,EAA2CL,WAA3C,CAArB;AACA,QAAIM,cAAJ,EAAoB;AAClB,UAAIG,cAAcxC,GAAGyC,UAAH,GAAgB,OAAlC;AAAA,UACEC,iBAAiB1C,GAAG2C,aAAH,GAAmB,OADtC;AAAA,UAEEC,UAAUX,eAAe,gBAAf,GAAkC,eAF9C;AAGA/B,aAAO,UAAWF,GAAGsC,IAAH,CAAQM,OAAR,EAAiBb,WAAjB,EAA8BpB,KAA9B,EAAqC,IAArC,CAAX,GAAyD,OAAhE;AACA,UAAIkC,YAAY,aAAatC,IAA7B;AAAA,UACEuC,WAAW,YAAYvC,IADzB;AAEAL,aAAO,UAAW2C,SAAX,GAAwB,YAAxB,GAAwClC,KAAxC,GAAiD,IAAxD;AACA,UAAIX,GAAGoB,IAAH,CAAQgB,WAAR,IAAuB,OAA3B,EAAoC;AAClClC,eAAO,UAAW2C,SAAX,GAAwB,kCAAxB,GAA8DlC,KAA9D,GAAuE,KAAvE,GAAgFkC,SAAhF,GAA6F,gBAApG;AACD;AACD3C,aAAO,UAAW4C,QAAX,GAAuB,gBAA9B;AACA,UAAIC,kBAAkB,EAAtB;AACA,UAAIC,OAAOX,cAAX;AACA,UAAIW,IAAJ,EAAU;AACR,YAAIC,KAAJ;AAAA,YAAWC,KAAK,CAAC,CAAjB;AAAA,YACEC,KAAKH,KAAKI,MAAL,GAAc,CADrB;AAEA,eAAOF,KAAKC,EAAZ,EAAgB;AACdF,kBAAQD,KAAKE,MAAM,CAAX,CAAR;AACA,cAAIA,EAAJ,EAAQ;AACNhD,mBAAO,UAAW4C,QAAX,GAAuB,oBAA9B;AACAC,+BAAmB,GAAnB;AACD;AACD,cAAI/C,GAAGoB,IAAH,CAAQgB,WAAR,IAAuB,OAAvB,IAAkCa,SAAS,OAA/C,EAAwD;AACtD/C,mBAAO,UAAW2C,SAAX,GAAwB,mBAAxB,GAA+ClC,KAA/C,GAAwD,kBAAxD,GAA8EmC,QAA9E,GAA0F,KAA1F,GAAmGnC,KAAnG,GAA4G,KAA5G,GAAqHA,KAArH,GAA8H,OAA9H,GAAyIkC,SAAzI,GAAsJ,YAAtJ,GAAsKlC,KAAtK,GAA+K,OAAtL;AACD;AACD,cAAIsC,SAAS,QAAb,EAAuB;AACrB/C,mBAAO,UAAW2C,SAAX,GAAwB,oBAAxB,GAAgDA,SAAhD,GAA6D,mBAA7D,GAAoFC,QAApF,GAAgG,YAAhG,GAAgHnC,KAAhH,GAAyH,aAAzH,GAA0IA,KAA1I,GAAmJ,aAAnJ,GAAoKmC,QAApK,GAAgL,WAAvL;AACD,WAFD,MAEO,IAAIG,SAAS,QAAT,IAAqBA,SAAS,SAAlC,EAA6C;AAClD/C,mBAAO,UAAW2C,SAAX,GAAwB,qBAAxB,GAAiDlC,KAAjD,GAA0D,gBAA1D,GAA8EkC,SAA9E,GAA2F,oBAA3F,GAAmHlC,KAAnH,GAA4H,MAA5H,GAAsIA,KAAtI,GAA+I,OAA/I,GAA0JA,KAA1J,GAAmK,GAA1K;AACA,gBAAIsC,SAAS,SAAb,EAAwB;AACtB/C,qBAAO,WAAYS,KAAZ,GAAqB,OAA5B;AACD;AACDT,mBAAO,QAAS4C,QAAT,GAAqB,MAArB,GAA+BnC,KAA/B,GAAwC,IAA/C;AACD,WANM,MAMA,IAAIsC,SAAS,SAAb,EAAwB;AAC7B/C,mBAAO,UAAWS,KAAX,GAAoB,oBAApB,GAA4CA,KAA5C,GAAqD,YAArD,GAAqEA,KAArE,GAA8E,aAA9E,GAA+FmC,QAA/F,GAA2G,qBAA3G,GAAoInC,KAApI,GAA6I,mBAA7I,GAAoKA,KAApK,GAA6K,UAA7K,GAA2LmC,QAA3L,GAAuM,WAA9M;AACD,WAFM,MAEA,IAAIG,SAAS,MAAb,EAAqB;AAC1B/C,mBAAO,UAAWS,KAAX,GAAoB,eAApB,GAAuCA,KAAvC,GAAgD,YAAhD,GAAgEA,KAAhE,GAAyE,cAAzE,GAA2FmC,QAA3F,GAAuG,WAA9G;AACD,WAFM,MAEA,IAAI9C,GAAGoB,IAAH,CAAQgB,WAAR,IAAuB,OAAvB,IAAkCa,SAAS,OAA/C,EAAwD;AAC7D/C,mBAAO,UAAW2C,SAAX,GAAwB,oBAAxB,GAAgDA,SAAhD,GAA6D,oBAA7D,GAAqFA,SAArF,GAAkG,qBAAlG,GAA2HlC,KAA3H,GAAoI,YAApI,GAAoJmC,QAApJ,GAAgK,MAAhK,GAA0KnC,KAA1K,GAAmL,KAA1L;AACD;AACF;AACF;AACDT,aAAO,MAAO6C,eAAP,GAA0B,OAA1B,GAAqCD,QAArC,GAAiD,sBAAxD;AACA,UAAIO,aAAaA,cAAc,EAA/B;AACAA,iBAAWC,IAAX,CAAgBpD,GAAhB;AACAA,YAAM,EAAN,CA9CkB,CA8CR;AACV,UAAIF,GAAGuD,YAAH,KAAoB,KAAxB,EAA+B;AAC7BrD,eAAO,mBAAoB,MAApB,GAA8B,sCAA9B,GAAwEF,GAAGwD,SAA3E,GAAwF,iBAAxF,GAA6GxD,GAAGsC,IAAH,CAAQmB,cAAR,CAAuBf,cAAvB,CAA7G,GAAuJ,uBAA9J;AACA,YAAIT,YAAJ,EAAkB;AAChB/B,iBAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,SAFD,MAEO;AACLxD,iBAAO,KAAM6B,WAAb;AACD;AACD7B,eAAO,OAAP;AACA,YAAIF,GAAGoB,IAAH,CAAQuC,QAAR,KAAqB,KAAzB,EAAgC;AAC9BzD,iBAAO,0BAAP;AACA,cAAI+B,YAAJ,EAAkB;AAChB/B,mBAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,WAFD,MAEO;AACLxD,mBAAO,KAAM6B,WAAb;AACD;AACD7B,iBAAO,KAAP;AACD;AACD,YAAIF,GAAGoB,IAAH,CAAQwC,OAAZ,EAAqB;AACnB1D,iBAAO,+BAAgCsC,WAAhC,GAA+C,kCAA/C,GAAqFxC,GAAGyC,UAAxF,GAAsG,WAAtG,GAAqH9B,KAArH,GAA8H,GAArI;AACD;AACDT,eAAO,KAAP;AACD,OArBD,MAqBO;AACLA,eAAO,MAAP;AACD;AACD,UAAI2D,QAAQ3D,GAAZ;AACAA,YAAMmD,WAAWS,GAAX,EAAN;AACA,UAAI,CAAC9D,GAAG+D,aAAJ,IAAqBpC,aAAzB,EAAwC;AAAE;AACxC,YAAI3B,GAAGkB,KAAP,EAAc;AACZhB,iBAAO,iCAAkC2D,KAAlC,GAA2C,MAAlD;AACD,SAFD,MAEO;AACL3D,iBAAO,yBAA0B2D,KAA1B,GAAmC,mBAA1C;AACD;AACF,OAND,MAMO;AACL3D,eAAO,gBAAiB2D,KAAjB,GAA0B,8EAAjC;AACD;AACD3D,aAAO,aAAP;AACA,UAAI8D,cAAcvD,WAAW,UAAWA,WAAW,CAAZ,IAAkB,EAA5B,CAAX,GAA6C,YAA/D;AAAA,UACEwD,sBAAsBxD,WAAWT,GAAGsB,WAAH,CAAeb,QAAf,CAAX,GAAsC,oBAD9D;AAEAP,aAAO,MAAOS,KAAP,GAAgB,KAAhB,GAAyBmC,QAAzB,GAAqC,IAA5C;AACA,UAAI,CAACrC,QAAL,EAAe;AACbP,eAAO,SAAU8D,WAAV,GAAyB,iBAAhC;AACD;AACD9D,aAAO,MAAO8D,WAAP,GAAsB,GAAtB,GAA6BC,mBAA7B,GAAoD,MAApD,GAA8DnB,QAA9D,GAA0E,QAAjF;AACD;AACF;AACD,MAAIoB,YAAJ;AACA,MAAIlE,GAAGI,MAAH,CAAU+D,IAAV,KAAmBD,eAAelE,GAAGsC,IAAH,CAAQ8B,oBAAR,CAA6BpE,GAAGI,MAAhC,EAAwCJ,GAAGqE,KAAH,CAASC,GAAjD,EAAsD,MAAtD,CAAlC,CAAJ,EAAsG;AACpG,QAAItE,GAAGoB,IAAH,CAAQmD,UAAR,IAAsB,MAA1B,EAAkC;AAChC,YAAM,IAAI9C,KAAJ,CAAU,uDAAuDzB,GAAG2C,aAA1D,GAA0E,GAApF,CAAN;AACD,KAFD,MAEO,IAAI3C,GAAGoB,IAAH,CAAQmD,UAAR,IAAsB,QAA1B,EAAoC;AACzCL,qBAAe,KAAf;AACAM,cAAQC,GAAR,CAAY,+CAA+CzE,GAAG2C,aAAlD,GAAkE,GAA9E;AACD,KAHM,MAGA,IAAI3C,GAAGoB,IAAH,CAAQmD,UAAR,KAAuB,IAA3B,EAAiC;AACtCC,cAAQC,GAAR,CAAY,gDAAgDzE,GAAG2C,aAAnD,GAAmE,wHAA/E;AACD;AACF;AACD,MAAI3C,GAAGI,MAAH,CAAU+D,IAAV,IAAkB,CAACD,YAAvB,EAAqC;AACnChE,WAAO,MAAOF,GAAGqE,KAAH,CAASC,GAAT,CAAaH,IAAb,CAAkBO,IAAlB,CAAuB1E,EAAvB,EAA2B,MAA3B,CAAP,GAA6C,GAApD;AACA,QAAI2B,aAAJ,EAAmB;AACjBzB,aAAO,oBAAP;AACA,UAAII,IAAJ,EAAU;AACRJ,eAAO,GAAP;AACD,OAFD,MAEO;AACLA,eAAO,UAAWK,IAAlB;AACD;AACDL,aAAO,MAAP;AACA4B,yBAAmB,GAAnB;AACD;AACF,GAZD,MAYO;AACL,QAAI6C,OAAO3E,GAAGqE,KAAd;AACA,QAAIM,IAAJ,EAAU;AACR,UAAIC,WAAJ;AAAA,UAAiBC,KAAK,CAAC,CAAvB;AAAA,UACEC,KAAKH,KAAKvB,MAAL,GAAc,CADrB;AAEA,aAAOyB,KAAKC,EAAZ,EAAgB;AACdF,sBAAcD,KAAKE,MAAM,CAAX,CAAd;AACA,YAAIE,gBAAgBH,WAAhB,CAAJ,EAAkC;AAChC,cAAIA,YAAY5C,IAAhB,EAAsB;AACpB9B,mBAAO,UAAWF,GAAGsC,IAAH,CAAQ0C,aAAR,CAAsBJ,YAAY5C,IAAlC,EAAwCrB,KAAxC,CAAX,GAA6D,MAApE;AACD;AACD,cAAIX,GAAGoB,IAAH,CAAQ6D,WAAR,IAAuB,CAACjF,GAAG+D,aAA/B,EAA8C;AAC5C,gBAAIa,YAAY5C,IAAZ,IAAoB,QAApB,IAAgChC,GAAGI,MAAH,CAAU8E,UAA9C,EAA0D;AACxD,kBAAIC,UAAUnF,GAAGI,MAAH,CAAU8E,UAAxB;AAAA,kBACEE,cAAcC,OAAOC,IAAP,CAAYH,OAAZ,CADhB;AAEA,kBAAII,OAAOH,WAAX;AACA,kBAAIG,IAAJ,EAAU;AACR,oBAAIC,YAAJ;AAAA,oBAAkBC,KAAK,CAAC,CAAxB;AAAA,oBACEC,KAAKH,KAAKnC,MAAL,GAAc,CADrB;AAEA,uBAAOqC,KAAKC,EAAZ,EAAgB;AACdF,iCAAeD,KAAKE,MAAM,CAAX,CAAf;AACA,sBAAIE,OAAOR,QAAQK,YAAR,CAAX;AACA,sBAAIG,KAAKC,OAAL,KAAiBrE,SAArB,EAAgC;AAC9B,wBAAIsE,YAAYlF,QAAQX,GAAGsC,IAAH,CAAQwD,WAAR,CAAoBN,YAApB,CAAxB;AACAtF,2BAAO,WAAY2F,SAAZ,GAAyB,kBAAzB,GAA+CA,SAA/C,GAA4D,KAAnE;AACA,wBAAI7F,GAAGoB,IAAH,CAAQ6D,WAAR,IAAuB,QAA3B,EAAqC;AACnC/E,6BAAO,MAAOF,GAAG+F,UAAH,CAAcJ,KAAKC,OAAnB,CAAP,GAAsC,GAA7C;AACD,qBAFD,MAEO;AACL1F,6BAAO,MAAO8F,KAAKC,SAAL,CAAeN,KAAKC,OAApB,CAAP,GAAuC,GAA9C;AACD;AACD1F,2BAAO,IAAP;AACD;AACF;AACF;AACF,aAtBD,MAsBO,IAAI0E,YAAY5C,IAAZ,IAAoB,OAApB,IAA+BE,MAAMC,OAAN,CAAcnC,GAAGI,MAAH,CAAU8F,KAAxB,CAAnC,EAAmE;AACxE,kBAAIC,OAAOnG,GAAGI,MAAH,CAAU8F,KAArB;AACA,kBAAIC,IAAJ,EAAU;AACR,oBAAIR,IAAJ;AAAA,oBAAUzC,KAAK,CAAC,CAAhB;AAAA,oBACEkD,KAAKD,KAAK/C,MAAL,GAAc,CADrB;AAEA,uBAAOF,KAAKkD,EAAZ,EAAgB;AACdT,yBAAOQ,KAAKjD,MAAM,CAAX,CAAP;AACA,sBAAIyC,KAAKC,OAAL,KAAiBrE,SAArB,EAAgC;AAC9B,wBAAIsE,YAAYlF,QAAQ,GAAR,GAAcuC,EAAd,GAAmB,GAAnC;AACAhD,2BAAO,WAAY2F,SAAZ,GAAyB,kBAAzB,GAA+CA,SAA/C,GAA4D,KAAnE;AACA,wBAAI7F,GAAGoB,IAAH,CAAQ6D,WAAR,IAAuB,QAA3B,EAAqC;AACnC/E,6BAAO,MAAOF,GAAG+F,UAAH,CAAcJ,KAAKC,OAAnB,CAAP,GAAsC,GAA7C;AACD,qBAFD,MAEO;AACL1F,6BAAO,MAAO8F,KAAKC,SAAL,CAAeN,KAAKC,OAApB,CAAP,GAAuC,GAA9C;AACD;AACD1F,2BAAO,IAAP;AACD;AACF;AACF;AACF;AACF;AACD,cAAImG,OAAOzB,YAAY0B,KAAvB;AACA,cAAID,IAAJ,EAAU;AACR,gBAAIE,KAAJ;AAAA,gBAAWC,KAAK,CAAC,CAAjB;AAAA,gBACEC,KAAKJ,KAAKjD,MAAL,GAAc,CADrB;AAEA,mBAAOoD,KAAKC,EAAZ,EAAgB;AACdF,sBAAQF,KAAKG,MAAM,CAAX,CAAR;AACA,kBAAIE,eAAeH,KAAf,CAAJ,EAA2B;AACzBrG,uBAAO,MAAOqG,MAAM7B,IAAN,CAAW1E,EAAX,EAAeuG,MAAMI,OAArB,CAAP,GAAwC,GAA/C;AACA,oBAAIhF,aAAJ,EAAmB;AACjBE,qCAAmB,GAAnB;AACD;AACF;AACF;AACF;AACD,cAAIF,aAAJ,EAAmB;AACjBzB,mBAAO,MAAO2B,eAAP,GAA0B,GAAjC;AACAA,8BAAkB,EAAlB;AACD;AACD,cAAI+C,YAAY5C,IAAhB,EAAsB;AACpB9B,mBAAO,KAAP;AACA,gBAAI6B,eAAeA,gBAAgB6C,YAAY5C,IAA3C,IAAmD,CAACK,cAAxD,EAAwE;AACtE,kBAAIuE,eAAe,IAAnB;AACA1G,qBAAO,UAAP;AACA,kBAAIsC,cAAcxC,GAAGyC,UAAH,GAAgB,OAAlC;AAAA,kBACEC,iBAAiB1C,GAAG2C,aAAH,GAAmB,OADtC;AAEA,kBAAIU,aAAaA,cAAc,EAA/B;AACAA,yBAAWC,IAAX,CAAgBpD,GAAhB;AACAA,oBAAM,EAAN,CAPsE,CAO5D;AACV,kBAAIF,GAAGuD,YAAH,KAAoB,KAAxB,EAA+B;AAC7BrD,uBAAO,mBAAoB,MAApB,GAA8B,sCAA9B,GAAwEF,GAAGwD,SAA3E,GAAwF,iBAAxF,GAA6GxD,GAAGsC,IAAH,CAAQmB,cAAR,CAAuBf,cAAvB,CAA7G,GAAuJ,uBAA9J;AACA,oBAAIT,YAAJ,EAAkB;AAChB/B,yBAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,iBAFD,MAEO;AACLxD,yBAAO,KAAM6B,WAAb;AACD;AACD7B,uBAAO,OAAP;AACA,oBAAIF,GAAGoB,IAAH,CAAQuC,QAAR,KAAqB,KAAzB,EAAgC;AAC9BzD,yBAAO,0BAAP;AACA,sBAAI+B,YAAJ,EAAkB;AAChB/B,2BAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,mBAFD,MAEO;AACLxD,2BAAO,KAAM6B,WAAb;AACD;AACD7B,yBAAO,KAAP;AACD;AACD,oBAAIF,GAAGoB,IAAH,CAAQwC,OAAZ,EAAqB;AACnB1D,yBAAO,+BAAgCsC,WAAhC,GAA+C,kCAA/C,GAAqFxC,GAAGyC,UAAxF,GAAsG,WAAtG,GAAqH9B,KAArH,GAA8H,GAArI;AACD;AACDT,uBAAO,KAAP;AACD,eArBD,MAqBO;AACLA,uBAAO,MAAP;AACD;AACD,kBAAI2D,QAAQ3D,GAAZ;AACAA,oBAAMmD,WAAWS,GAAX,EAAN;AACA,kBAAI,CAAC9D,GAAG+D,aAAJ,IAAqBpC,aAAzB,EAAwC;AAAE;AACxC,oBAAI3B,GAAGkB,KAAP,EAAc;AACZhB,yBAAO,iCAAkC2D,KAAlC,GAA2C,MAAlD;AACD,iBAFD,MAEO;AACL3D,yBAAO,yBAA0B2D,KAA1B,GAAmC,mBAA1C;AACD;AACF,eAND,MAMO;AACL3D,uBAAO,gBAAiB2D,KAAjB,GAA0B,8EAAjC;AACD;AACD3D,qBAAO,KAAP;AACD;AACF;AACD,cAAIyB,aAAJ,EAAmB;AACjBzB,mBAAO,kBAAP;AACA,gBAAII,IAAJ,EAAU;AACRJ,qBAAO,GAAP;AACD,aAFD,MAEO;AACLA,qBAAO,UAAWK,IAAlB;AACD;AACDL,mBAAO,MAAP;AACA4B,+BAAmB,GAAnB;AACD;AACF;AACF;AACF;AACF;AACD,MAAIC,eAAe,CAAC6E,YAAhB,IAAgC,CAACvE,cAArC,EAAqD;AACnD,QAAIG,cAAcxC,GAAGyC,UAAH,GAAgB,OAAlC;AAAA,QACEC,iBAAiB1C,GAAG2C,aAAH,GAAmB,OADtC;AAAA,QAEEC,UAAUX,eAAe,gBAAf,GAAkC,eAF9C;AAGA/B,WAAO,UAAWF,GAAGsC,IAAH,CAAQM,OAAR,EAAiBb,WAAjB,EAA8BpB,KAA9B,EAAqC,IAArC,CAAX,GAAyD,QAAhE;AACA,QAAI0C,aAAaA,cAAc,EAA/B;AACAA,eAAWC,IAAX,CAAgBpD,GAAhB;AACAA,UAAM,EAAN,CAPmD,CAOzC;AACV,QAAIF,GAAGuD,YAAH,KAAoB,KAAxB,EAA+B;AAC7BrD,aAAO,mBAAoB,MAApB,GAA8B,sCAA9B,GAAwEF,GAAGwD,SAA3E,GAAwF,iBAAxF,GAA6GxD,GAAGsC,IAAH,CAAQmB,cAAR,CAAuBf,cAAvB,CAA7G,GAAuJ,uBAA9J;AACA,UAAIT,YAAJ,EAAkB;AAChB/B,eAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,OAFD,MAEO;AACLxD,eAAO,KAAM6B,WAAb;AACD;AACD7B,aAAO,OAAP;AACA,UAAIF,GAAGoB,IAAH,CAAQuC,QAAR,KAAqB,KAAzB,EAAgC;AAC9BzD,eAAO,0BAAP;AACA,YAAI+B,YAAJ,EAAkB;AAChB/B,iBAAO,KAAM6B,YAAY2B,IAAZ,CAAiB,GAAjB,CAAb;AACD,SAFD,MAEO;AACLxD,iBAAO,KAAM6B,WAAb;AACD;AACD7B,eAAO,KAAP;AACD;AACD,UAAIF,GAAGoB,IAAH,CAAQwC,OAAZ,EAAqB;AACnB1D,eAAO,+BAAgCsC,WAAhC,GAA+C,kCAA/C,GAAqFxC,GAAGyC,UAAxF,GAAsG,WAAtG,GAAqH9B,KAArH,GAA8H,GAArI;AACD;AACDT,aAAO,KAAP;AACD,KArBD,MAqBO;AACLA,aAAO,MAAP;AACD;AACD,QAAI2D,QAAQ3D,GAAZ;AACAA,UAAMmD,WAAWS,GAAX,EAAN;AACA,QAAI,CAAC9D,GAAG+D,aAAJ,IAAqBpC,aAAzB,EAAwC;AAAE;AACxC,UAAI3B,GAAGkB,KAAP,EAAc;AACZhB,eAAO,iCAAkC2D,KAAlC,GAA2C,MAAlD;AACD,OAFD,MAEO;AACL3D,eAAO,yBAA0B2D,KAA1B,GAAmC,mBAA1C;AACD;AACF,KAND,MAMO;AACL3D,aAAO,gBAAiB2D,KAAjB,GAA0B,8EAAjC;AACD;AACD3D,WAAO,IAAP;AACD;AACD,MAAIyB,aAAJ,EAAmB;AACjBzB,WAAO,MAAO4B,eAAP,GAA0B,GAAjC;AACD;AACD,MAAIxB,IAAJ,EAAU;AACR,QAAIH,MAAJ,EAAY;AACVD,aAAO,4CAAP;AACAA,aAAO,4CAAP;AACD,KAHD,MAGO;AACLA,aAAO,8BAAP;AACAA,aAAO,8BAAP;AACD;AACDA,WAAO,uBAAP;AACD,GATD,MASO;AACLA,WAAO,UAAWwB,MAAX,GAAqB,qBAArB,GAA8CnB,IAA9C,GAAsD,GAA7D;AACD;AACDL,QAAMF,GAAGsC,IAAH,CAAQuE,WAAR,CAAoB3G,GAApB,CAAN;AACA,MAAII,QAAQqB,aAAZ,EAA2B;AACzBzB,UAAMF,GAAGsC,IAAH,CAAQwE,gBAAR,CAAyB5G,GAAzB,EAA8BC,MAA9B,CAAN;AACD;;AAED,WAAS4E,eAAT,CAAyBH,WAAzB,EAAsC;AACpC,SAAK,IAAImC,IAAI,CAAb,EAAgBA,IAAInC,YAAY0B,KAAZ,CAAkBlD,MAAtC,EAA8C2D,GAA9C;AACE,UAAIL,eAAe9B,YAAY0B,KAAZ,CAAkBS,CAAlB,CAAf,CAAJ,EAA0C,OAAO,IAAP;AAD5C;AAED;;AAED,WAASL,cAAT,CAAwBH,KAAxB,EAA+B;AAC7B,WAAOvG,GAAGI,MAAH,CAAUmG,MAAMI,OAAhB,MAA6BpF,SAA7B,IAA2CgF,MAAMI,OAAN,IAAiB,YAAjB,KAAkC3G,GAAGI,MAAH,CAAU4G,oBAAV,KAAmC,KAAnC,IAA4C,QAAOhH,GAAGI,MAAH,CAAU4G,oBAAjB,KAAyC,QAArF,IAAkGhH,GAAGI,MAAH,CAAU6G,iBAAV,IAA+B5B,OAAOC,IAAP,CAAYtF,GAAGI,MAAH,CAAU6G,iBAAtB,EAAyC7D,MAA1K,IAAsLpD,GAAGoB,IAAH,CAAQ8F,EAAR,IAAclH,GAAGI,MAAH,CAAU+G,aAAxB,IAAyC9B,OAAOC,IAAP,CAAYtF,GAAGI,MAAH,CAAU+G,aAAtB,EAAqC/D,MAAtS,CAAlD;AACD;AACD,SAAOlD,GAAP;AACD,CArXD","file":"validate.js","sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword) {\n  var out = '';\n  var $async = it.schema.$async === true;\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.root.schema.id);\n    it.baseId = it.baseId || it.rootId;\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async == 'co*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data;';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.coerceTypes) {\n    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    if ($coerceToTypes) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';\n      var $dataType = 'dataType' + $lvl,\n        $coerced = 'coerced' + $lvl;\n      out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n      if (it.opts.coerceTypes == 'array') {\n        out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n      }\n      out += ' var ' + ($coerced) + ' = undefined; ';\n      var $bracesCoercion = '';\n      var arr1 = $coerceToTypes;\n      if (arr1) {\n        var $type, $i = -1,\n          l1 = arr1.length - 1;\n        while ($i < l1) {\n          $type = arr1[$i += 1];\n          if ($i) {\n            out += ' if (' + ($coerced) + ' === undefined) { ';\n            $bracesCoercion += '}';\n          }\n          if (it.opts.coerceTypes == 'array' && $type != 'array') {\n            out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n          }\n          if ($type == 'string') {\n            out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n          } else if ($type == 'number' || $type == 'integer') {\n            out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n            if ($type == 'integer') {\n              out += ' && !(' + ($data) + ' % 1)';\n            }\n            out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n          } else if ($type == 'boolean') {\n            out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n          } else if ($type == 'null') {\n            out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n            out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n          }\n        }\n      }\n      out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should be ';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } else {  ';\n      var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n      out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n      if (!$dataLvl) {\n        out += 'if (' + ($parentData) + ' !== undefined)';\n      }\n      out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } } ';\n    }\n  }\n  var $refKeywords;\n  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs == 'ignore') {\n      $refKeywords = false;\n      console.log('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs !== true) {\n      console.log('$ref: all keywords used in schema at path \"' + it.errSchemaPath + '\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                out += ' ' + ($rule.code(it, $rule.keyword)) + ' ';\n                if ($breakOnError) {\n                  $closingBraces1 += '}';\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              var $typeChecked = true;\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($typeSchema && !$typeChecked && !$coerceToTypes) {\n    var $schemaPath = it.schemaPath + '.type',\n      $errSchemaPath = it.errSchemaPath + '/type',\n      $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n      if ($typeIsArray) {\n        out += '' + ($typeSchema.join(\",\"));\n      } else {\n        out += '' + ($typeSchema);\n      }\n      out += '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should be ';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return true;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top && $breakOnError) {\n    out = it.util.cleanUpVarErrors(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    for (var i = 0; i < $rulesGroup.rules.length; i++)\n      if ($shouldUseRule($rulesGroup.rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length) || (it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length)));\n  }\n  return out;\n}\n"]}
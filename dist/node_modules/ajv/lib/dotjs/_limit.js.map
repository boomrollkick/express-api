{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/dotjs/_limit.js"],"names":["module","exports","generate__limit","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$isData","v5","$schemaValue","getData","dataPathArr","$isMax","$exclusiveKeyword","$schemaExcl","$isDataExcl","$op","$notOp","$schemaValueExcl","$exclusive","$opExpr","$opStr","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async"],"mappings":"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","file":"_limit.js","sourcesContent":["'use strict';\nmodule.exports = function generate__limit(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<';\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var exclusive' + ($lvl) + '; if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && typeof ' + ($schemaValueExcl) + ' != \\'undefined\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ((exclusive' + ($lvl) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ') || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = exclusive' + ($lvl) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    out += ' if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($data) + ' ' + ($notOp);\n    if ($exclusive) {\n      out += '=';\n    }\n    out += ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') {';\n  }\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schema) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}
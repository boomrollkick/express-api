{"version":3,"sources":["../../../../src/node_modules/ajv/lib/v5.js"],"names":["META_SCHEMA_ID","module","exports","enable","enableV5","ajv","inlineFunctions","require","_opts","meta","metaSchema","addMetaSchema","_addKeyword","addKeyword","type","macro","containsMacro","_formatLimit","keyword","types","inlineFunc","definition","inline","statements","errors","schema","not","items"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,uFAArB;;AAEAC,OAAOC,OAAP,GAAiB;AACfC,UAAQC,QADO;AAEfJ,kBAAgBA;AAFD,CAAjB;;AAMA,SAASI,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAIC,kBAAkB;AACpB,cAAUC,QAAQ,gBAAR,CADU;AAEpB,gBAAYA,QAAQ,kBAAR,CAFQ;AAGpB,oBAAgBA,QAAQ,sBAAR,CAHI;AAIpB,uBAAmBA,QAAQ,yBAAR;AAJC,GAAtB;;AAOA,MAAIF,IAAIG,KAAJ,CAAUC,IAAV,KAAmB,KAAvB,EAA8B;AAC5B,QAAIC,aAAaH,QAAQ,4BAAR,CAAjB;AACAF,QAAIM,aAAJ,CAAkBD,UAAlB,EAA8BV,cAA9B;AACD;AACDY,cAAY,UAAZ;AACAP,MAAIQ,UAAJ,CAAe,UAAf,EAA2B,EAAEC,MAAM,OAAR,EAAiBC,OAAOC,aAAxB,EAA3B;;AAEAJ,cAAY,eAAZ,EAA6B,QAA7B,EAAuCN,gBAAgBW,YAAvD;AACAL,cAAY,eAAZ,EAA6B,QAA7B,EAAuCN,gBAAgBW,YAAvD;AACAZ,MAAIQ,UAAJ,CAAe,wBAAf;AACAR,MAAIQ,UAAJ,CAAe,wBAAf;;AAEAR,MAAIQ,UAAJ,CAAe,eAAf,EApBqB,CAoBY;AACjCD,cAAY,iBAAZ,EAA+B,QAA/B;AACAA,cAAY,QAAZ;;AAGA,WAASA,WAAT,CAAqBM,OAArB,EAA8BC,KAA9B,EAAqCC,UAArC,EAAiD;AAC/C,QAAIC,aAAa;AACfC,cAAQF,cAAcd,gBAAgBY,OAAhB,CADP;AAEfK,kBAAY,IAFG;AAGfC,cAAQ;AAHO,KAAjB;AAKA,QAAIL,KAAJ,EAAWE,WAAWP,IAAX,GAAkBK,KAAlB;AACXd,QAAIQ,UAAJ,CAAeK,OAAf,EAAwBG,UAAxB;AACD;AACF;;AAGD,SAASL,aAAT,CAAuBS,MAAvB,EAA+B;AAC7B,SAAO;AACLC,SAAK,EAAEC,OAAO,EAAED,KAAKD,MAAP,EAAT;AADA,GAAP;AAGD","file":"v5.js","sourcesContent":["'use strict';\n\nvar META_SCHEMA_ID = 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json';\n\nmodule.exports = {\n  enable: enableV5,\n  META_SCHEMA_ID: META_SCHEMA_ID\n};\n\n\nfunction enableV5(ajv) {\n  var inlineFunctions = {\n    'switch': require('./dotjs/switch'),\n    'constant': require('./dotjs/constant'),\n    '_formatLimit': require('./dotjs/_formatLimit'),\n    'patternRequired': require('./dotjs/patternRequired')\n  };\n\n  if (ajv._opts.meta !== false) {\n    var metaSchema = require('./refs/json-schema-v5.json');\n    ajv.addMetaSchema(metaSchema, META_SCHEMA_ID);\n  }\n  _addKeyword('constant');\n  ajv.addKeyword('contains', { type: 'array', macro: containsMacro });\n\n  _addKeyword('formatMaximum', 'string', inlineFunctions._formatLimit);\n  _addKeyword('formatMinimum', 'string', inlineFunctions._formatLimit);\n  ajv.addKeyword('formatExclusiveMaximum');\n  ajv.addKeyword('formatExclusiveMinimum');\n\n  ajv.addKeyword('patternGroups'); // implemented in properties.jst\n  _addKeyword('patternRequired', 'object');\n  _addKeyword('switch');\n\n\n  function _addKeyword(keyword, types, inlineFunc) {\n    var definition = {\n      inline: inlineFunc || inlineFunctions[keyword],\n      statements: true,\n      errors: 'full'\n    };\n    if (types) definition.type = types;\n    ajv.addKeyword(keyword, definition);\n  }\n}\n\n\nfunction containsMacro(schema) {\n  return {\n    not: { items: { not: schema } }\n  };\n}\n"]}
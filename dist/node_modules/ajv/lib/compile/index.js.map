{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/compile/index.js"],"names":["resolve","require","util","stableStringify","async","beautify","loadBeautify","undefined","name","js_beautify","e","validateGenerator","co","ucs2length","equal","ValidationError","module","exports","compile","schema","root","localRefs","baseId","self","opts","_opts","refVal","refs","patterns","patternsHash","defaults","defaultsHash","customRules","keepSourceCode","sourceCode","c","checkCompiling","call","compilation","_compilations","index","compiling","callValidate","formats","_formats","RULES","v","localCompile","validate","cv","errors","$async","endCompiling","result","apply","arguments","_schema","_root","isRoot","transpile","setup","isTop","schemaPath","errSchemaPath","errorPath","resolveRef","usePattern","useDefault","useCustomRule","vars","refValCode","patternCode","defaultCode","customRuleCode","console","error","validateCode","_transpileFunc","makeValidate","Function","source","ref","url","refIndex","_refVal","refCode","resolvedRef","rootRefId","addLocalRef","localSchema","inlineRef","inlineRefs","replaceLocalRef","refId","length","code","inline","regexStr","value","toQuotedString","valueStr","rule","parentSchema","it","validateSchema","definition","valid","message","errorsText","Error","macro","keyword","compIndex","i","splice","arr","statement"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , stableStringify = require('json-stable-stringify')\n  , async = require('../async');\n\nvar beautify;\n\nfunction loadBeautify(){\n  if (beautify === undefined) {\n    var name = 'js-beautify';\n    try { beautify = require(name).js_beautify; }\n    catch(e) { beautify = false; }\n  }\n}\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar co = require('co');\nvar ucs2length = util.ucs2length;\nvar equal = require('./equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = require('./validation_error');\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = []\n    , keepSourceCode = opts.sourceCode !== false;\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (keepSourceCode) cv.sourceCode = v.sourceCode;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  function callValidate() {\n    var validate = compilation.validate;\n    var result = validate.apply(null, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n    if ($async && !opts.transpile) async.setup(opts);\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.beautify) {\n      loadBeautify();\n      /* istanbul ignore else */\n      if (beautify) sourceCode = beautify(sourceCode, opts.beautify);\n      else console.error('\"npm install js-beautify\" to use beautify option');\n    }\n    // console.log('\\n\\n\\n *** \\n', sourceCode);\n    var validate, validateCode\n      , transpile = opts._transpileFunc;\n    try {\n      validateCode = $async && transpile\n                      ? transpile(sourceCode)\n                      : sourceCode;\n\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'co',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        validateCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        co,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      console.error('Error compiling schema, function code:', validateCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (keepSourceCode) validate.sourceCode = sourceCode;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (!v) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v) {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    var validateSchema = rule.definition.validateSchema;\n    if (validateSchema && self._opts.validateSchema !== false) {\n      var valid = validateSchema(schema);\n      if (!valid) {\n        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n        if (self._opts.validateSchema == 'log') console.error(message);\n        else throw new Error(message);\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n    }\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] ? 'var refVal' + i + ' = refVal[' + i + '];' : '';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n"]}
{"version":3,"sources":["../../../../../src/node_modules/ajv/lib/compile/rules.js"],"names":["ruleModules","require","toHash","module","exports","rules","RULES","type","ALL","KEYWORDS","TYPES","all","forEach","group","map","keyword","push","rule","code","keywords","concat","types","custom"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,UAAR,CAAlB;AAAA,IACIC,SAASD,QAAQ,QAAR,EAAkBC,MAD/B;;AAGAC,OAAOC,OAAP,GAAiB,SAASC,KAAT,GAAiB;AAChC,MAAIC,QAAQ,CACV,EAAEC,MAAM,QAAR;AACEF,WAAO,CAAE,SAAF,EAAa,SAAb,EAAwB,YAAxB,CADT,EADU,EAGV,EAAEE,MAAM,QAAR;AACEF,WAAO,CAAE,WAAF,EAAe,WAAf,EAA4B,SAA5B,EAAuC,QAAvC,CADT,EAHU,EAKV,EAAEE,MAAM,OAAR;AACEF,WAAO,CAAE,UAAF,EAAc,UAAd,EAA0B,aAA1B,EAAyC,OAAzC,CADT,EALU,EAOV,EAAEE,MAAM,QAAR;AACEF,WAAO,CAAE,eAAF,EAAmB,eAAnB,EAAoC,UAApC,EAAgD,cAAhD,EAAgE,YAAhE,CADT,EAPU,EASV,EAAEA,OAAO,CAAE,MAAF,EAAU,MAAV,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,OAA3C,CAAT,EATU,CAAZ;;AAYA,MAAIG,MAAM,CAAE,MAAF,EAAU,sBAAV,EAAkC,mBAAlC,CAAV;AACA,MAAIC,WAAW,CAAE,iBAAF,EAAqB,SAArB,EAAgC,IAAhC,EAAsC,OAAtC,EAA+C,aAA/C,EAA8D,SAA9D,CAAf;AACA,MAAIC,QAAQ,CAAE,QAAF,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C,QAA1C,EAAoD,SAApD,EAA+D,MAA/D,CAAZ;AACAJ,QAAMK,GAAN,GAAYT,OAAOM,GAAP,CAAZ;;AAEAF,QAAMM,OAAN,CAAc,UAAUC,KAAV,EAAiB;AAC7BA,UAAMR,KAAN,GAAcQ,MAAMR,KAAN,CAAYS,GAAZ,CAAgB,UAAUC,OAAV,EAAmB;AAC/CP,UAAIQ,IAAJ,CAASD,OAAT;AACA,UAAIE,OAAOX,MAAMK,GAAN,CAAUI,OAAV,IAAqB;AAC9BA,iBAASA,OADqB;AAE9BG,cAAMlB,YAAYe,OAAZ;AAFwB,OAAhC;AAIA,aAAOE,IAAP;AACD,KAPa,CAAd;AAQD,GATD;;AAWAX,QAAMa,QAAN,GAAiBjB,OAAOM,IAAIY,MAAJ,CAAWX,QAAX,CAAP,CAAjB;AACAH,QAAMe,KAAN,GAAcnB,OAAOQ,KAAP,CAAd;AACAJ,QAAMgB,MAAN,GAAe,EAAf;;AAEA,SAAOhB,KAAP;AACD,CAlCD","file":"rules.js","sourcesContent":["'use strict';\n\nvar ruleModules = require('./_rules')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ 'maximum', 'minimum', 'multipleOf'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'items' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'properties' ] },\n    { rules: [ '$ref', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }\n  ];\n\n  var ALL = [ 'type', 'additionalProperties', 'patternProperties' ];\n  var KEYWORDS = [ 'additionalItems', '$schema', 'id', 'title', 'description', 'default' ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword]\n      };\n      return rule;\n    });\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.types = toHash(TYPES);\n  RULES.custom = {};\n\n  return RULES;\n};\n"]}
{"version":3,"sources":["../../../../src/node_modules/ajv/lib/keyword.js"],"names":["IDENTIFIER","customRuleCode","require","module","exports","add","addKeyword","get","getKeyword","remove","removeKeyword","keyword","definition","RULES","keywords","Error","test","macro","valid","undefined","dataType","type","Array","isArray","i","len","length","checkDataType","_addRule","$data","_opts","v5","validate","metaSchema","anyOf","validateSchema","compile","all","ruleGroup","rg","rules","push","rule","custom","code","types","j","splice"],"mappings":"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","file":"keyword.js","sourcesContent":["'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$\\-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined)\n      throw new Error('\"valid\" option cannot be used with macro keywords');\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i, len = dataType.length;\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n\n    var $data = definition.$data === true && this._opts.v5;\n    if ($data && !definition.validate)\n      throw new Error('$data support: \"validate\" function is not defined');\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n}\n"]}